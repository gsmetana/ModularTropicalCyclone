(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    520383,      10544]
NotebookOptionsPosition[    509821,      10251]
NotebookOutlinePosition[    510182,      10267]
CellTagsIndexPosition[    510139,      10264]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Tephigram.", "Chapter",
 CellChangeTimes->{{3.6513309965722637`*^9, 3.651331005635054*^9}}],

Cell[TextData[{
 "Let us begin with the definitions and notations of the various variables:\n\
\npressure\t\t\t: p (in Pascals (Pa))\ndensity\t\t\t\t: \[Rho] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"kg", "/", 
     SuperscriptBox["m", "3"]}], ")"}], TraditionalForm]]],
 "\ntemperature\t\t\t: T (Kelvin (K))\nWater-vapor mass fraction\t: y = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Rho]", "v"], "/", "\[Rho]"}], TraditionalForm]]],
 "\nRelative humidity\t\t: rh = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "v"], "/", 
    RowBox[{"P", "(", "T", ")"}]}], TraditionalForm]]],
 "\nSaturated vapor pressure\t: vp\n\n",
 StyleBox["Subscripts used:\n",
  FontWeight->"Bold"],
 "\t\t\t\nambient\t\t\t: amb\nmoist adiabat\t\t\t: moist\neye\t\t\t\t: eye\n\
tropopause\t\t\t: trop\nsaturated\t\t\t: sat\nwater vapor\t\t\t: v\nlifting \
condensation level\t: switch\nocean-surface value\t\t: s\nunderrunning moist \
air\t\t: underrun.\nTropopause\t\t\t: trop\n\n",
 StyleBox["Derived Subscripts used:\n\n",
  FontWeight->"Bold"],
 "staturated water vapor\t\t: vsat",
 StyleBox["\n",
  FontWeight->"Bold"],
 "amibent ocean-surface value\t: ambs\nwater vapor ambient\t\t: vamb\n\nFor \
the purposes of generating functions and code, we will not directly make use \
of subscripts but rather CAPITAL letters to indicate the subscripts. So, for \
example, rhAMB refers to ambient relative-humidity etc.\n\n\n",
 StyleBox["Constants:\n\n",
  FontWeight->"Bold"],
 "gravity\t\t\t\t: g ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"m", "/", 
     SuperscriptBox["s", "2"]}], ")"}], TraditionalForm]]],
 "\ngas constant for air\t\t: R ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["m", "2"], "/", 
      SuperscriptBox["s", "2"]}], "K"}], ")"}], TraditionalForm]]],
 "\nMolecular weights ratio\t: \[Sigma]\nSpecific heat capacity \t\t: ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "p"], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["m", "2"], "/", 
       SuperscriptBox["s", "2"]}], "K"}], ")"}], " "}], TraditionalForm]]],
 "(at constant pressure).\nSpecific latent heat\t\t: L ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["m", "2"], "/", 
      SuperscriptBox["s", "2"]}], ")"}], " "}], TraditionalForm]]],
 "(phase transition)\nTemperature at ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["0", "o"], "C"}], TraditionalForm]]],
 " in K\t: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", "0"], "=", 
    RowBox[{"273.16", " ", 
     RowBox[{"K", "."}]}]}], TraditionalForm]]],
 "\n\nLet us now define the various constants. The units are taken to be in \
SI units."
}], "Text",
 CellChangeTimes->{{3.6513310163547487`*^9, 3.6513312671196623`*^9}, {
  3.651331301792727*^9, 3.6513313402379847`*^9}, {3.6513313747996473`*^9, 
  3.651331614270059*^9}, {3.6513319274627037`*^9, 3.651331936926682*^9}, {
  3.6513320028775063`*^9, 3.6513320130617113`*^9}, {3.65133211254965*^9, 
  3.6513321429185963`*^9}, {3.6513327650110407`*^9, 3.651332774293647*^9}, {
  3.651332842969988*^9, 3.65133285201278*^9}, {3.651333760076992*^9, 
  3.6513338429561987`*^9}, {3.6513340318830442`*^9, 3.65133411847258*^9}, {
  3.6513344188199778`*^9, 3.6513344294198837`*^9}, {3.651335440290872*^9, 
  3.6513354563575172`*^9}, {3.651338898751156*^9, 3.651338906709519*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", " ", "=", " ", "9.81"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", " ", "=", " ", "287.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", " ", "=", " ", "0.622"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cp", " ", "=", " ", "1004"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", " ", "=", " ", 
   RowBox[{"2.5", " ", 
    RowBox[{"10", "^", "6"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"T0", " ", "=", " ", "273.16"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pAMBS", " ", "=", " ", "101500.0"}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"tAMBS", " ", "=", " ", "299.0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"performIterations", " ", "=", " ", "True"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6513315492697773`*^9, 3.651331559515903*^9}, {
   3.651331618876062*^9, 3.651331641786743*^9}, 3.651331676482914*^9, {
   3.651332146051943*^9, 3.651332154579707*^9}, {3.6513338632773952`*^9, 
   3.6513338649878283`*^9}, {3.651334186551491*^9, 3.651334205015154*^9}, {
   3.6513342470625687`*^9, 3.6513342790716333`*^9}, {3.651334322973473*^9, 
   3.651334327805539*^9}, {3.6513432714886208`*^9, 3.651343271680361*^9}, {
   3.6573073092872953`*^9, 3.6573073155562057`*^9}, {3.6573077516959476`*^9, 
   3.657307753662125*^9}}],

Cell["\<\
Using equation of state, we can obtain the density at the ocean surface level:\
\>", "Text",
 CellChangeTimes->{{3.6513342826611147`*^9, 3.6513343081331167`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Rho]AMBS", " ", "=", " ", 
  RowBox[{"pAMBS", "/", 
   RowBox[{"(", 
    RowBox[{"R", "*", "tAMBS"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.6513315492697773`*^9, 3.651331559515903*^9}, {
   3.651331618876062*^9, 3.651331641786743*^9}, 3.651331676482914*^9, {
   3.651332146051943*^9, 3.651332154579707*^9}, {3.6513338632773952`*^9, 
   3.6513338649878283`*^9}, {3.651334186551491*^9, 3.651334205015154*^9}, {
   3.6513342470625687`*^9, 3.6513342790716333`*^9}, {3.651334309839642*^9, 
   3.6513343137355957`*^9}, {3.651342623411762*^9, 3.651342623556086*^9}}],

Cell[BoxData["1.1823924867403128`"], "Output",
 CellChangeTimes->{
  3.651342623991373*^9, 3.651343320432898*^9, 3.6513448735675583`*^9, 
   3.651345321719305*^9, 3.656872899097754*^9, 3.656942977768896*^9, 
   3.656943644195033*^9, 3.6569438395958138`*^9, 3.6569439302962303`*^9, 
   3.656944599208521*^9, 3.656944690106944*^9, 3.656944800512865*^9, 
   3.656944871039538*^9, 3.656947943072633*^9, 3.656970588608128*^9, 
   3.6569722120306664`*^9, 3.656972270950818*^9, {3.656972342201537*^9, 
   3.656972365553562*^9}, 3.656972759676609*^9, 3.657305785670467*^9, 
   3.65730731736771*^9, 3.657307755176152*^9, 3.657308548756383*^9, 
   3.657308660073989*^9, 3.65730881385518*^9}]
}, Open  ]],

Cell[TextData[{
 "We now obtain relative humidity as a function of pressure ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["rh", "AMB"], "(", "p", ")"}], ")"}], " "}], 
   TraditionalForm]]],
 "and ambient temperature as a function of pressure ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["T", "AMB"], "(", "p", ")"}], ")"}], " "}], 
   TraditionalForm]]],
 "from discrete tabulated data. This data is interpolated to produce a \
continuous function that will be used for further computations:"
}], "Text",
 CellChangeTimes->{{3.6513316531391973`*^9, 3.651331749528617*^9}, {
  3.651331787873177*^9, 3.6513318194026003`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rhAMB", "=", 
    RowBox[{"Interpolation", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"101500", ",", "0.84"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"100000", ",", "0.81"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"95000", ",", "0.81"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"90000", ",", "0.79"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"85000", ",", "0.74"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"80000", ",", "0.70"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"75000", ",", "0.64"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"70000", ",", "0.60"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"65000", ",", "0.56"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"60000", ",", "0.54"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"55000", ",", "0.51"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"50000", ",", "0.49"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"45000", ",", "0.45"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"40000", ",", "0.44"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"30000", ",", "0.39"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"20000", ",", "0.37"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10000", ",", "0.35"}], "}"}]}], "}"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tAMB", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"101500", ",", "299"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"100000", ",", "299"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"95000", ",", "296"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"90000", ",", "293"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"85000", ",", "290"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"80000", ",", "288"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"75000", ",", "285"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"70000", ",", "282"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"65000", ",", "278"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"60000", ",", "274"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"55000", ",", "271"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"50000", ",", "266"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"45000", ",", "261"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"40000", ",", "255"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"30000", ",", "240"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"20000", ",", "218"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"10000", ",", "210"}], "}"}]}], "}"}], ",", 
     RowBox[{"Method", "->", "\"\<Spline\>\""}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.651331765601959*^9, 3.651331781577291*^9}, {
  3.6513318226893463`*^9, 3.6513318230411882`*^9}, {3.651331871496481*^9, 
  3.6513318718565693`*^9}, {3.651333735689184*^9, 3.6513337419112577`*^9}, {
  3.651333854134138*^9, 3.651333856228948*^9}, {3.656872902539194*^9, 
  3.656872907484066*^9}, {3.656943921798991*^9, 3.656943924551968*^9}, {
  3.65694460218151*^9, 3.6569446039499683`*^9}, {3.6569446842776823`*^9, 
  3.656944686582492*^9}, {3.657306039288266*^9, 3.6573060429743233`*^9}, {
  3.657306166830755*^9, 3.657306169071808*^9}}],

Cell[TextData[{
 "The saturated vapor pressure is computed using the following empirical \
formula:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", 
     SubscriptBox["V", "SAT"]], "=", " ", 
    RowBox[{"610.78", " ", 
     SuperscriptBox["e", 
      RowBox[{
       RowBox[{"a", "(", "T", ")"}], 
       FractionBox[
        RowBox[{"(", 
         RowBox[{"T", "-", 
          SubscriptBox["T", "0"]}], ")"}], 
        RowBox[{"T", "-", 
         RowBox[{"b", "(", "T", ")"}]}]]}]]}]}], TraditionalForm]]],
 ",\na(T) = If[T > ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["T", "0"], ",", " ", "17.2693882", ",", " ", 
      "21.8745584"}], "]"}], ","}], TraditionalForm]]],
 "\nb(T) = If[T > ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "0"], TraditionalForm]]],
 ", 35.86, 7.66].\n\nThese values are obtained by performing a curvefit to \
data."
}], "Text",
 CellChangeTimes->{{3.6513318884225388`*^9, 3.65133191075835*^9}, {
  3.651331944267281*^9, 3.651331995256077*^9}, {3.651332178571375*^9, 
  3.651332317776293*^9}, {3.651332399888579*^9, 3.6513324117274446`*^9}, {
  3.6513339042370872`*^9, 3.651333910589479*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "t_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"t", ">", "T0"}], ",", "17.2693882", ",", "21.8745584"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "[", "t_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"t", ">", "T0"}], ",", "35.86", ",", "7.66"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pVSAT", "[", "t_", "]"}], " ", "=", " ", 
   RowBox[{"610.78", "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"a", "[", "t", "]"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"t", "-", "T0"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"t", "-", 
         RowBox[{"b", "[", "t", "]"}]}], ")"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dpVSAT", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"pVSAT", "[", "t", "]"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"a", "[", "t", "]"}], ")"}], "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"T0", "-", 
       RowBox[{"b", "[", "t", "]"}]}], ")"}], "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"t", "-", 
        RowBox[{"b", "[", "t", "]"}]}], ")"}], "^", "2"}]}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.651332321826693*^9, 3.651332377719727*^9}, {
  3.651333872731518*^9, 3.6513338882201967`*^9}, {3.651334153555985*^9, 
  3.651334153967959*^9}, {3.6513425475482283`*^9, 3.651342590282789*^9}}],

Cell[CellGroupData[{

Cell["AMBIENT PROFILES:", "Subsubsection",
 CellChangeTimes->{{3.65687325935104*^9, 3.6568732654059677`*^9}}],

Cell[TextData[{
 "The ambient profiles with altitudes can be computed using equation of \
state:\np = \[Rho] R T \[Rule] \[Rho] = p/(RT), \n\[Rho] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "v"], TraditionalForm]]],
 "= ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Rho]", "v"], TraditionalForm]]],
 "R T \[Rule] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "v"], "=", " ", "y", " "}], TraditionalForm]]],
 "R T,\ny = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Rho]", "v"], "/", "\[Rho]"}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.651332487974264*^9, 3.651332518421926*^9}, {
  3.651332661019925*^9, 3.65133275091451*^9}, {3.65133279285797*^9, 
  3.651332831401499*^9}, {3.651332913010046*^9, 3.651332931752493*^9}, {
  3.651334600704865*^9, 3.651334621656557*^9}, {3.656944346737454*^9, 
  3.656944348920575*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]AMB", "[", "p_", "]"}], ":=", " ", 
   RowBox[{"p", "/", 
    RowBox[{"(", 
     RowBox[{"R", "*", 
      RowBox[{"tAMB", "[", "p", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pVAMB", "[", "p_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"rhAMB", "[", "p", "]"}], "*", 
    RowBox[{"pVSAT", "[", 
     RowBox[{"tAMB", "[", "p", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]VAMB", "[", "p_", "]"}], ":=", 
   RowBox[{"\[Sigma]", "*", 
    RowBox[{
     RowBox[{"pVAMB", "[", "p", "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"R", "*", 
       RowBox[{"tAMB", "[", "p", "]"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yAMB", "[", "p_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"\[Rho]VAMB", "[", "p", "]"}], "/", 
    RowBox[{"\[Rho]AMB", "[", "p", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.651332938011022*^9, 3.651333047552943*^9}, {
   3.651333089806501*^9, 3.651333107358355*^9}, {3.6513339187579527`*^9, 
   3.651333943618895*^9}, {3.6513341742487707`*^9, 3.6513341823355494`*^9}, {
   3.651334345968175*^9, 3.6513345112836246`*^9}, {3.6513345427316637`*^9, 
   3.651334583409586*^9}, 3.656943385519602*^9, {3.6569445895273237`*^9, 
   3.656944591772616*^9}, 3.656944647497384*^9, {3.656944791972294*^9, 
   3.6569447926105547`*^9}}],

Cell[TextData[{
 "From the hydrostatic principles, using the relation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "P"}], 
     RowBox[{"\[PartialD]", "z"}]], "=", 
    RowBox[{
     RowBox[{"-", "\[Rho]"}], " ", "g"}]}], TraditionalForm]]],
 ", we can compute the altitude (z) for the ambient case. The initial \
condition is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"z", "(", 
     SubscriptBox["P", "ambs"], ")"}], " ", "=", "0.", " "}], 
   TraditionalForm]]],
 ":"
}], "Text",
 CellChangeTimes->{{3.651334672393076*^9, 3.651334747911242*^9}, {
  3.651334822365499*^9, 3.6513348509841623`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", "zAMB", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"zAMB", "[", 
    RowBox[{"p_", "?", "NumericQ"}], "]"}], "=", " ", 
   RowBox[{"NDSolveValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"zAMB", "[", "p", "]"}], ",", "p"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", "1"}], "/", 
         RowBox[{"(", 
          RowBox[{"g", "*", 
           RowBox[{"\[Rho]AMB", "[", "p", "]"}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"zAMB", "[", "pAMBS", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
     
     RowBox[{"zAMB", "[", "p", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "pAMBS", ",", "10000"}], "}"}], ",", 
     RowBox[{"MaxStepSize", "\[Rule]", "100"}], ",", 
     RowBox[{"StartingStepSize", "\[Rule]", "100"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6513347522483597`*^9, 3.6513348160787697`*^9}, {
  3.6513348582622623`*^9, 3.651334864622716*^9}, {3.6569436312767677`*^9, 
  3.656943638482873*^9}, {3.657305797241404*^9, 3.6573057975696583`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["MOIST ADIABAT PROFILES:", "Subsubsection",
 CellChangeTimes->{{3.6568732733509073`*^9, 3.656873278566071*^9}}],

Cell[TextData[{
 "We now consider the moist adiabat profiles. We start with the thermodynamic \
relations between remperature and pressure:\n\n\[Gamma] = 1.4,\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["T", 
       SubscriptBox["T", "ref"]], ")"}], 
     RowBox[{"\[Gamma]", "/", 
      RowBox[{"(", 
       RowBox[{"\[Gamma]", "-", "1"}], ")"}]}]], "=", 
    RowBox[{
     FractionBox["p", 
      SubscriptBox["p", "ref"]], "=", 
     FractionBox[
      SubscriptBox["p", "v"], 
      SubscriptBox["p", 
       SubscriptBox["v", "ref"]]]}]}], TraditionalForm]]],
 ", on a dry adiabat (since water vapor mass fraction (y) is constant).\n\n\
Let T be the lifting-condensation level (LCL) state and left ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "ref"], TraditionalForm]]],
 " be the sea-level ambient state. \n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       SubscriptBox[
        RowBox[{"(", 
         SubscriptBox["T", "sat"], ")"}], "onset"], 
       SubscriptBox["T", "ambs"]], ")"}], "3.5"], "=", 
    FractionBox[
     RowBox[{
      SubscriptBox["p", "vsat"], "(", 
      SubscriptBox[
       RowBox[{"(", 
        SubscriptBox["T", "sat"], ")"}], "onset"], ")"}], 
     RowBox[{
      RowBox[{
       SubscriptBox["rh", "ambs"], "(", 
       SubscriptBox["p", "ambs"], ")"}], 
      RowBox[{
       SubscriptBox["p", "vsat"], "(", 
       SubscriptBox["T", "ambs"], ")"}]}]]}], TraditionalForm]],
  FontSize->16],
 ".\n\nThe Temperature ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"(", 
     SubscriptBox["T", "sat"], ")"}], "onset"], TraditionalForm]]],
 " can be computed using a root-finder. This gives the temperature at which \
the surface air would saturate if lifted dry adiabatically. The temperature \
implies a certain pressure on the adiabat and can be computed from the above \
equations."
}], "Text",
 CellChangeTimes->{{3.65133501994823*^9, 3.651335029587187*^9}, {
  3.6513355735308933`*^9, 3.651335862408002*^9}, {3.651335906927786*^9, 
  3.6513360088634453`*^9}, {3.6513360683022003`*^9, 3.651336231290524*^9}, {
  3.651336407330735*^9, 3.6513364410585833`*^9}, {3.651336638404459*^9, 
  3.651336639924821*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tSWITCH", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "t", "}"}], ",", 
     RowBox[{"t", "/.", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"pVSAT", "[", "t", "]"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"t", "/", "tAMBS"}], ")"}], "^", "3.5"}], ")"}]}], 
         "\[Equal]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"rhAMB", "[", "pAMBS", "]"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"pVSAT", "[", "tAMBS", "]"}], ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "315", ",", "200"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pSWITCH", " ", "=", " ", 
   RowBox[{"pAMBS", "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"tSWITCH", "/", "tAMBS"}], ")"}], "^", "3.5"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"StringForm", "[", 
   RowBox[{"\"\<pLCL = `` [Pa], TLCL = `` [K]\>\"", ",", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"(", 
      RowBox[{"StandardForm", "/@", 
       RowBox[{"{", 
        RowBox[{"pSWITCH", ",", "tSWITCH"}], "}"}]}], ")"}]}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.651336036431493*^9, 3.651336037716769*^9}, {
   3.6513362333181963`*^9, 3.651336300554399*^9}, {3.651336383036252*^9, 
   3.651336383561563*^9}, {3.651336523880768*^9, 3.651336536936308*^9}, {
   3.651336601968576*^9, 3.651336607245635*^9}, {3.651336652281043*^9, 
   3.651336665085266*^9}, 3.657307765222041*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \\!\\(\\*TagBox[FormBox[\\\"97269.47095929731`\
\\\", StandardForm], StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \
\\!\\(\\*TagBox[FormBox[\\\"295.38502706181663`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[97269.47095929731], 
   StandardForm[295.38502706181663`]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.651336666470413*^9, 3.651342661268178*^9, 3.6513433363283463`*^9, 
   3.6513448832768583`*^9, 3.651345329917429*^9, 3.656872917390636*^9, 
   3.6569429873660192`*^9, 3.656943644268858*^9, 3.656944901574092*^9, 
   3.656947943149893*^9, 3.6569705886849823`*^9, 3.656972212099283*^9, 
   3.656972271041388*^9, {3.656972342265175*^9, 3.656972365642989*^9}, 
   3.656972759773405*^9, 3.657305801587537*^9, 3.6573060511276293`*^9, 
   3.657306183042387*^9, 3.6573073267337723`*^9, 3.657307765649005*^9, 
   3.657308556363769*^9, 3.657308670371852*^9, 3.657308823369431*^9}]
}, Open  ]],

Cell[TextData[{
 "Once saturated, the moist adiabat follows the following locus of the \
thrmodynamic states to rough approximation (the condensate falls out):\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["c", "p"], " ", "dT"}], " ", "+", " ", 
      RowBox[{"L", " ", "\[Sigma]", " ", 
       RowBox[{"d", "(", 
        RowBox[{
         RowBox[{
          SubscriptBox["p", "vsat"], "(", "T", ")"}], "/", "p"}], ")"}]}], 
      " ", "-", " ", 
      RowBox[{"dp", "/", "\[Rho]"}]}], " ", "=", " ", "0"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["c", "p"], " ", 
       FractionBox["dT", "dp"]}], " ", "+", " ", 
      RowBox[{"L", " ", "\[Sigma]", " ", 
       FractionBox[
        RowBox[{"d", "(", 
         RowBox[{
          SubscriptBox["p", "vsat"], "/", "p"}], ")"}], "dp"]}], " ", "-", 
      " ", 
      FractionBox["RT", "p"]}], " ", "=", " ", "0"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["c", "p"], " ", 
       FractionBox["dT", "dp"]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["L\[Sigma]", 
         SuperscriptBox["p", "2"]], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox[
           SubscriptBox["dp", "vsat"], "dT"], " ", 
          FractionBox["dT", "dp"], "p"}], "-", 
         SubscriptBox["p", "vsat"]}], ")"}]}], "-", " ", 
      FractionBox["RT", "p"]}], " ", "=", " ", "0"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["c", "p"], "+", 
         RowBox[{
          RowBox[{"(", 
           FractionBox["L\[Sigma]", "p"], ")"}], 
          FractionBox[
           SubscriptBox["dp", "vsat"], "dT"]}]}], ")"}], 
       FractionBox["dT", "dp"]}], " ", "-", " ", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["L\[Sigma]", 
         SuperscriptBox["p", "2"]], ")"}], 
       SubscriptBox["p", "vsat"]}], " ", "-", " ", 
      FractionBox["RT", "p"]}], "=", "0."}]}], TraditionalForm]]],
 "\n\nand ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"T", "(", 
     SubscriptBox["p", "onset"], ")"}], " ", "=", " ", 
    SubscriptBox[
     RowBox[{"(", 
      SubscriptBox["T", "sat"], ")"}], "onset"]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6513366762611094`*^9, 3.651336727195188*^9}, {
  3.651336775132524*^9, 3.651336872388548*^9}, {3.651337066031823*^9, 
  3.651337112014495*^9}, {3.6513381791553707`*^9, 3.651338458691093*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearSystemCache", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"temp", ",", "val"}], "}"}], "=", 
  RowBox[{"Reap", "[", 
   RowBox[{"NDSolveValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"cp", " ", "+", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"L", "*", 
               RowBox[{"\[Sigma]", "/", "p"}]}], ")"}], "*", 
             RowBox[{"dpVSAT", "[", 
              RowBox[{"tmoist1", "[", "p", "]"}], "]"}]}]}], ")"}], "*", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"tmoist1", "[", "p", "]"}], ",", "p"}], "]"}]}], " ", "-",
          " ", 
         RowBox[{"(", 
          RowBox[{"L", "*", "\[Sigma]", "*", 
           RowBox[{
            RowBox[{"pVSAT", "[", 
             RowBox[{"tmoist1", "[", "p", "]"}], "]"}], "/", 
            RowBox[{"p", "^", "2"}]}]}], ")"}], " ", "-", " ", 
         RowBox[{"R", "*", 
          RowBox[{
           RowBox[{"tmoist1", "[", "p", "]"}], "/", "p"}]}]}], " ", 
        "\[Equal]", " ", "0"}], ",", 
       RowBox[{
        RowBox[{"tmoist1", "[", "pSWITCH", "]"}], "\[Equal]", "tSWITCH"}], 
       ",", " ", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"tmoist1", "[", "p", "]"}], "\[Equal]", 
          RowBox[{"tAMB", "[", "p", "]"}]}], ",", 
         RowBox[{"Sow", "[", "p", "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"tmoist1", "[", "p", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "pSWITCH", ",", "10000"}], "}"}]}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.657305822337109*^9, 3.657305867504442*^9}, {
  3.6573059760735064`*^9, 3.657305978919168*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwViX0wmwcAhzEUVaOmXaeKnClVpTGcnY/f1BVlR0NSm1ZXI1pfed93osed
3tVG6dqpdq1bcyZt0kl8ttptxIZrT2WV6eazMSrqu4SESFhTZn8899xzj3My
h5FqZGBgELjF/xZqznsblDzBnbbkepsiNi6JGqSMmKdQ95nuKEpJg5DSF+cz
/oD7D8fqAj85i1stjqOXaDLwjEv8ezbOot9EHsOd7AE+LHkkrD0H10fxGnv1
XxA5uHuWfZ4OmaDakmD1YsBckHNyJR1l+0ybG+R9EOd2BNR9l4E1XiM5yhxA
8UX9rWKHTHQPHdFdaB7EqYLNxNrbmWj9ceLd7QEvsFJRKJrbkwU7l2yNOV+O
uITwWsvSra47MrO2OYxm6zWDXUtZoLe7ZPUWjGCbV0XlKVY2JNdUbftejWLx
Olu2+342kpRdAmbKGGLKOrJLLTiId+VGtXEUCHZ4Kp06ycGhn98c+NZpHOEd
C8o0IQcV5mbxnyrGcWUz42PxAge+v5tPRNx4BXXUMq3LjsAZv/LWAOYEwoP4
cTxfAgrvYN5d20l40JSNMgaBm5cVirDOSQTb5vNOZxJ4ITYjRoqmQHvm2J9b
TCDWzTW1PmAaqjeSpOxKAvZu585o56ZxWxP3/pMmAlzl4eqPxDNw6bdBk5SA
8U4Voy5xFsymw+vOIwSc9T4RexzmUDJuHXZQRaA8rTJsY3gOXl+FxkwbkfCj
63/ae+U1HgtlmhpbEumPFQzv6HnQN7QDx11J9D2QpBRszkMuMVLa+pMoo0kK
QhsXIN1Z+3zpKAl5QohCn6XEc+oe7eoJEgmLLSKV4yLGWGMhJWwS7EiJRK5Y
BMLtTYJzSYjfuU/Xf7+E/NYFM+obElVVUwndNBWqZ1kPV8tJ0J38gm4UqvAL
s1XmxSdxOvZiv+4fFdb/5nrY1ZOI/7LMeihQjW3qUlaNhMSyn3fsMk8Nk1mz
YH4XCQ9Jd2iNZut3zCWz+7ba6cDwSPwyjEv9rIbGSHT6fu1S17AMEfdmn/s8
CXNLDvWr6QqkPYZRhloS73U6pAaxV7A4LJsuMKQg8eyy+KJ9BTP39j7Qbqew
P8+H+dZRgwmRYNBqN4WgIrpg8IIG81Zufz50prCIg8LoIQ1yjrKiMzwosMdm
I4P8V7Hhe37kN18KeZ78u8+urSKqpvpfjxAKcUkf8HvVq4iQ7rDyjqQwGLP/
zq7jWrzs1yT0MihoVIeYOrEWGxm2XEEiBXnOej3DQofXL68KjFMpfCZqazmW
okNeGsOnMouCa9XbwhPtOnB5123ccyn8BwVx2XE=
                    "]]}}}, {
                  DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 170.}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                   PlotRange -> {{10000., 97269.47095929731}, {
                    180.1584078720671, 295.38502652424296`}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"10000.`", ",", "97269.47095929731`"}], "}"}], 
                    "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwViX0wmwcAhzEUVaOmXaeKnClVpTGcnY/f1BVlR0NSm1ZXI1pfed93osed
3tVG6dqpdq1bcyZt0kl8ttptxIZrT2WV6eazMSrqu4SESFhTZn8899xzj3My
h5FqZGBgELjF/xZqznsblDzBnbbkepsiNi6JGqSMmKdQ95nuKEpJg5DSF+cz
/oD7D8fqAj85i1stjqOXaDLwjEv8ezbOot9EHsOd7AE+LHkkrD0H10fxGnv1
XxA5uHuWfZ4OmaDakmD1YsBckHNyJR1l+0ybG+R9EOd2BNR9l4E1XiM5yhxA
8UX9rWKHTHQPHdFdaB7EqYLNxNrbmWj9ceLd7QEvsFJRKJrbkwU7l2yNOV+O
uITwWsvSra47MrO2OYxm6zWDXUtZoLe7ZPUWjGCbV0XlKVY2JNdUbftejWLx
Olu2+342kpRdAmbKGGLKOrJLLTiId+VGtXEUCHZ4Kp06ycGhn98c+NZpHOEd
C8o0IQcV5mbxnyrGcWUz42PxAge+v5tPRNx4BXXUMq3LjsAZv/LWAOYEwoP4
cTxfAgrvYN5d20l40JSNMgaBm5cVirDOSQTb5vNOZxJ4ITYjRoqmQHvm2J9b
TCDWzTW1PmAaqjeSpOxKAvZu585o56ZxWxP3/pMmAlzl4eqPxDNw6bdBk5SA
8U4Voy5xFsymw+vOIwSc9T4RexzmUDJuHXZQRaA8rTJsY3gOXl+FxkwbkfCj
63/ae+U1HgtlmhpbEumPFQzv6HnQN7QDx11J9D2QpBRszkMuMVLa+pMoo0kK
QhsXIN1Z+3zpKAl5QohCn6XEc+oe7eoJEgmLLSKV4yLGWGMhJWwS7EiJRK5Y
BMLtTYJzSYjfuU/Xf7+E/NYFM+obElVVUwndNBWqZ1kPV8tJ0J38gm4UqvAL
s1XmxSdxOvZiv+4fFdb/5nrY1ZOI/7LMeihQjW3qUlaNhMSyn3fsMk8Nk1mz
YH4XCQ9Jd2iNZut3zCWz+7ba6cDwSPwyjEv9rIbGSHT6fu1S17AMEfdmn/s8
CXNLDvWr6QqkPYZRhloS73U6pAaxV7A4LJsuMKQg8eyy+KJ9BTP39j7Qbqew
P8+H+dZRgwmRYNBqN4WgIrpg8IIG81Zufz50prCIg8LoIQ1yjrKiMzwosMdm
I4P8V7Hhe37kN18KeZ78u8+urSKqpvpfjxAKcUkf8HvVq4iQ7rDyjqQwGLP/
zq7jWrzs1yT0MihoVIeYOrEWGxm2XEEiBXnOej3DQofXL68KjFMpfCZqazmW
okNeGsOnMouCa9XbwhPtOnB5123ccyn8BwVx2XE=
                    "]]}}}, {
                  DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 170.}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                   PlotRange -> {{10000., 97269.47095929731}, {
                    180.1584078720671, 295.38502652424296`}}, 
                   PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"10000.`", ",", "97269.47095929731`"}], "}"}], 
                    "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->(
       "InterpolatingFunction[{{10000., 97269.5}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "[", "p", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"88328.02907890719`", ",", "18843.05868587535`"}], "}"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.657305867931396*^9, 3.6573059796246853`*^9, {3.657306053702632*^9, 
   3.657306056066115*^9}, 3.657306185195964*^9, 3.6573073289261208`*^9, 
   3.657307767783429*^9, 3.657308560259053*^9, 3.657308674664094*^9, 
   3.657308834804735*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rasterize", "[", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"temp", ",", 
      RowBox[{"tAMB", "[", "p", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "pSWITCH", ",", "10000"}], "}"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Blue", ",", "Dashed"}], "]"}]}], "}"}]}], ",", " ", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Pressure (Pa}\>\"", ",", " ", "\"\<Temperature (K)\>\""}], 
      "}"}]}], ",", " ", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "14"}], "]"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Moist Adiabat Temperature\>\"", ",", 
       "\"\<Ambient Temperature\>\""}], "}"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6573059834656982`*^9, 3.657306024782095*^9}, {
  3.657306063477895*^9, 3.6573060693334084`*^9}, {3.657306916202104*^9, 
  3.65730706240809*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJztnQu8I0Wd7xuG99MXsKKwCC4KSBTxAeoqjYICywbxtUK8CGpkkfUGRTGC
olFxA6tuULSRlVzBVjR63YgSRVvchosN0oot0qgNtEAGaaCBHmZ6mJ6ZuvWv
7rzOSU7OyZy8Tn7fz3ygU6mqrk5O/X/51+Nfzzvjf598xipJkrbfSpL+99aS
RNcMAAAAAAAAAAAAACw3bjUnyUowQMnQTEtSKl2wBykMAAAArBR8PSVJBd0b
pGzkVZU8L54uW8vdLAAAAGARhIHPCcKOxChcbCKLqHwQDXKXNvQiaWl9cU0W
d5zjhUZlWUqVzMVVAAAAACxEYCncRTO7DXiGtipJkmI13wuNcl5qIGcVR2id
XSVha6Tm9HrUKzF0qulGWq5AvmHZChZ5l86WWbyejGr3fQTmm3m5UVcqq5Sy
/P8VqtFXUpIMMQUAALAcCCWSuyqReEsqmX78kuYoedZ82XZdXRV6l6tFnkai
mSkajuuYVdIqWQm6JrJQTYsrzbS0cixxvPJF3aVbw9SGyi7wCHY5w3MWa5bn
uTWhpLxZliinF1K85uX5EAEAAMw2ixbTQJFJCZtuolUp5ouVu+/WsumckRT3
SLvk0mq3S6IvakgVjSRVL3YT0+53qXeqqaWk213RBR7BLJF+V9ykPAloY82S
qCTT0HAAAABgcBIl6jY5OUfmyrQENltSlJJAKZeVcsWlgoFZLecyjeHUXFVU
Nj+RhLI5stqsfNF3aSF0sDVhutAjiDFkcnUz2aKiFjNSawFwaJHX2mt8GAAA
AFg0sZalZDktx6RzxYoTtN5qzGYGipjvlNMJjSFTt9CYHE1nC1XDEZm7Ji4k
pv3u0tFmIaZZu5G4wCOIt52aqhTyuXTcpHQipoFdiedR3X6LoQAAAICFiZUo
ncnGNFzJLNev+K1ssn8kVMmRa/qDIbmQcjkITJnymLEi6eWiatRZ18QFxbTP
XTrb7FSy84Z5uz9CaFfkVKYx4MyMYkpKJWJqlni+IkZ5AQAAbDnxGKnV5p25
tQKXonzNjUVK6FRazlUejl/yK61WypKbV9DqyWBpulDVtHJBXJbt7onxnGlT
TM0OMe1zl04it9K+AHiBR2DxUqhUVq1pFUUsZ0qGeTsmcAEAAIAtocvqHREg
SC4aoVvLpLOlEu1hSWVKbsTqZiUb+32ptKLFg7fMt6rZZAg1lSvV/J6JQSUn
5xr7WUK3mk6lq064yLt0Uudi2ZTCBR4hbkkuLTdmTvN6Mv/a4SYDAAAAW0Ks
RFo9CIOYeq1IM5XFwYILjQqxgyaZSx3oEfxSCp4pAACA5SEwS9I8Ull14icT
W87pkh8htOIdp/naIkMoAQAAAAsR+Y6u6S0Mw3Yn2idtErpaSdHCAR4hciul
klrrupkGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAFYCoU9EPd8OPM8P5gVp7VWqT21jI/L9bo/RoEeze5Xq
U9vwiQJqbzA3uceX1SzVvdm9SvWpbehEYfyUc7+W2fiLBQBMGPE51HNIDoD2
1JzcSMpUnbnG2a4WmyXyavNoy16l+tQ2MkK7zFtQbhyNHdX1bKp5VIrizrWb
3Zvdq1S/2oZO5Bmt9sp5oxGxvseX1afZvUotXNvwCWqlbLMB6Xyl8ZQr8y8W
ADANhJXYLGWKarmsECVFNfgvd7NEh1rmK4ZrayJL3m0rFjmqMLxlu+7ENqds
08/9XqUWrm2UREJMlfgsT3ESGZlKyzWrdCl3ntHZo9m9SvWpbfi4eSEvFdOx
DZWanip6vb+sBt2b3atUv9qGjqVkxB9s1am7WpmeOFXQ2cr9iwUATAVRvUaW
JZUzOw6wFGY5V4tfhHR+NBeg1o9zvcgLZe3EhXFylLka9SzVp7ZhUzer5bIq
qCh5MpJytlizvFAY2KKRPLle4O5Z2my1q3uze5XqV9vQ8Q06mVRp3NLT6MxS
zev1ZSX0anavUgvXNnx8hd8/XW5+rjX6kgreyvqLBQBMI4FdEYN8KdVqCGpg
ctNT0BvjZ6HFFSij2o0SwqBl1KZDouVTUqrk9yrVp7ahYxab43Ut5JLpkiFu
6Z1Px2SnW+d09mh2r1J9ahs+psIbKBuNBsQD2kXjnu5fVuNlj2b3+Ip7ffXD
frYWATUgW22+NujLzbsr6y8WADClRJ4RD/eWYwdVGJNS08KKqVWuPo3sZNDa
XjKLm/GUEvQq1ae2oRPY5HxlK2QMhVgkjpjVqT6BcEAqTsPi9mh2r1J9ahs+
8fhnqeFjOhVyv6ruY92/rPaXXZr9cI9SPb764T5ZO1GNHksuGzTsWjcrNNCQ
qYQr6y8WADDFBFZO+Ke1esR8g36ZGy33Jd/HNMlkmnqV6lPbKLDKGRrz9Flk
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
UdcVWc5bDan1tIIIQihWHMkKJUdU0nds2/VZQJ5pWizrJXydu6y5assnQscZ
D1xS3/52ktRVq8j/XFBS162jY8n3249ls0nK3/42ijaC2QQ2AcwIkaPS5Khq
kmRGnkpDxmnuxvoGBSTMVUg3o7pG3m1eYywgkZWyQpuDKg0Ly3rbrCw6zji5
4w6S1K23Jkl9xzsWCJjPxE+kxx+ni1//mpxaXu7GG0fUTDBTwCaA6SA022Mu
pARtCZlFHBoTVPNyWxGpkHiaoVZqrzut1YVz6+npttRcxW6vCx1n/HBJPfVU
Ekj+XbzhDez66xfObtvsne+k1Uw8+2GHsSuvRMAHsJzAJoDpILSL2Uw2l81m
c/l8rrmON5fL8cRMpmgvLtK975hajaM7XkcBzzFFstmRHHqmzrNr1rylwug4
k4Lr0irenXdONLLfkqPVq9knP8n22otKxB4rwvyCZQE2AUwdoa2KzS0ldyl7
TJcXdJzJ4tFH6VCZeMnR3/89u/hiWoTUm6eeSqIRcl7+cnbSSewXvxhFM8EK
BjYBTBe+WU680pzad0HS8EDHmUTWraPoSQceSJK6007s/e/ve6w4L3HaaWz7
7anEQQfRgiUc8QYGAzYBTBGJkqayhSQEfaZqLzJWwzKDnWWTy+bNFLLhTW+i
Rb/xdOqPfsQ2bVqgxMMPs89/nu27L2W/9NKRNRSsEGANwHTR8Emz8Vojq1KI
/4CzijZ6ZwIdZwq46y4KoBTHJNx/f9LLBffGbNxIwfWfeIKur76aZTLst78d
UUvBCgA2AUwHIjou7VVp80RDNz7PRZLk4ojnT9FxpobHH2df+hJ7wQtIUrfd
lr31reznPyfvdUHyedp2E8fP//GP+2YHADYBTAmBkZJkvcssqSdi7aaM0Xqn
6DjTxw03UFjC7bYjjXz+81mxyLyFZt3vvZflcmzXXZNY+wAsDGwCmAqiB2/9
ya0P93rXqlUdsaWlblm9IiAtL+g40woX0IsvJjGNHdWTTmLVahz8qivcr+XZ
v/1tul63jl1yCXvssdE1FkwRsAlgKggsilOUKajzt3wKorqtFyn0wohcVHSc
6WbzZtoMc8opbMcdSVX33JN96EPMshYudPXVlHeXXdg557C//nU0DQVTA2wC
mBY8s9I4HiadL5bUSrVWq1XUcjGfLO2V0oXOmAtDBB1nhcA9z8svp1PI+RfK
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
AAAAAAAAAAAml/8P4DLm/Q==
   "], {{0, 0}, {623, 263}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{623, 263},
  PlotRange->{{0, 623}, {0, 263}}]], "Output",
 CellChangeTimes->{
  3.657306025278041*^9, {3.657306056888402*^9, 3.657306069746174*^9}, 
   3.657306186520344*^9, {3.6573069581372757`*^9, 3.657307005879279*^9}, {
   3.657307040443144*^9, 3.657307062930414*^9}, 3.657307330411807*^9, 
   3.657307769294159*^9, 3.657308561287807*^9, 3.657308675856307*^9, 
   3.6573088361848707`*^9}]
}, Open  ]],

Cell["\<\
We can see that the ambient temperature crosses the moist adiabat temperature \
at two locations. However, we are more interested in the crossing between the \
ambient and the moist adiabat temperature at the higher alititude, i.e. at \
the lower pressure. The location of the crossing is known as the TROPOPAUSE. \
The pressure at the tropopause is is therefore taken as the lower value:\
\>", "Text",
 CellChangeTimes->{{3.657306747757188*^9, 3.6573068281628447`*^9}, {
  3.6573070685606728`*^9, 3.65730718946171*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pTROP", " ", "=", " ", 
  RowBox[{"val", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.657307192231577*^9, 3.657307206589593*^9}}],

Cell[BoxData["18843.05868587535`"], "Output",
 CellChangeTimes->{{3.657307197615313*^9, 3.6573072069474087`*^9}, 
   3.6573073319315434`*^9, 3.657307771395419*^9, 3.657308562887444*^9, 
   3.6573086772905493`*^9, 3.657308839055703*^9}]
}, Open  ]],

Cell["\<\
Once the pressure at the tropopause is known, the temperature and density can \
be computed using the ambient relationships derived earlier. The height of \
the tropopause can also be computed from the altitude (z) function derived \
earlier. \
\>", "Text",
 CellChangeTimes->{{3.65133876584661*^9, 3.651338822006181*^9}, {
   3.651338856045273*^9, 3.651338892773179*^9}, {3.6513389331577063`*^9, 
   3.651339099690686*^9}, 3.657307216796999*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tTROP", "=", 
   RowBox[{"tAMB", "[", "pTROP", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zTROP", "=", 
   RowBox[{"zAMB", "[", "pTROP", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]TROP", "=", 
    RowBox[{"\[Rho]AMB", "[", "pTROP", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"StringForm", "[", 
   RowBox[{
   "\"\<\\n zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` \
[kg/m^3]\>\"", ",", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"(", 
      RowBox[{"StandardForm", "/@", 
       RowBox[{"{", 
        RowBox[{"zTROP", ",", "pTROP", ",", "tTROP", ",", "\[Rho]TROP"}], 
        "}"}]}], ")"}]}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6513388289272957`*^9, 3.6513388310626373`*^9}, {
   3.6513389257741528`*^9, 3.651338925981018*^9}, {3.651339102462019*^9, 
   3.6513392258896017`*^9}, 3.657307219981823*^9}],

Cell[BoxData[
 InterpretationBox["\<\"\\n zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12727.75003484701`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"18843.05868587535`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"215.81621331786818`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \\!\\(\\*TagBox[FormBox[\\\"0.3041124079985479`\\\
\", StandardForm], StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "\n zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` \
[kg/m^3]", 
   StandardForm[12727.75003484701], 
   StandardForm[18843.05868587535], 
   StandardForm[215.81621331786818`], 
   StandardForm[0.3041124079985479]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6513427891814623`*^9, 3.651343343085236*^9, 3.6513448936364822`*^9, 
   3.651345333726164*^9, 3.6568729217735786`*^9, 3.656942991434143*^9, 
   3.656943644339383*^9, 3.656944913759157*^9, 3.656947943184031*^9, 
   3.6569705887240267`*^9, 3.6569722121312103`*^9, 3.656972271086492*^9, {
   3.6569723423030376`*^9, 3.656972365693604*^9}, 3.6569727598164673`*^9, 
   3.6573072222518673`*^9, 3.657307333469397*^9, 3.657307772464449*^9, 
   3.6573085640445833`*^9, 3.657308678298994*^9, 3.6573088421304693`*^9}]
}, Open  ]],

Cell[TextData[{
 "We now note that the moist-adiabat locus is based on the total energy ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["c", "p"], "T"}], " ", "+", " ", "Ly", " ", "+", " ", 
      "gz", " ", "+", " ", 
      RowBox[{
       SuperscriptBox["q", "2"], "/", "2"}]}], " ", "=", " ", 
     RowBox[{"Const", "."}]}], ")"}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["q", "2"], "/", "2"}], TraditionalForm]]],
 " is the kinetic energy and is about 1.5% of the contribution to the total. \
Therefore the KE is discarded. \n\nIntegrating from the tropopause seaward \
would now allow the computation of the thermodynamic states holding at the \
base z=0. The equation to be integrated are:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["dp", "dz"], "=", 
     RowBox[{"-", "\[Rho]g"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["c", "p"], 
       FractionBox["dT", "dz"]}], "+", 
      RowBox[{"\[Sigma]", " ", "L", " ", 
       FractionBox["d", "dZ"], 
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SubscriptBox["p", "vsat"], "(", "T", ")"}], "p"], ")"}]}], " ", "-",
       " ", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["1", "\[Rho]"], ")"}], " ", 
       FractionBox["dp", "dz"]}]}], "=", "0."}]}], TraditionalForm]]],
 "\n\nSince we will be integrating with respect to pressure, the equations \
are written as:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["dz", "dp"], " ", "=", " ", 
     RowBox[{"-", 
      RowBox[{"(", 
       FractionBox["RT", "pg"], ")"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["c", "p"], 
       FractionBox["dT", "dp"]}], "+", 
      RowBox[{"\[Sigma]", " ", "L", " ", 
       FractionBox["d", "dp"], 
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SubscriptBox["p", "vsat"], "(", "T", ")"}], "p"], ")"}]}], " ", "-",
       " ", 
      RowBox[{"(", 
       FractionBox["RT", "p"], ")"}]}], " ", "=", "0."}]}], TraditionalForm]]],
 "\n\nNow, we must also take into account that when pressure reaches the \
pressure at lifting condensation level (LCL), the terms associated with \
latent heat (L) drop out. In other words, when the pressure reaches the \
lifting condensation level, we have to switch over to dry-adiabat conditions. \
Taking this into account, the final form of the equations to be integrated \
are:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["dz", "dp"], " ", "=", " ", 
     RowBox[{"-", 
      RowBox[{"(", 
       FractionBox["RT", "pg"], ")"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["c", "p"], "+", 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             RowBox[{"H", "(", 
              RowBox[{
               SubscriptBox["p", "LCL"], "-", "p"}], ")"}], "L\[Sigma]"}], 
            "p"], ")"}], 
          FractionBox[
           SubscriptBox["dp", "vsat"], "dT"]}]}], ")"}], 
       FractionBox["dT", "dp"]}], " ", "-", " ", 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{"L", " ", 
          RowBox[{"H", "(", 
           RowBox[{
            SubscriptBox["p", "LCL"], "-", "p"}], ")"}], "\[Sigma]"}], 
         SuperscriptBox["p", "2"]], ")"}], 
       SubscriptBox["p", "vsat"]}], " ", "-", " ", 
      FractionBox["RT", "p"]}], "=", "0"}], ","}], TraditionalForm]]],
 "\n\nwhere ",
 Cell[BoxData[
  FormBox["H", TraditionalForm]]],
 " denotes the step function. However, rather than producing a discontinuous \
jump, an approximation of the unit step function is used to facilitate a \
smooth transition between the layers. The approximation used here is\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"H", "(", "x", ")"}], " ", "\[TildeTilde]", " ", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"1", " ", "+", " ", 
        SuperscriptBox["e", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "k", " ", "x"}]]}]], " ", "and", " ", "k", 
      " ", "is", " ", "a", " ", "large", " ", 
      RowBox[{"number", ".", "  ", "Here"}], " ", "k"}]}], " ", "=", " ", 
    "500."}], TraditionalForm]]],
 "\n\nThe intial conditions for altitude (z) and temperature (T) are taken to \
be the values at the tropopause."
}], "Text",
 CellChangeTimes->{{3.651339268008595*^9, 3.651339391694199*^9}, {
  3.6513395347271633`*^9, 3.651339614046039*^9}, {3.651340047703238*^9, 
  3.651340335617917*^9}, {3.651340514233552*^9, 3.651340530689452*^9}, {
  3.651340573770431*^9, 3.651340585216391*^9}, {3.651340637087569*^9, 
  3.6513409449801607`*^9}, {3.651341002330783*^9, 3.651341009443109*^9}, {
  3.6513411082781897`*^9, 3.651341356107336*^9}, {3.65134280498578*^9, 
  3.651342805049796*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", 
   RowBox[{"h", ",", "zMOIST", ",", "tMOIST", ",", "temp"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", "x_", "]"}], ":=", " ", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], "*", "1000", "*", "x"}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temp", " ", "=", " ", 
   RowBox[{"NDSolveValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"zMOIST", "[", "p", "]"}], ",", "p"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"R", " ", 
            RowBox[{"tMOIST", "[", "p", "]"}]}], ")"}]}], "/", 
         RowBox[{"(", 
          RowBox[{"p", " ", "g"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"cp", " ", "+", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"L", "*", "\[Sigma]", "*", 
               RowBox[{
                RowBox[{"h", "[", 
                 RowBox[{"pSWITCH", "-", "p"}], "]"}], "/", "p"}]}], ")"}], 
             "*", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"pVSAT", "[", 
                RowBox[{"tMOIST", "[", "p", "]"}], "]"}], ",", 
               RowBox[{"tMOIST", "[", "p", "]"}]}], "]"}]}]}], ")"}], "*", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"tMOIST", "[", "p", "]"}], ",", "p"}], "]"}]}], " ", "-", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "*", "\[Sigma]", "*", 
            RowBox[{
             RowBox[{"h", "[", 
              RowBox[{"pSWITCH", "-", "p"}], "]"}], "/", 
             RowBox[{"p", "^", "2"}]}]}], ")"}], "*", 
          RowBox[{"pVSAT", "[", 
           RowBox[{"tMOIST", "[", "p", "]"}], "]"}]}], " ", "-", " ", 
         RowBox[{"R", "*", 
          RowBox[{
           RowBox[{"tMOIST", "[", "p", "]"}], "/", "p"}]}]}], " ", "\[Equal]",
         " ", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"zMOIST", "[", "pTROP", "]"}], " ", "==", " ", "zTROP"}], ",",
        " ", 
       RowBox[{
        RowBox[{"tMOIST", "[", "pTROP", "]"}], "==", "tTROP"}]}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"zMOIST", "[", "p", "]"}], ",", 
       RowBox[{"tMOIST", "[", "p", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "pTROP", ",", "pAMBS"}], "}"}], ",", " ", 
     RowBox[{"MaxStepSize", "\[Rule]", "100"}], ",", 
     RowBox[{"StartingStepSize", "\[Rule]", "100"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "Infinity"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"zMOIST", "[", 
    RowBox[{"p_", "?", "NumericQ"}], "]"}], " ", "=", " ", 
   RowBox[{"temp", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tMOIST", "[", 
    RowBox[{"p_", "?", "NumericQ"}], "]"}], " ", "=", " ", 
   RowBox[{"temp", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.651341364682858*^9, 3.651341681855566*^9}, {
  3.651341721041089*^9, 3.6513417602064877`*^9}, {3.651342810095963*^9, 
  3.651342810175445*^9}, {3.656972333163775*^9, 3.656972333409728*^9}}],

Cell["\<\
The value of the moist adiabat pressure at the surface z=0 (and therefore the \
temperature) can now be computed as:\
\>", "Text",
 CellChangeTimes->{{3.657307479211043*^9, 3.657307502561331*^9}, {
  3.6573075963757753`*^9, 3.65730760559192*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pMOISTS", " ", "=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "p", "}"}], ",", " ", 
     RowBox[{"p", " ", "/.", " ", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"zMOIST", "[", "p", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", "pAMBS"}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tMOISTS", " ", "=", " ", 
    RowBox[{"tMOIST", "[", "pMOISTS", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"StringForm", "[", 
   RowBox[{
   "\"\<\\n pMOIST at surface pMOISTS = `` [Pa], tMOIST at surface tMOISTS = \
`` [K]\>\"", ",", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"(", 
      RowBox[{"StandardForm", "/@", 
       RowBox[{"{", 
        RowBox[{"pMOISTS", ",", "tMOISTS"}], "}"}]}], ")"}]}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.657307505473667*^9, 3.6573075420727377`*^9}, {
  3.657307607727844*^9, 3.657307701703209*^9}}],

Cell[BoxData[
 InterpretationBox["\<\"\\n pMOIST at surface pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"99871.32052938871`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOIST at surface tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"297.62316141890807`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm[
  "\n pMOIST at surface pMOISTS = `` [Pa], tMOIST at surface tMOISTS = `` \
[K]", 
   StandardForm[99871.32052938871], 
   StandardForm[297.62316141890807`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.6573077024476233`*^9, 3.6573077793664207`*^9, 
  3.6573085699233103`*^9, 3.657308683620008*^9, 3.657308851847376*^9}]
}, Open  ]],

Cell["\<\
This  pressure and from it the temperature and pressure should be used as the \
next iterate to refine the results. We need to do this because we started \
with an assumption on the values of the pressure and temperature at the \
sea-level. However, these values are typically not relevant to a vertical \
column in the core. 

To this end, we now set up an iteration scheme to test the convergence (or \
divergence) of the system. The iteration scheme is set so that the average \
relative error between the ambient pressure and temperature at ocean surface \
is less than 10^-5.\
\>", "Text",
 CellChangeTimes->{{3.651341944091167*^9, 3.651342099288417*^9}, {
  3.6513443366328382`*^9, 3.651344365656971*^9}, {3.6568730191049757`*^9, 
  3.6568730696083317`*^9}, {3.6573077917536592`*^9, 3.657307795165517*^9}, {
  3.657308871526112*^9, 3.657308871542296*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"performIterations", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "Print", "[", 
       "\"\<................... starting iterations.....................\>\"",
        "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Rho]MOISTS", " ", "=", " ", 
          RowBox[{"pMOISTS", "/", 
           RowBox[{"(", 
            RowBox[{"R", "*", "tMOISTS"}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` \
[kg/m^3]\>\"", ",", " ", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"(", 
              RowBox[{"StandardForm", "/@", 
               RowBox[{"{", 
                RowBox[{"pMOISTS", ",", "tMOISTS", ",", "\[Rho]MOISTS"}], 
                "}"}]}], ")"}]}]}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"tSWITCH", "=", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", "t", "}"}], ",", 
            RowBox[{"t", "/.", 
             RowBox[{"FindRoot", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"pVSAT", "[", "t", "]"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"t", "/", "tMOISTS"}], ")"}], "^", "3.5"}], 
                  ")"}]}], "\[Equal]", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"rhAMB", "[", "pMOISTS", "]"}], ")"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"pVSAT", "[", "tMOISTS", "]"}], ")"}]}]}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "315", ",", "200"}], "}"}]}], "]"}]}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"pSWITCH", " ", "=", " ", 
          RowBox[{"pMOISTS", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"tSWITCH", "/", "tMOISTS"}], ")"}], "^", "3.5"}]}]}], 
         " ", ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<pLCL = `` [Pa], TLCL = `` [K]\>\"", ",", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"(", 
              RowBox[{"StandardForm", "/@", 
               RowBox[{"{", 
                RowBox[{"pSWITCH", ",", "tSWITCH"}], "}"}]}], ")"}]}]}], 
           "]"}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Clear", "[", "tmoist1", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tmoist1", "[", 
           RowBox[{"p_", "?", "NumericQ"}], "]"}], "=", 
          RowBox[{"NDSolveValue", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"cp", " ", "+", " ", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"L", "*", 
                    RowBox[{"\[Sigma]", "/", "p"}]}], ")"}], "*", 
                    RowBox[{"dpVSAT", "[", 
                    RowBox[{"tmoist1", "[", "p", "]"}], "]"}]}]}], ")"}], "*", 
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"tmoist1", "[", "p", "]"}], ",", "p"}], "]"}]}], 
                " ", "-", " ", 
                RowBox[{"(", 
                 RowBox[{"L", "*", "\[Sigma]", "*", 
                  RowBox[{
                   RowBox[{"pVSAT", "[", 
                    RowBox[{"tmoist1", "[", "p", "]"}], "]"}], "/", 
                   RowBox[{"p", "^", "2"}]}]}], ")"}], " ", "-", " ", 
                RowBox[{"R", "*", 
                 RowBox[{
                  RowBox[{"tmoist1", "[", "p", "]"}], "/", "p"}]}]}], " ", 
               "\[Equal]", " ", "0"}], ",", 
              RowBox[{
               RowBox[{"tmoist1", "[", "pSWITCH", "]"}], "\[Equal]", 
               "tSWITCH"}]}], "}"}], ",", 
            RowBox[{"tmoist1", "[", "p", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"p", ",", "pSWITCH", ",", "10000"}], "}"}], ",", 
            RowBox[{"MaxStepSize", "\[Rule]", "100"}], ",", " ", 
            RowBox[{"StartingStepSize", "\[Rule]", "100"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"pTROP", "=", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", "p", "}"}], ",", 
            RowBox[{"p", "/.", 
             RowBox[{"FindRoot", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"tmoist1", "[", "p", "]"}], ")"}], "-", 
                 RowBox[{"tAMB", "[", "p", "]"}]}], "\[Equal]", "0"}], ",", 
               RowBox[{"{", 
                RowBox[{"p", ",", "10000", ",", "50000"}], "}"}]}], "]"}]}]}],
            "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"tTROP", "=", 
          RowBox[{"tAMB", "[", "pTROP", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"zTROP", "=", 
          RowBox[{"zAMB", "[", "pTROP", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"\[Rho]TROP", "=", 
          RowBox[{"\[Rho]AMB", "[", "pTROP", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = \
`` [kg/m^3]\>\"", ",", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"(", 
              RowBox[{"StandardForm", "/@", 
               RowBox[{"{", 
                RowBox[{
                "zTROP", ",", "pTROP", ",", "tTROP", ",", "\[Rho]TROP"}], 
                "}"}]}], ")"}]}]}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Clear", "[", 
          RowBox[{"zMOIST", ",", "tMOIST"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"temp", " ", "=", " ", 
          RowBox[{"NDSolveValue", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"zMOIST", "[", "p", "]"}], ",", "p"}], "]"}], 
               "\[Equal]", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"R", " ", 
                   RowBox[{"tMOIST", "[", "p", "]"}]}], ")"}]}], "/", 
                RowBox[{"(", 
                 RowBox[{"p", " ", "g"}], ")"}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"cp", " ", "+", " ", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"L", "*", "\[Sigma]", "*", 
                    RowBox[{
                    RowBox[{"h", "[", 
                    RowBox[{"pSWITCH", "-", "p"}], "]"}], "/", "p"}]}], ")"}],
                     "*", 
                    RowBox[{"dpVSAT", "[", 
                    RowBox[{"tMOIST", "[", "p", "]"}], "]"}]}]}], ")"}], "*", 
                 
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"tMOIST", "[", "p", "]"}], ",", "p"}], "]"}]}], 
                " ", "-", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"L", "*", "\[Sigma]", "*", 
                   RowBox[{
                    RowBox[{"h", "[", 
                    RowBox[{"pSWITCH", "-", "p"}], "]"}], "/", 
                    RowBox[{"p", "^", "2"}]}]}], ")"}], "*", 
                 RowBox[{"pVSAT", "[", 
                  RowBox[{"tMOIST", "[", "p", "]"}], "]"}]}], " ", "-", " ", 
                RowBox[{"R", "*", 
                 RowBox[{
                  RowBox[{"tMOIST", "[", "p", "]"}], "/", "p"}]}]}], " ", 
               "\[Equal]", " ", "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"zMOIST", "[", "pTROP", "]"}], " ", "==", " ", 
               "zTROP"}], ",", " ", 
              RowBox[{
               RowBox[{"tMOIST", "[", "pTROP", "]"}], "==", "tTROP"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"zMOIST", "[", "p", "]"}], ",", 
              RowBox[{"tMOIST", "[", "p", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"p", ",", "pTROP", ",", "pAMBS"}], "}"}], ",", " ", 
            RowBox[{"MaxStepSize", "\[Rule]", "100"}], ",", 
            RowBox[{"StartingStepSize", "\[Rule]", "100"}], ",", 
            RowBox[{"AccuracyGoal", "\[Rule]", "Infinity"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"zMOIST", "[", 
           RowBox[{"p_", "?", "NumericQ"}], "]"}], " ", "=", " ", 
          RowBox[{"temp", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tMOIST", "[", 
           RowBox[{"p_", "?", "NumericQ"}], "]"}], " ", "=", " ", 
          RowBox[{"temp", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"pMOISTSNew", " ", "=", " ", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", "p", "}"}], ",", 
            RowBox[{"p", "/.", 
             RowBox[{"Quiet", "@", 
              RowBox[{"FindRoot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"zMOIST", "[", "p", "]"}], "\[Equal]", "0"}], ",", 
                RowBox[{"{", 
                 RowBox[{"p", ",", "pMOISTS"}], "}"}]}], "]"}]}]}]}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"tMOISTSNew", " ", "=", " ", 
          RowBox[{"tMOIST", "[", "pMOISTSNew", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"avgRelativeError", " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"pMOISTS", "-", "pMOISTSNew"}], ")"}], "/", 
               "pMOISTS"}], "]"}], "+", " ", 
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"tMOISTS", "-", "tMOISTSNew"}], ")"}], "/", 
               "tMOISTS"}], "]"}]}], ")"}], "/", "2"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<average err ->\>\"", ",", " ", "avgRelativeError"}], 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"avgRelativeError", " ", "<", " ", 
            RowBox[{"10", "^", 
             RowBox[{"-", "5"}]}]}], ",", " ", 
           RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<err pAMBS->\>\"", ",", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"pMOISTS", "-", "pMOISTSNew"}], ")"}], "/", "pMOISTS"}],
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<err tAMBS ->\>\"", ",", " ", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"tMOISTS", "-", "tMOISTSNew"}], ")"}], "/", "tMOISTS"}],
             "]"}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"pMOISTS", " ", "=", " ", "pMOISTSNew"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"tMOISTS", " ", "=", " ", "tMOISTSNew"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Rho]MOISTS", " ", "=", " ", 
          RowBox[{"pMOISTS", "/", 
           RowBox[{"(", 
            RowBox[{"R", "*", "tMOISTS"}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<............... iteration ->  `1` \
done....................\>\"", ",", " ", "iter"}], "]"}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"iter", ",", "30"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<final result -->\>\"", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"StringForm", "[", 
        RowBox[{
        "\"\<pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` \
[kg/m^3]\>\"", ",", " ", 
         RowBox[{"Sequence", "@@", 
          RowBox[{"(", 
           RowBox[{"StandardForm", "/@", 
            RowBox[{"{", 
             RowBox[{"pMOISTS", ",", "tMOISTS", ",", "\[Rho]MOISTS"}], 
             "}"}]}], ")"}]}]}], "]"}], "]"}], ";"}]}], "\[IndentingNewLine]",
     "]"}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.651342102049574*^9, 3.651342125664496*^9}, {
   3.651342830850233*^9, 3.651342831034186*^9}, {3.651344383992853*^9, 
   3.651344820142105*^9}, {3.651344861967648*^9, 3.651344864926525*^9}, {
   3.651344922807674*^9, 3.651344988459662*^9}, {3.651345019700791*^9, 
   3.65134504049117*^9}, {3.6513451057224483`*^9, 3.6513452355046*^9}, {
   3.651345408134873*^9, 3.651345546612052*^9}, {3.651345616612739*^9, 
   3.651345625690474*^9}, {3.651345669254635*^9, 3.651345719161829*^9}, {
   3.651345979739006*^9, 3.651345990294588*^9}, {3.651398043352968*^9, 
   3.651398103838996*^9}, {3.6513981442868223`*^9, 3.651398185748912*^9}, {
   3.651398259675934*^9, 3.6513983417379704`*^9}, {3.651398389395864*^9, 
   3.651398389459364*^9}, {3.656873080613347*^9, 3.656873114170659*^9}, 
   3.656972207785186*^9, 3.6569722667182617`*^9, {3.656972338013097*^9, 
   3.6569723588841963`*^9}, {3.656972754368222*^9, 3.656972754447212*^9}, 
   3.65697281190546*^9, {3.6573072885684547`*^9, 3.657307300119482*^9}, {
   3.657307815122991*^9, 3.657307846904282*^9}, {3.6573078996087017`*^9, 
   3.657307944454771*^9}, {3.657308060838125*^9, 3.6573080933966923`*^9}, {
   3.6573083040655117`*^9, 3.657308463051351*^9}, {3.657308537624487*^9, 
   3.657308540126812*^9}, {3.65730865421445*^9, 3.6573086542774677`*^9}, {
   3.657308792813408*^9, 3.657308795747835*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"................... starting \
iterations.....................\"\>"], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088824412947`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"99871.32052938871`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"297.62316141890807`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.1688018067002721`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[99871.32052938871], 
   StandardForm[297.62316141890807`], 
   StandardForm[1.1688018067002721`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882445653*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \\!\\(\\*TagBox[FormBox[\\\"94907.36451573987`\
\\\", StandardForm], StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \
\\!\\(\\*TagBox[FormBox[\\\"293.3193812669839`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[94907.36451573987], 
   StandardForm[293.3193812669839]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882449967*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"11752.124938545949`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"21944.84243869372`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"222.07069281571827`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \\!\\(\\*TagBox[FormBox[\\\"0.3441977499919213`\\\
\", StandardForm], StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[11752.124938545949`], 
   StandardForm[21944.84243869372], 
   StandardForm[222.07069281571827`], 
   StandardForm[0.3441977499919213]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088824542503`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "0.007388848276168147`"}],
  SequenceForm["average err ->", 0.007388848276168147],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882484942*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err pAMBS->\"\>", "\[InvisibleSpace]", 
   "0.011492401166299522`"}],
  SequenceForm["err pAMBS->", 0.011492401166299522`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882490481*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err tAMBS ->\"\>", "\[InvisibleSpace]", 
   "0.0032852953860367734`"}],
  SequenceForm["err tAMBS ->", 0.0032852953860367734`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.65730888249538*^9}],

Cell[BoxData[
 InterpretationBox["\<\"............... iteration ->  \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) done....................\"\>",
  StringForm["............... iteration ->  `1` done....................", 1],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882500319*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"101019.08180992054`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"298.6009414178953`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.1783628758277336`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[101019.08180992054`], 
   StandardForm[298.6009414178953], 
   StandardForm[1.1783628758277336`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088825054502`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \\!\\(\\*TagBox[FormBox[\\\"96548.683502515`\\\
\", StandardForm], StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \\!\\(\
\\*TagBox[FormBox[\\\"294.7642906829927`\\\", StandardForm], StandardForm, \
Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[96548.683502515], 
   StandardForm[294.7642906829927]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088825105143`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12491.716794666869`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"19558.348831744825`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"217.14184866279737`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \
\\!\\(\\*TagBox[FormBox[\\\"0.31372957724074363`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[12491.716794666869`], 
   StandardForm[19558.348831744825`], 
   StandardForm[217.14184866279737`], 
   StandardForm[0.31372957724074363`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882515728*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "0.004990547404040988`"}],
  SequenceForm["average err ->", 0.004990547404040988],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882520631*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err pAMBS->\"\>", "\[InvisibleSpace]", 
   "0.007765267339087177`"}],
  SequenceForm["err pAMBS->", 0.007765267339087177],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.65730888252553*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err tAMBS ->\"\>", "\[InvisibleSpace]", 
   "0.0022158274689947984`"}],
  SequenceForm["err tAMBS ->", 0.0022158274689947984`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882530424*^9}],

Cell[BoxData[
 InterpretationBox["\<\"............... iteration ->  \
\\!\\(\\*RowBox[{\\\"2\\\"}]\\) done....................\"\>",
  StringForm["............... iteration ->  `1` done....................", 2],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882535412*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"100234.64163331738`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"297.9392932496338`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.1718090998663775`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[100234.64163331738`], 
   StandardForm[297.9392932496338], 
   StandardForm[1.1718090998663775`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882540512*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \\!\\(\\*TagBox[FormBox[\\\"95376.48542946306`\
\\\", StandardForm], StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \
\\!\\(\\*TagBox[FormBox[\\\"293.7399801573041`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[95376.48542946306], 
   StandardForm[293.7399801573041]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088825455227`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12012.977885459059`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"21077.875196540834`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"220.2040694953238`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \
\\!\\(\\*TagBox[FormBox[\\\"0.33340207274167516`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[12012.977885459059`], 
   StandardForm[21077.875196540834`], 
   StandardForm[220.2040694953238], 
   StandardForm[0.33340207274167516`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882550714*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "0.0036277991583628347`"}],
  SequenceForm["average err ->", 0.0036277991583628347`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882555599*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err pAMBS->\"\>", "\[InvisibleSpace]", 
   "0.0056353306114945365`"}],
  SequenceForm["err pAMBS->", 0.0056353306114945365`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882560466*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err tAMBS ->\"\>", "\[InvisibleSpace]", 
   "0.0016202677052311327`"}],
  SequenceForm["err tAMBS ->", 0.0016202677052311327`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088825653954`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"............... iteration ->  \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\) done....................\"\>",
  StringForm["............... iteration ->  `1` done....................", 3],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882570333*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"100799.4969776458`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"298.4220346646056`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.1765063762712118`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[100799.4969776458], 
   StandardForm[298.4220346646056], 
   StandardForm[1.1765063762712118`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882575533*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \\!\\(\\*TagBox[FormBox[\\\"96220.00175443261`\
\\\", StandardForm], StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \
\\!\\(\\*TagBox[FormBox[\\\"294.4838330211844`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[96220.00175443261], 
   StandardForm[294.4838330211844]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882579748*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12375.947038216176`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"19917.34150440035`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"217.83723916560484`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \\!\\(\\*TagBox[FormBox[\\\"0.3184681853039607`\\\
\", StandardForm], StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[12375.947038216176`], 
   StandardForm[19917.34150440035], 
   StandardForm[217.83723916560484`], 
   StandardForm[0.3184681853039607]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882584094*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "0.0025964129608659703`"}],
  SequenceForm["average err ->", 0.0025964129608659703`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882588187*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err pAMBS->\"\>", "\[InvisibleSpace]", 
   "0.004045564759497678`"}],
  SequenceForm["err pAMBS->", 0.004045564759497678],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882592286*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err tAMBS ->\"\>", "\[InvisibleSpace]", 
   "0.0011472611622342626`"}],
  SequenceForm["err tAMBS ->", 0.0011472611622342626`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882596353*^9}],

Cell[BoxData[
 InterpretationBox["\<\"............... iteration ->  \
\\!\\(\\*RowBox[{\\\"4\\\"}]\\) done....................\"\>",
  StringForm["............... iteration ->  `1` done....................", 4],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882600477*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"100391.70608489795`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"298.07966665427995`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.1730925871009303`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[100391.70608489795`], 
   StandardForm[298.07966665427995`], 
   StandardForm[1.1730925871009303`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882604804*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \\!\\(\\*TagBox[FormBox[\\\"95610.67432023466`\
\\\", StandardForm], StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \
\\!\\(\\*TagBox[FormBox[\\\"293.9528334981805`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[95610.67432023466], 
   StandardForm[293.9528334981805]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882609127*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12128.428232864002`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"20702.97218624344`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"219.42123788519703`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \\!\\(\\*TagBox[FormBox[\\\"0.3286403204044387`\\\
\", StandardForm], StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[12128.428232864002`], 
   StandardForm[20702.97218624344], 
   StandardForm[219.42123788519703`], 
   StandardForm[0.3286403204044387]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882613468*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "0.0018722874514728747`"}],
  SequenceForm["average err ->", 0.0018722874514728747`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882617704*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err pAMBS->\"\>", "\[InvisibleSpace]", 
   "0.0029034071546963206`"}],
  SequenceForm["err pAMBS->", 0.0029034071546963206`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882621875*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err tAMBS ->\"\>", "\[InvisibleSpace]", 
   "0.0008411677482494289`"}],
  SequenceForm["err tAMBS ->", 0.0008411677482494289],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882626007*^9}],

Cell[BoxData[
 InterpretationBox["\<\"............... iteration ->  \
\\!\\(\\*RowBox[{\\\"5\\\"}]\\) done....................\"\>",
  StringForm["............... iteration ->  `1` done....................", 5],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882630143*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"100683.18408261701`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"298.33040165627847`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.1755097516206243`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[100683.18408261701`], 
   StandardForm[298.33040165627847`], 
   StandardForm[1.1755097516206243`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882634552*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \\!\\(\\*TagBox[FormBox[\\\"96045.95165654029`\
\\\", StandardForm], StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \
\\!\\(\\*TagBox[FormBox[\\\"294.3382413572512`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[96045.95165654029], 
   StandardForm[294.3382413572512]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882638904*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12313.768476837404`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"20112.37570660486`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"218.22280737659088`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \
\\!\\(\\*TagBox[FormBox[\\\"0.32101848597959637`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[12313.768476837404`], 
   StandardForm[20112.37570660486], 
   StandardForm[218.22280737659088`], 
   StandardForm[0.32101848597959637`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882643319*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "0.0013530932938116205`"}],
  SequenceForm["average err ->", 0.0013530932938116205`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882671056*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err pAMBS->\"\>", "\[InvisibleSpace]", 
   "0.0021129232560000424`"}],
  SequenceForm["err pAMBS->", 0.0021129232560000424`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882675912*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err tAMBS ->\"\>", "\[InvisibleSpace]", 
   "0.0005932633316231986`"}],
  SequenceForm["err tAMBS ->", 0.0005932633316231986],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882680167*^9}],

Cell[BoxData[
 InterpretationBox["\<\"............... iteration ->  \
\\!\\(\\*RowBox[{\\\"6\\\"}]\\) done....................\"\>",
  StringForm["............... iteration ->  `1` done....................", 6],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882684531*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"100470.44824148071`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"298.1534131682674`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.1737223161404444`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[100470.44824148071`], 
   StandardForm[298.1534131682674], 
   StandardForm[1.1737223161404444`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882687811*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \
\\!\\(\\*TagBox[FormBox[\\\"95728.0620845443`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \
\\!\\(\\*TagBox[FormBox[\\\"294.062774377327`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[95728.0620845443], 
   StandardForm[294.062774377327]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088826915207`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12185.758911309458`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"20518.804253119786`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"219.0427614338979`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \\!\\(\\*TagBox[FormBox[\\\"0.3262796216130431`\\\
\", StandardForm], StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[12185.758911309458`], 
   StandardForm[20518.804253119786`], 
   StandardForm[219.0427614338979], 
   StandardForm[0.3262796216130431]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088826951113`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "0.0009678604673369528`"}],
  SequenceForm["average err ->", 0.0009678604673369528],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088826990547`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err pAMBS->\"\>", "\[InvisibleSpace]", 
   "0.0014963565366612845`"}],
  SequenceForm["err pAMBS->", 0.0014963565366612845`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882702512*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err tAMBS ->\"\>", "\[InvisibleSpace]", 
   "0.00043936439801262105`"}],
  SequenceForm["err tAMBS ->", 0.00043936439801262105`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088827058887`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"............... iteration ->  \
\\!\\(\\*RowBox[{\\\"7\\\"}]\\) done....................\"\>",
  StringForm["............... iteration ->  `1` done....................", 7],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882709393*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"100620.78785344814`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"298.28441116315946`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.1749623865587684`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[100620.78785344814`], 
   StandardForm[298.28441116315946`], 
   StandardForm[1.1749623865587684`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882712906*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \\!\\(\\*TagBox[FormBox[\\\"95952.54123467885`\
\\\", StandardForm], StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \
\\!\\(\\*TagBox[FormBox[\\\"294.26317680083446`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[95952.54123467885], 
   StandardForm[294.26317680083446`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882716586*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12281.902675320362`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"20212.931686973025`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"218.4236455061686`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \\!\\(\\*TagBox[FormBox[\\\"0.3223268355370176`\\\
\", StandardForm], StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[12281.902675320362`], 
   StandardForm[20212.931686973025`], 
   StandardForm[218.4236455061686], 
   StandardForm[0.3223268355370176]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.65730888272019*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "0.0007069513883203513`"}],
  SequenceForm["average err ->", 0.0007069513883203513],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088827504463`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err pAMBS->\"\>", "\[InvisibleSpace]", 
   "0.0011083340958318946`"}],
  SequenceForm["err pAMBS->", 0.0011083340958318946`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882754202*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err tAMBS ->\"\>", "\[InvisibleSpace]", 
   "0.000305568680808808`"}],
  SequenceForm["err tAMBS ->", 0.000305568680808808],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.65730888275771*^9}],

Cell[BoxData[
 InterpretationBox["\<\"............... iteration ->  \
\\!\\(\\*RowBox[{\\\"8\\\"}]\\) done....................\"\>",
  StringForm["............... iteration ->  `1` done....................", 8],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088827611103`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"100509.2664035207`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"298.1932647891345`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.1740188790845518`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[100509.2664035207], 
   StandardForm[298.1932647891345], 
   StandardForm[1.1740188790845518`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.65730888276464*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \\!\\(\\*TagBox[FormBox[\\\"95785.86278255752`\
\\\", StandardForm], StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \
\\!\\(\\*TagBox[FormBox[\\\"294.12034181341335`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[95785.86278255752], 
   StandardForm[294.12034181341335`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088827682533`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12216.075333076076`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"20421.95284416288`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"218.84541856252665`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \\!\\(\\*TagBox[FormBox[\\\"0.3250323720327418`\\\
\", StandardForm], StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[12216.075333076076`], 
   StandardForm[20421.95284416288], 
   StandardForm[218.84541856252665`], 
   StandardForm[0.3250323720327418]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882771744*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "0.0004997753923784228`"}],
  SequenceForm["average err ->", 0.0004997753923784228],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882775477*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err pAMBS->\"\>", "\[InvisibleSpace]", 
   "0.000768280288042295`"}],
  SequenceForm["err pAMBS->", 0.000768280288042295],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088827789297`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err tAMBS ->\"\>", "\[InvisibleSpace]", 
   "0.00023127049671455062`"}],
  SequenceForm["err tAMBS ->", 0.00023127049671455062`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088827823467`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"............... iteration ->  \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) done....................\"\>",
  StringForm["............... iteration ->  `1` done....................", 9],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882785757*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"100586.48569166411`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"298.2622280935992`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.1746491929448244`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[100586.48569166411`], 
   StandardForm[298.2622280935992], 
   StandardForm[1.1746491929448244`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088827891703`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \\!\\(\\*TagBox[FormBox[\\\"95901.12447233815`\
\\\", StandardForm], StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \
\\!\\(\\*TagBox[FormBox[\\\"294.22489674223004`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[95901.12447233815], 
   StandardForm[294.22489674223004`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088827928543`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12266.55840168677`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"20261.498121223845`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"218.521132901747`\\\", StandardForm], StandardForm, Rule[Editable, True]]\
\\) [K], \[Rho]TROP = \\!\\(\\*TagBox[FormBox[\\\"0.3229571602942665`\\\", \
StandardForm], StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[12266.55840168677], 
   StandardForm[20261.498121223845`], 
   StandardForm[218.521132901747], 
   StandardForm[0.3229571602942665]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088827964582`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "0.00037100962806251703`"}],
  SequenceForm["average err ->", 0.00037100962806251703`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882800198*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err pAMBS->\"\>", "\[InvisibleSpace]", 
   "0.0005859625953418136`"}],
  SequenceForm["err pAMBS->", 0.0005859625953418136],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088828035994`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err tAMBS ->\"\>", "\[InvisibleSpace]", 
   "0.00015605666078322044`"}],
  SequenceForm["err tAMBS ->", 0.00015605666078322044`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882806965*^9}],

Cell[BoxData[
 InterpretationBox["\<\"............... iteration ->  \\!\\(\\*RowBox[{\\\"10\
\\\"}]\\) done....................\"\>",
  StringForm["............... iteration ->  `1` done....................", 10],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882810419*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"100527.54577345192`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"298.21568228624517`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.1741441254666087`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[100527.54577345192`], 
   StandardForm[298.21568228624517`], 
   StandardForm[1.1741441254666087`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882813868*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \\!\\(\\*TagBox[FormBox[\\\"95812.99647744201`\
\\\", StandardForm], StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \
\\!\\(\\*TagBox[FormBox[\\\"294.15097357596346`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[95812.99647744201], 
   StandardForm[294.15097357596346`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882817504*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12233.084301347182`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"20367.776955930432`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"218.73555254323867`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \
\\!\\(\\*TagBox[FormBox[\\\"0.32433294115750244`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[12233.084301347182`], 
   StandardForm[20367.776955930432`], 
   StandardForm[218.73555254323867`], 
   StandardForm[0.32433294115750244`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088828210287`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "0.00025692131184958653`"}],
  SequenceForm["average err ->", 0.00025692131184958653`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882850964*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err pAMBS->\"\>", "\[InvisibleSpace]", 
   "0.00039056629269714236`"}],
  SequenceForm["err pAMBS->", 0.00039056629269714236`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882854746*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err tAMBS ->\"\>", "\[InvisibleSpace]", 
   "0.00012327633100203065`"}],
  SequenceForm["err tAMBS ->", 0.00012327633100203065`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882858272*^9}],

Cell[BoxData[
 InterpretationBox["\<\"............... iteration ->  \\!\\(\\*RowBox[{\\\"11\
\\\"}]\\) done....................\"\>",
  StringForm["............... iteration ->  `1` done....................", 11],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.65730888286173*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"100566.8084443186`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"298.2524452214047`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.1744579237210317`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[100566.8084443186], 
   StandardForm[298.2524452214047], 
   StandardForm[1.1744579237210317`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882865336*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \\!\\(\\*TagBox[FormBox[\\\"95871.56154694622`\
\\\", StandardForm], StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \
\\!\\(\\*TagBox[FormBox[\\\"294.2057754156636`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[95871.56154694622], 
   StandardForm[294.2057754156636]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882869006*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12260.018093331193`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"20282.227810621152`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"218.5628389962407`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \\!\\(\\*TagBox[FormBox[\\\"0.3232258905287851`\\\
\", StandardForm], StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[12260.018093331193`], 
   StandardForm[20282.227810621152`], 
   StandardForm[218.5628389962407], 
   StandardForm[0.3232258905287851]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882872609*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "0.000196288796556532`"}],
  SequenceForm["average err ->", 0.000196288796556532],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882876336*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err pAMBS->\"\>", "\[InvisibleSpace]", 
   "0.00031426760921496923`"}],
  SequenceForm["err pAMBS->", 0.00031426760921496923`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882879796*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err tAMBS ->\"\>", "\[InvisibleSpace]", 
   "0.00007830998389809475`"}],
  SequenceForm["err tAMBS ->", 0.00007830998389809475],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882883231*^9}],

Cell[BoxData[
 InterpretationBox["\<\"............... iteration ->  \\!\\(\\*RowBox[{\\\"12\
\\\"}]\\) done....................\"\>",
  StringForm["............... iteration ->  `1` done....................", 12],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088828866653`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"100535.20355386242`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"298.22908907722183`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.1741807797151733`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[100535.20355386242`], 
   StandardForm[298.22908907722183`], 
   StandardForm[1.1741807797151733`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.65730888289018*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \
\\!\\(\\*TagBox[FormBox[\\\"95824.2673359521`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \
\\!\\(\\*TagBox[FormBox[\\\"294.16768172938254`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[95824.2673359521], 
   StandardForm[294.16768172938254`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882893886*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12243.365473970685`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"20335.08660052936`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"218.66944173032`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \\!\\(\\*TagBox[FormBox[\\\"0.3239102845285776`\\\
\", StandardForm], StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[12243.365473970685`], 
   StandardForm[20335.08660052936], 
   StandardForm[218.66944173032], 
   StandardForm[0.3239102845285776]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882897498*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "0.00013072635189251188`"}],
  SequenceForm["average err ->", 0.00013072635189251188`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882925481*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err pAMBS->\"\>", "\[InvisibleSpace]", 
   "0.00019428898579980657`"}],
  SequenceForm["err pAMBS->", 0.00019428898579980657`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088829292192`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err tAMBS ->\"\>", "\[InvisibleSpace]", 
   "0.00006716371798521723`"}],
  SequenceForm["err tAMBS ->", 0.00006716371798521723],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088829327583`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"............... iteration ->  \\!\\(\\*RowBox[{\\\"13\
\\\"}]\\) done....................\"\>",
  StringForm["............... iteration ->  `1` done....................", 13],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882936303*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"100554.73643659808`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"298.2491192516556`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.1743300377365338`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[100554.73643659808`], 
   StandardForm[298.2491192516556], 
   StandardForm[1.1743300377365338`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.65730888293979*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \\!\\(\\*TagBox[FormBox[\\\"95853.36100577204`\
\\\", StandardForm], StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \
\\!\\(\\*TagBox[FormBox[\\\"294.19662620773926`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[95853.36100577204], 
   StandardForm[294.19662620773926`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088829435987`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12258.111750455719`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"20288.27326272357`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"218.57501254196296`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \
\\!\\(\\*TagBox[FormBox[\\\"0.32330422588269947`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[12258.111750455719`], 
   StandardForm[20288.27326272357], 
   StandardForm[218.57501254196296`], 
   StandardForm[0.32330422588269947`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882947237*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "0.00010538382832477134`"}],
  SequenceForm["average err ->", 0.00010538382832477134`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088829509573`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err pAMBS->\"\>", "\[InvisibleSpace]", 
   "0.00017291158299728523`"}],
  SequenceForm["err pAMBS->", 0.00017291158299728523`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882954522*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err tAMBS ->\"\>", "\[InvisibleSpace]", 
   "0.00003785607365225745`"}],
  SequenceForm["err tAMBS ->", 0.00003785607365225745],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882958034*^9}],

Cell[BoxData[
 InterpretationBox["\<\"............... iteration ->  \\!\\(\\*RowBox[{\\\"14\
\\\"}]\\) done....................\"\>",
  StringForm["............... iteration ->  `1` done....................", 14],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882961504*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"100537.34935794295`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"298.2378287110305`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.1741714319909573`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[100537.34935794295`], 
   StandardForm[298.2378287110305], 
   StandardForm[1.1741714319909573`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882965139*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \\!\\(\\*TagBox[FormBox[\\\"95827.30521326976`\
\\\", StandardForm], StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \
\\!\\(\\*TagBox[FormBox[\\\"294.1771729807902`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[95827.30521326976], 
   StandardForm[294.1771729807902]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882968791*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12250.202157508107`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"20313.372052544088`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"218.6256046595484`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \
\\!\\(\\*TagBox[FormBox[\\\"0.32362927986478957`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[12250.202157508107`], 
   StandardForm[20313.372052544088`], 
   StandardForm[218.6256046595484], 
   StandardForm[0.32362927986478957`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882972414*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "0.00006504948665860264`"}],
  SequenceForm["average err ->", 0.00006504948665860264],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882976181*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err pAMBS->\"\>", "\[InvisibleSpace]", 
   "0.00009217186213198637`"}],
  SequenceForm["err pAMBS->", 0.00009217186213198637],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882979677*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err tAMBS ->\"\>", "\[InvisibleSpace]", 
   "0.00003792711118521891`"}],
  SequenceForm["err tAMBS ->", 0.00003792711118521891],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088829831333`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"............... iteration ->  \\!\\(\\*RowBox[{\\\"15\
\\\"}]\\) done....................\"\>",
  StringForm["............... iteration ->  `1` done....................", 15],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882986573*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"100546.61607264708`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"298.24914001031965`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.1742351222122682`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[100546.61607264708`], 
   StandardForm[298.24914001031965`], 
   StandardForm[1.1742351222122682`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882990075*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \\!\\(\\*TagBox[FormBox[\\\"95841.063978646`\\\
\", StandardForm], StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \\!\\(\
\\*TagBox[FormBox[\\\"294.1926507389019`\\\", StandardForm], StandardForm, \
Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[95841.063978646], 
   StandardForm[294.1926507389019]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308882993781*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12258.615340257245`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"20286.676121154273`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"218.57179595744944`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \\!\\(\\*TagBox[FormBox[\\\"0.3232835320896853`\\\
\", StandardForm], StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[12258.615340257245`], 
   StandardForm[20286.676121154273`], 
   StandardForm[218.57179595744944`], 
   StandardForm[0.3232835320896853]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088829973993`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "0.00005797976642059625`"}],
  SequenceForm["average err ->", 0.00005797976642059625],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088830252438`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err pAMBS->\"\>", "\[InvisibleSpace]", 
   "0.00009918672754749525`"}],
  SequenceForm["err pAMBS->", 0.00009918672754749525],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308883029052*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err tAMBS ->\"\>", "\[InvisibleSpace]", 
   "0.000016772805293697243`"}],
  SequenceForm["err tAMBS ->", 0.000016772805293697243`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088830326023`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"............... iteration ->  \\!\\(\\*RowBox[{\\\"16\
\\\"}]\\) done....................\"\>",
  StringForm["............... iteration ->  `1` done....................", 16],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308883036087*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"100536.64318283286`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"298.24413753556524`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.1741383472670115`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[100536.64318283286`], 
   StandardForm[298.24413753556524`], 
   StandardForm[1.1741383472670115`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088830396214`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \\!\\(\\*TagBox[FormBox[\\\"95826.08336526062`\
\\\", StandardForm], StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \
\\!\\(\\*TagBox[FormBox[\\\"294.18291457605585`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[95826.08336526062], 
   StandardForm[294.18291457605585`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088830434217`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12255.253642271602`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"20297.339726433187`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"218.5932784343667`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \
\\!\\(\\*TagBox[FormBox[\\\"0.32342167698902047`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[12255.253642271602`], 
   StandardForm[20297.339726433187`], 
   StandardForm[218.5932784343667], 
   StandardForm[0.32342167698902047`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.65730888304701*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "0.00003084578117683729`"}],
  SequenceForm["average err ->", 0.00003084578117683729],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308883050808*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err pAMBS->\"\>", "\[InvisibleSpace]", 
   "0.00003894364494967832`"}],
  SequenceForm["err pAMBS->", 0.00003894364494967832],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.65730888305443*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err tAMBS ->\"\>", "\[InvisibleSpace]", 
   "0.000022747917403996256`"}],
  SequenceForm["err tAMBS ->", 0.000022747917403996256`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308883057948*^9}],

Cell[BoxData[
 InterpretationBox["\<\"............... iteration ->  \\!\\(\\*RowBox[{\\\"17\
\\\"}]\\) done....................\"\>",
  StringForm["............... iteration ->  `1` done....................", 17],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088830614243`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"100540.55844616941`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"298.25092196857213`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.1741573628592195`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[100540.55844616941`], 
   StandardForm[298.25092196857213`], 
   StandardForm[1.1741573628592195`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088830650253`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \\!\\(\\*TagBox[FormBox[\\\"95831.84804814508`\
\\\", StandardForm], StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \
\\!\\(\\*TagBox[FormBox[\\\"294.19138967696927`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[95831.84804814508], 
   StandardForm[294.19138967696927`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088830687532`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12260.386851058322`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"20281.058564074367`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"218.56048507589966`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \\!\\(\\*TagBox[FormBox[\\\"0.3232107379143865`\\\
\", StandardForm], StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[12260.386851058322`], 
   StandardForm[20281.058564074367`], 
   StandardForm[218.56048507589966`], 
   StandardForm[0.3232107379143865]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308883072405*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "0.000033360150294113125`"}],
  SequenceForm["average err ->", 0.000033360150294113125`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308883102087*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err pAMBS->\"\>", "\[InvisibleSpace]", 
   "0.00006090141963849185`"}],
  SequenceForm["err pAMBS->", 0.00006090141963849185],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.65730888310594*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err tAMBS ->\"\>", "\[InvisibleSpace]", 
   "5.818880949734407`*^-6"}],
  SequenceForm["err tAMBS ->", 5.818880949734407*^-6],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308883109591*^9}],

Cell[BoxData[
 InterpretationBox["\<\"............... iteration ->  \\!\\(\\*RowBox[{\\\"18\
\\\"}]\\) done....................\"\>",
  StringForm["............... iteration ->  `1` done....................", 18],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308883113229*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"100534.43538342879`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"298.24918648196405`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.1740926869145114`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[100534.43538342879`], 
   StandardForm[298.24918648196405`], 
   StandardForm[1.1740926869145114`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308883116816*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \\!\\(\\*TagBox[FormBox[\\\"95822.61812831278`\
\\\", StandardForm], StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \
\\!\\(\\*TagBox[FormBox[\\\"294.1867010427144`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[95822.61812831278], 
   StandardForm[294.1867010427144]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308883120657*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12259.382392540101`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"20284.243601364375`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"218.5668975980144`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \\!\\(\\*TagBox[FormBox[\\\"0.3232520123688262`\\\
\", StandardForm], StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[12259.382392540101`], 
   StandardForm[20284.243601364375`], 
   StandardForm[218.5668975980144], 
   StandardForm[0.3232520123688262]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308883124374*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "0.000013056057905232203`"}],
  SequenceForm["average err ->", 0.000013056057905232203`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.65730888312817*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err pAMBS->\"\>", "\[InvisibleSpace]", 
   "0.000011276964688840568`"}],
  SequenceForm["err pAMBS->", 0.000011276964688840568`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088831317368`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err tAMBS ->\"\>", "\[InvisibleSpace]", 
   "0.000014835151121623837`"}],
  SequenceForm["err tAMBS ->", 0.000014835151121623837`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308883135188*^9}],

Cell[BoxData[
 InterpretationBox["\<\"............... iteration ->  \\!\\(\\*RowBox[{\\\"19\
\\\"}]\\) done....................\"\>",
  StringForm["............... iteration ->  `1` done....................", 19],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308883138714*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"100535.56910670662`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"298.2536110537174`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.1740885093358169`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[100535.56910670662`], 
   StandardForm[298.2536110537174], 
   StandardForm[1.1740885093358169`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308883142288*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \\!\\(\\*TagBox[FormBox[\\\"95824.22786969529`\
\\\", StandardForm], StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \
\\!\\(\\*TagBox[FormBox[\\\"294.19152950825287`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[95824.22786969529], 
   StandardForm[294.19152950825287`]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088831460752`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12262.807649525843`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"20273.384125948938`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"218.54503942299615`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \\!\\(\\*TagBox[FormBox[\\\"0.3231112678563425`\\\
\", StandardForm], StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[12262.807649525843`], 
   StandardForm[20273.384125948938`], 
   StandardForm[218.54503942299615`], 
   StandardForm[0.3231112678563425]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308883149684*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "0.000020509811364910425`"}],
  SequenceForm["average err ->", 0.000020509811364910425`],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.65730888317529*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err pAMBS->\"\>", "\[InvisibleSpace]", 
   "0.00004092972707921227`"}],
  SequenceForm["err pAMBS->", 0.00004092972707921227],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088831792793`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"err tAMBS ->\"\>", "\[InvisibleSpace]", 
   "8.989565060858203`*^-8"}],
  SequenceForm["err tAMBS ->", 8.989565060858203*^-8],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308883182921*^9}],

Cell[BoxData[
 InterpretationBox["\<\"............... iteration ->  \\!\\(\\*RowBox[{\\\"20\
\\\"}]\\) done....................\"\>",
  StringForm["............... iteration ->  `1` done....................", 20],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088831865463`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"100531.45421330133`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"298.253584242015`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.174040559754703`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[100531.45421330133`], 
   StandardForm[298.253584242015], 
   StandardForm[1.174040559754703]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308883190098*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pLCL = \\!\\(\\*TagBox[FormBox[\\\"95817.99751987366`\
\\\", StandardForm], StandardForm, Rule[Editable, True]]\\) [Pa], TLCL = \
\\!\\(\\*TagBox[FormBox[\\\"294.1894781844853`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K]\"\>",
  StringForm["pLCL = `` [Pa], TLCL = `` [K]", 
   StandardForm[95817.99751987366], 
   StandardForm[294.1894781844853]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088831937857`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"zTROP = \
\\!\\(\\*TagBox[FormBox[\\\"12263.032371485564`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [m], pTROP = \
\\!\\(\\*TagBox[FormBox[\\\"20272.67183009056`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tTROP = \\!\\(\\*TagBox[FormBox[\
\\\"218.54360624374783`\\\", StandardForm], StandardForm, Rule[Editable, \
True]]\\) [K], \[Rho]TROP = \\!\\(\\*TagBox[FormBox[\\\"0.3231020343385461`\\\
\", StandardForm], StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "zTROP = `` [m], pTROP = `` [Pa], tTROP = `` [K], \[Rho]TROP = `` [kg/m^3]", 
   StandardForm[12263.032371485564`], 
   StandardForm[20272.67183009056], 
   StandardForm[218.54360624374783`], 
   StandardForm[0.3231020343385461]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088831974163`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"average err ->\"\>", "\[InvisibleSpace]", 
   "6.945019304020086`*^-6"}],
  SequenceForm["average err ->", 6.945019304020086*^-6],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308883201045*^9}],

Cell[BoxData["\<\"final result -->\"\>"], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.6573088832044067`*^9}],

Cell[BoxData[
 InterpretationBox["\<\"pMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"100531.45421330133`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [Pa], tMOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"298.253584242015`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [K], \[Rho]MOISTS = \
\\!\\(\\*TagBox[FormBox[\\\"1.174040559754703`\\\", StandardForm], \
StandardForm, Rule[Editable, True]]\\) [kg/m^3]\"\>",
  StringForm[
  "pMOISTS = `` [Pa], tMOISTS = `` [K], \[Rho]MOISTS = `` [kg/m^3]", 
   StandardForm[100531.45421330133`], 
   StandardForm[298.253584242015], 
   StandardForm[1.174040559754703]],
  Editable->False]], "Print",
 CellChangeTimes->{3.657308503041485*^9, 3.657308572023265*^9, 
  3.657308685478613*^9, 3.657308883207774*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
We would like to emphasize that the results of the pressure and temperature \
for the moist adiabat at the beginnning of the iterations were:

 pMOIST at surface pMOISTS = 99871.3 [Pa], tMOIST at surface tMOISTS = \
297.623 [K]
 
 So, the initial approximation is already a pretty good one.\
\>", "Text",
 CellChangeTimes->{{3.6573088881897593`*^9, 3.657308955093161*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]MOIST", "[", "p_", "]"}], ":=", " ", 
   RowBox[{"p", "/", 
    RowBox[{"(", 
     RowBox[{"R", "*", 
      RowBox[{"tMOIST", "[", "p", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rhMOIST", "[", 
   RowBox[{"p_", "?", "NumericQ"}], "]"}], ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"p", ">", "pSWITCH"}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"p", "/", "pSWITCH"}], ")"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"pVSAT", "[", "tSWITCH", "]"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"pVSAT", "[", 
        RowBox[{"tMOIST", "[", "p", "]"}], "]"}], ")"}]}]}], ",", "1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pVMOIST", "[", "p_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"rhMOIST", "[", "p", "]"}], "*", 
     RowBox[{"pVSAT", "[", 
      RowBox[{"tMOIST", "[", "p", "]"}], "]"}]}]}], ";"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]VMOIST", "[", "p_", "]"}], ":=", 
   RowBox[{"\[Sigma]", "*", 
    RowBox[{
     RowBox[{"pVMOIST", "[", "p", "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"R", "*", 
       RowBox[{"tMOIST", "[", "p", "]"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yMOIST", "[", "p_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"\[Rho]VMOIST", "[", "p", "]"}], "/", 
    RowBox[{"\[Rho]MOIST", "[", "p", "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.656942740054582*^9, 3.6569427420552073`*^9}, {
  3.656942782086026*^9, 3.656942853126606*^9}, {3.6569449989486*^9, 
  3.656945005591674*^9}, {3.6569461402571297`*^9, 3.65694623465483*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["EYE ADIABAT PROFILES:", "Subsubsection",
 CellChangeTimes->{{3.656873357445627*^9, 3.656873363556382*^9}}],

Cell[TextData[{
 "Let us assume that the underrun happens at a certain pressure, say, p = \
80000.00 Pa. The following equations are integrated from the tropopause to \
the surface and the height at which the underrun is computed:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["dz", "dp"], " ", "=", " ", 
     RowBox[{"-", 
      RowBox[{"(", 
       FractionBox["RT", "pg"], ")"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["c", "p"], 
       FractionBox["dT", "dp"]}], "+", 
      RowBox[{"\[Sigma]", " ", "L", " ", "RH", " ", 
       FractionBox["d", "dp"], 
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SubscriptBox["p", "vsat"], "(", "T", ")"}], "p"], ")"}]}], " ", "-",
       " ", 
      RowBox[{"(", 
       FractionBox["RT", "p"], ")"}]}], " ", "=", "0"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p", "(", "ztrop", ")"}], " ", "=", " ", "ptrop"}], ",", " ", 
    RowBox[{
     RowBox[{"T", "(", "ztrop", ")"}], " ", "=", " ", 
     RowBox[{"Ttrop", "."}]}]}], TraditionalForm]]],
 "\n\nIn the above system, we have a new term RH (relative humiidty) which \
takes on a value ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", " ", "RH", " ", "\[LessEqual]", "1"}], 
   TraditionalForm]]],
 ". \n\nIf RH=0, then the eye is totally dry. In this case, the pressure at \
sea-level is quite decremented from the ambient pressure at the surface. \nIf \
RH=1, all the heating in the eyewall owing to condensation is revered in the \
eye owing to evaporation. "
}], "Text",
 CellChangeTimes->{{3.6568796222618113`*^9, 3.6568799249850693`*^9}}],

Cell["\<\
Let us look at the effect of relative humidity on the profiles:\
\>", "Text",
 CellChangeTimes->{{3.656937704316263*^9, 3.65693773016436*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", 
   RowBox[{"zEYE", ",", "tEYE", ",", " ", "temp", ",", "RH"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pRange", " ", "=", " ", 
   RowBox[{"Subdivide", "[", 
    RowBox[{"pTROP", ",", "pAMBS", ",", "30"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pfunRH", " ", "=", " ", 
    RowBox[{"ParametricNDSolveValue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"zEYE", "[", "p", "]"}], ",", "p"}], "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"R", " ", 
             RowBox[{"tEYE", "[", "p", "]"}]}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{"p", " ", "g"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"cp", " ", "+", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"L", "*", "\[Sigma]", "*", 
                RowBox[{"RH", "/", "p"}]}], ")"}], "*", 
              RowBox[{"dpVSAT", "[", 
               RowBox[{"tEYE", "[", "p", "]"}], "]"}]}]}], ")"}], "*", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"tEYE", "[", "p", "]"}], ",", "p"}], "]"}]}], " ", "-", 
          " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "*", "\[Sigma]", "*", 
             RowBox[{"RH", "/", 
              RowBox[{"p", "^", "2"}]}]}], ")"}], "*", 
           RowBox[{"pVSAT", "[", 
            RowBox[{"tEYE", "[", "p", "]"}], "]"}]}], " ", "-", " ", 
          RowBox[{"R", "*", 
           RowBox[{
            RowBox[{"tEYE", "[", "p", "]"}], "/", "p"}]}]}], " ", "\[Equal]", 
         " ", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"zEYE", "[", "pTROP", "]"}], " ", "==", " ", "zTROP"}], ",", 
        " ", 
        RowBox[{
         RowBox[{"tEYE", "[", "pTROP", "]"}], "==", "tTROP"}], ",", " ", 
        RowBox[{"WhenEvent", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"zEYE", "[", "p", "]"}], "\[Equal]", "0"}], ",", " ", 
          RowBox[{"Sow", "[", "p", "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"zEYE", ",", "tEYE"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "pTROP", ",", "pMOISTS"}], "}"}], ",", " ", "RH"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rhi", ",", " ", 
         RowBox[{
          RowBox[{"Reap", "[", 
           RowBox[{"pfunRH", "[", "rhi", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1", ",", "1"}], "]"}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"rhi", ",", "0", ",", "0.99", ",", "0.01"}], "}"}]}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{"pMOISTS", ",", 
     RowBox[{"{", 
      RowBox[{"rh", ",", "0", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"pTROP", ",", "pMOISTS"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"Axes", "\[Rule]", "None"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Relative humidity\>\"", ",", "14"}], "]"}], ",", " ", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Pressure at z=0\>\"", ",", "14"}], "]"}]}], "}"}]}], ",", 
   " ", 
   RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6568776503766413`*^9, 3.6568776613850527`*^9}, 
   3.656877796973941*^9, {3.656878115588224*^9, 3.656878268175886*^9}, {
   3.656878311737171*^9, 3.656878401621703*^9}, {3.656878432855173*^9, 
   3.656878468093544*^9}, 3.656878653757237*^9, {3.656878840205782*^9, 
   3.656878846665906*^9}, 3.656879748788836*^9, {3.656879944161676*^9, 
   3.656879957786388*^9}, {3.6568800159116497`*^9, 3.656880020896521*^9}, {
   3.6568800693911257`*^9, 3.656880153998344*^9}, {3.6568802933010902`*^9, 
   3.6568803444438887`*^9}, {3.656937455634482*^9, 3.656937602839109*^9}, {
   3.656937656564139*^9, 3.6569376580963593`*^9}, 3.656937699397155*^9, {
   3.6569377846390877`*^9, 3.65693784770809*^9}, {3.656937929500128*^9, 
   3.6569379535628033`*^9}, {3.6569383942696047`*^9, 3.656938419092204*^9}, {
   3.6569385074450502`*^9, 3.656938508715043*^9}, {3.6569385931146717`*^9, 
   3.656938599520298*^9}, {3.656938632426475*^9, 3.6569386328334723`*^9}, {
   3.6569387187851553`*^9, 3.6569387292322206`*^9}, {3.656938794288101*^9, 
   3.6569388134772463`*^9}, {3.656938855632023*^9, 3.6569390390112667`*^9}, {
   3.6569390719155607`*^9, 3.65693912011408*^9}, {3.656939155658897*^9, 
   3.656939315639948*^9}, {3.6569393487296247`*^9, 3.656939354246971*^9}, 
   3.6569393889897823`*^9, {3.656940393016843*^9, 3.656940396729212*^9}, {
   3.657308984184226*^9, 3.657309008533205*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {GrayLevel[0], PointSize[0.01388888888888889], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJw1kglQlWUUhhGUyKVCAXG7yFICmpSoaYDvx4Sit0BABNGLyqaToBgBGiga
izGMAwqkokUqkNGCZaBomQKRaIALXEBlv3C57KXC/4kzFff2nTPzzz//8p3z
vu9zLIMjfcL09fT0Qscv7Z3KuPmUfWXdKIs3KXLviEtGulHqwRw1PWfjctaM
0trRUVYqS+n3Ls3FG8G3yhZPksT3fCQZZyxcPF1ip3O0VYhn74d0zpRJ4v8i
VK+RZVnYSWzAW/vmJ8z82e7KLkc6XwzrG16fmbpIbHJj3l6XyVewpDKzZ9ka
6ncVp75zdmrxlJidIqN8xPZXLItrPTnLn/r/hrwGzxOjWyWWP366Me8m3BZF
dB/cQfPKMHvFzOIruyXmqKsKrBtb/++30TT/d2zZNLUmMF5iFSO24xMqoQxa
FaD8lPTcgufz+hVmqRLz0Q2sAnq8YmzSSd9tbFtecd4gW2IdcdqGd2AnS/z7
cg7prcbYrnPOrl9J7COtvL01MJpablqQT/prYdP5orarUGL/07iHpsSJSfoX
yc89JKlN5+oVS2ytbsB9PA2rCGgrJX/3Md//L+W56xLTTlNkPICDfNrL68rJ
bx2K7gx5NvwhMZ2dxjqYXPfslv9J/utRULJv5MJdiVlo5ciUmBdikjlUR3ko
8fUH4dcsmiS2c4e2GrDbxFLh3Ez5NCIkjPuubpeYtptJUSPqUh2jnbooryb4
T3kYb6GR2Ki23UgTjPLaLJ/0U34P8SzW2rh4WGKrdA0fIfyqf1/YU8rzESxv
17sZSRLTyUt5jKtvb7x4ZozybYZBa/aP8/+RWE21tpqRG1VVc3ICF3m3IPbi
448nTOLMVCewFZ+80MzeasRF/q04fHSTQ9EUznTtFG047fea+ZNXuODRjoTH
zcvtp3Phpx010VUaP1Mu+LRjs3f4kf3mXPhrR2CVY2jGHC54deCG1aUHZ2Rc
+O1AuccNWa4lF/w6cPbduuMnbLjw3wnVhEVRKQu44NmJOMNR/XB7LvLoxMJN
h5Ld3+SCrwqTyhRL57zFRT4quCizPdRLuOCtwutOd40Kl3GRVxdcz6d9EbKC
C/5dGPjexsXMiYv8uhDRNTK3zIWLfejGhtl+EaGM8uyG9S+DAXrvcbEf3agy
cJ/++WrKVw2bed/ctFrLxb6oMedeYXqhnPJWY4ZhUL6dBxf70wOTknjbvPWU
fw8uKbyZmQ8X+9SDzf2qV5N8iYcG+0xfutbrRzw02DMteLs8gHhocLchwbpg
C/HQoDiy3moskHj04uzGlgPrthOPXixdOWN9VjDx6MWu5RMvN4YSjz5EeFy4
Y7aTs2M6Hn3wNpT/4PUh8ejD+QZZTEo48ehH5rYNTiW7iUc/otoCzdsjiUc/
VFbPrQ2jiMcAog4tjlkQTTwGYN6gsHKLJR4DwJfOror9xGMQtzc+VUfGEY9B
2KpUtocOEI9ByLcsnZWWQDyG4FK7svrYYeIxhNY9St+sROIxhCVBOyqPJxOP
YbyIrXU4eoR4DCOoOLYgMZV4DCP87IZ3YtI4+w/TORtC
       "]]}}, {}}, {{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2q7RKXcy7fzg0N3ZXdEm22MP4KSXv
JTslp8D5HFM8F374uATO337ByN1dbj2cH9F859bh7i1wfv7GYt0ZX3bC+Z8m
XDvByLgfzj9x8Nj+8zaH4PzMSk/eyDdH4PyDnEb/1+Qeh/OXLT7yT0r1FJzv
ILZ3UfC6M3C+7vE7O45pnYfzrzgEv1v57gKcn8OVfemqwSU4//SN8L18fZfh
/GC3iIdPnlyB880WdIcvULkG5z/4N/lKRv11OP+p5/nFYodvwPkbZt6vvKh4
C85f2sHcqVl1G87/mhz1Km33HTif26UtaKP4PTi/RuApz8OY+3A+zz5thuu+
D+B82zL/v4d/IfhzlvQsVp7zEM6PCzU5y+n9CM7fejV18r5vCL7lmQ1Mz6Y9
hvMVXNO+TnZ5AuebmphO3PIMwb//qffk4tancP4b48BWSaNncL7aa91XjJcR
/CMqpZcKGp/D+f1XriYHqbyA898HH5jIdATB3xQq6mxZ+BLOX3y2ee4joVdw
/vfjMdVChxD8BxP3fxXIew3nf7toLdnE9wbOL5iidKByD4IvflZJ4EncW0T8
Xl3zR+Yfgv8pfmHOnVXv4Pz9Cetb+Xzew/naDrG27MsQ/Ony3F///0fwAWDI
k28=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->None,
  AxesLabel->{None, None},
  AxesOrigin->{0, 93149.37274429444},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox["\"Relative humidity\"", 14, StripOnInput -> False], 
     TraditionalForm], 
    FormBox[
     StyleBox["\"Pressure at z=0\"", 14, StripOnInput -> False], 
     TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->400,
  Method->{},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.656938905977211*^9, 3.656939039625393*^9}, {
   3.6569391130964203`*^9, 3.656939122458127*^9}, {3.656939177924486*^9, 
   3.656939214420143*^9}, {3.656939285456427*^9, 3.6569393187895937`*^9}, 
   3.656939354817367*^9, 3.6569403977154417`*^9, 3.656943008579303*^9, 
   3.656943645125613*^9, 3.656946260588394*^9, 3.656947944091806*^9, 
   3.656970589536593*^9, 3.6569722124691753`*^9, 3.65697227136474*^9, {
   3.656972342645005*^9, 3.656972366509274*^9}, 3.656972761450885*^9, 
   3.657308735856945*^9, {3.6573090000427313`*^9, 3.657309009329468*^9}}]
}, Open  ]],

Cell["\<\
The above figure shows the effect of relative humidity on pressure at z=0. \
The red line is the ambient pressure at surface. Now, let us assume that the \
underrun happens at a pressure of 80000 Pa and the relative humidity from the \
tropopause to the underruun is 0.65. For this case, the altitude and \
temperature can be computed as:\
\>", "Text",
 CellChangeTimes->{{3.6569394911074543`*^9, 3.656939553603245*^9}, {
  3.656939617923542*^9, 3.656939632426145*^9}, {3.6569399880715437`*^9, 
  3.65694006070009*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RHPlus", " ", "=", " ", "0.65"}], ";", " ", 
  RowBox[{"RHMinus", " ", "=", " ", "1.0"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearSystemCache", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pUnderrun", " ", "=", " ", "80000.0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"zEYEp", ",", " ", "tEYEp"}], "}"}], " ", "=", " ", 
   RowBox[{"pfunRH", "[", "RHPlus", "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"zUnderrunPlus", ",", " ", "tUnderrunPlus"}], "}"}], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"zEYEp", "[", "pUnderrun", "]"}], ",", " ", 
    RowBox[{"tEYEp", "[", "pUnderrun", "]"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.65693842844559*^9, 3.6569384642825413`*^9}, {
   3.6569385162981577`*^9, 3.6569385171932583`*^9}, {3.656938619192232*^9, 
   3.656938627207837*^9}, 3.65693866371931*^9, {3.656938806557498*^9, 
   3.656938807309004*^9}, {3.656939679737184*^9, 3.656939704153222*^9}, {
   3.656940076035657*^9, 3.656940089411386*^9}, {3.6569401635001907`*^9, 
   3.656940174866762*^9}, {3.656940227915751*^9, 3.65694024391383*^9}, {
   3.656940341823371*^9, 3.656940348271842*^9}, {3.656940464831292*^9, 
   3.656940494358265*^9}, {3.6569406008683243`*^9, 3.656940618708591*^9}, {
   3.65694101690469*^9, 3.65694104504674*^9}, {3.656941526927189*^9, 
   3.6569415728635683`*^9}, {3.6573102675233297`*^9, 3.657310272363162*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1875.2913215206004`", ",", "292.28322696134813`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.656940494781245*^9, 3.656940619482295*^9, {3.656941018105443*^9, 
   3.656941045410845*^9}, 3.6569415418811483`*^9, 3.656941573967946*^9, 
   3.6569430106893473`*^9, 3.656943645286656*^9, 3.656946262869465*^9, 
   3.656947944292781*^9, 3.6569705896286592`*^9, 3.6569722124903173`*^9, 
   3.656972271375947*^9, {3.656972342655909*^9, 3.656972366627326*^9}, 
   3.656972761466893*^9, 3.6573087413534117`*^9, 3.657309201042982*^9, 
   3.657310274919076*^9}]
}, Open  ]],

Cell["The surface pressure at the eye is computed as:", "Text",
 CellChangeTimes->{{3.657309278897789*^9, 3.657309298536075*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", "p", "}"}], ",", " ", 
   RowBox[{"p", " ", "/.", " ", 
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"zEYEp", "[", "p", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "pMOISTS"}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6573093060748577`*^9, 3.6573093481834784`*^9}}],

Cell[BoxData["99292.06953133392`"], "Output",
 CellChangeTimes->{3.657309348612309*^9, 3.6573102871289587`*^9}]
}, Open  ]],

Cell[TextData[{
 "At the underrun, the pressure is continuous but the temperature (and as a \
consequence density) will be discontinuous. The total energy will also be \
continuous. Therefore we equate the energy at the underrun as follows:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["C", "p"], 
      SubscriptBox["T", "+"]}], " ", "+", " ", 
     RowBox[{"\[Sigma]", " ", "L", " ", 
      SubscriptBox["RH", "+"], 
      RowBox[{
       RowBox[{"P", "(", 
        SubscriptBox["T", "+"], ")"}], "/", 
       SuperscriptBox["p", "*"]}]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["C", "p"], 
      SubscriptBox["T", "-"]}], " ", "+", " ", 
     RowBox[{"\[Sigma]", " ", "L", " ", 
      SubscriptBox["RH", "-"], 
      RowBox[{
       RowBox[{"P", "(", 
        SubscriptBox["T", "-"], ")"}], "/", 
       SuperscriptBox["p", "*"]}]}]}]}], TraditionalForm]]],
 ",\n\nwhere ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["p", "*"], TraditionalForm]]],
 " is the pressure at the underrun. "
}], "Text",
 CellChangeTimes->{{3.6569411605179157`*^9, 3.656941331506497*^9}, {
  3.656941392457197*^9, 3.656941428392971*^9}, {3.65694177817945*^9, 
  3.6569419128820066`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", "tUnderrunMinus", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"tUnderrunMinus", "  ", "=", " ", 
  RowBox[{"tUnderrunMinus", " ", "/.", " ", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"cp", "*", "tUnderrunPlus"}], " ", "+", " ", 
       RowBox[{"L", "*", "\[Sigma]", "*", "RHPlus", "*", 
        RowBox[{
         RowBox[{"pVSAT", "[", "tUnderrunPlus", "]"}], "/", "pUnderrun"}]}]}],
       " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"cp", "*", "tUnderrunMinus"}], " ", "+", " ", 
       RowBox[{"\[Sigma]", "*", "L", "*", "RHMinus", "*", 
        RowBox[{
         RowBox[{"pVSAT", "[", "tUnderrunMinus", "]"}], "/", 
         "pUnderrun"}]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"tUnderrunMinus", ",", " ", "tUnderrunPlus"}], "}"}]}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.656941452083272*^9, 3.656941717155282*^9}, {
  3.656941749380331*^9, 3.656941773302395*^9}, {3.657310260064557*^9, 
  3.6573102899308453`*^9}}],

Cell[BoxData["287.8293411353511`"], "Output",
 CellChangeTimes->{
  3.656941696426277*^9, 3.656941727471712*^9, {3.656941760325798*^9, 
   3.656941774277802*^9}, 3.65694301337597*^9, 3.656943645328539*^9, 
   3.656946269183565*^9, 3.656947944322261*^9, 3.656970589645391*^9, 
   3.656972212508848*^9, 3.656972271412801*^9, {3.656972342692371*^9, 
   3.6569723666611137`*^9}, 3.656972761504126*^9, 3.657308743993704*^9, 
   3.657309488975977*^9, 3.657310290787867*^9}]
}, Open  ]],

Cell[TextData[{
 "Using the temperature at the underrun ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["T", "-"], ")"}], TraditionalForm]]],
 ", we now integrate the moist adiabat equations to get the temperature \
profile from underrun height to the surface."
}], "Text",
 CellChangeTimes->{{3.656880159141159*^9, 3.6568801787571993`*^9}, {
  3.656940407054398*^9, 3.656940460069881*^9}, {3.656941934780068*^9, 
  3.65694199923276*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", 
   RowBox[{"zEYE", ",", "tEYE", ",", " ", "zEYEm", ",", " ", "tEYEm"}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temp", " ", "=", " ", 
   RowBox[{"NDSolveValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"zEYE", "[", "p", "]"}], ",", "p"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"R", " ", 
            RowBox[{"tEYE", "[", "p", "]"}]}], ")"}]}], "/", 
         RowBox[{"(", 
          RowBox[{"p", " ", "g"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"cp", " ", "+", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"L", "*", "\[Sigma]", "*", 
               RowBox[{
                RowBox[{"h", "[", 
                 RowBox[{"pSWITCH", "-", "p"}], "]"}], "/", "p"}]}], ")"}], 
             "*", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"pVSAT", "[", 
                RowBox[{"tEYE", "[", "p", "]"}], "]"}], ",", 
               RowBox[{"tEYE", "[", "p", "]"}]}], "]"}]}]}], ")"}], "*", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"tEYE", "[", "p", "]"}], ",", "p"}], "]"}]}], " ", "-", 
         " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "*", "\[Sigma]", "*", 
            RowBox[{
             RowBox[{"h", "[", 
              RowBox[{"pSWITCH", "-", "p"}], "]"}], "/", 
             RowBox[{"p", "^", "2"}]}]}], ")"}], "*", 
          RowBox[{"pVSAT", "[", 
           RowBox[{"tEYE", "[", "p", "]"}], "]"}]}], " ", "-", " ", 
         RowBox[{"R", "*", 
          RowBox[{
           RowBox[{"tEYE", "[", "p", "]"}], "/", "p"}]}]}], " ", "\[Equal]", 
        " ", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"zEYE", "[", "pUnderrun", "]"}], " ", "==", " ", 
        RowBox[{"zEYEp", "[", "pUnderrun", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"tEYE", "[", "pUnderrun", "]"}], "==", "tUnderrunMinus"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"zEYE", "[", "p", "]"}], ",", 
       RowBox[{"tEYE", "[", "p", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "pUnderrun", ",", "pMOISTS"}], "}"}], ",", " ", 
     RowBox[{"MaxStepSize", "\[Rule]", "100"}], ",", 
     RowBox[{"StartingStepSize", "\[Rule]", "100"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "Infinity"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"zEYEm", "[", 
    RowBox[{"p_", "?", "NumericQ"}], "]"}], " ", "=", " ", 
   RowBox[{"temp", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tEYEm", "[", 
    RowBox[{"p_", "?", "NumericQ"}], "]"}], " ", "=", " ", 
   RowBox[{"temp", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.656940536022472*^9, 3.6569405933575497`*^9}, {
  3.656940624156011*^9, 3.656940686859785*^9}, {3.656942009890131*^9, 
  3.6569420135382023`*^9}, {3.656943036172217*^9, 3.6569430485833273`*^9}, {
  3.657309514736347*^9, 3.6573095246862593`*^9}}],

Cell["The final profiles will be a composite profile:", "Text",
 CellChangeTimes->{{3.6569407042583523`*^9, 3.656940709803206*^9}, {
  3.656940758699657*^9, 3.656940787145227*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", 
   RowBox[{"tEYE", ",", "zEYE"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tEYE", "[", 
    RowBox[{"p_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"p", "<", "pUnderrun"}], ",", 
     RowBox[{"tEYEp", "[", "p", "]"}], ",", 
     RowBox[{"tEYEm", "[", "p", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"zEYE", "[", 
    RowBox[{"p_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"p", "<", "pUnderrun"}], ",", 
     RowBox[{"zEYEp", "[", "p", "]"}], ",", 
     RowBox[{"zEYEm", "[", "p", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"rhEYE", "[", 
     RowBox[{"p_", "?", "NumericQ"}], "]"}], ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"p", "<", "pUnderrun"}], ",", "RHPlus", ",", " ", "RHMinus"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yEYEp", "[", "p_", "]"}], ":=", " ", 
   RowBox[{"RHPlus", "*", "\[Sigma]", "*", 
    RowBox[{
     RowBox[{"pVSAT", "[", 
      RowBox[{"tEYEp", "[", "p", "]"}], "]"}], "/", "p"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yEYEm", "[", "p_", "]"}], ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"p", " ", "<", "pSWITCH"}], ",", " ", 
     RowBox[{"\[Sigma]", "*", 
      RowBox[{
       RowBox[{"pVSAT", "[", 
        RowBox[{"tEYEm", "[", "p", "]"}], "]"}], "/", "p"}]}], ",", " ", 
     RowBox[{"\[Sigma]", "*", 
      RowBox[{
       RowBox[{"pVSAT", "[", "tSWITCH", "]"}], "/", "pSWITCH"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"yEYE", "[", "p_", "]"}], ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"p", " ", "<", " ", "pUnderrun"}], ",", " ", 
      RowBox[{"yEYEp", "[", "p", "]"}], ",", " ", 
      RowBox[{"yEYEm", "[", "p", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]EYE", "[", "p_", "]"}], ":=", " ", 
   RowBox[{"p", "/", 
    RowBox[{"(", 
     RowBox[{"R", "*", 
      RowBox[{"tEYE", "[", "p", "]"}]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.656940791361548*^9, 3.6569407990021553`*^9}, {
  3.656940841177136*^9, 3.6569408795362263`*^9}, {3.656942860759153*^9, 
  3.6569429127089577`*^9}, {3.656943058906836*^9, 3.656943066187114*^9}, {
  3.656946633658454*^9, 3.6569466339954987`*^9}, {3.656946668853355*^9, 
  3.656946744271228*^9}, {3.65730995280945*^9, 3.657309954229773*^9}, {
  3.657310297882524*^9, 3.6573102980750017`*^9}, {3.657310328172181*^9, 
  3.657310552167235*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"tEYE", "[", "p", "]"}], ",", "p"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Teye [K]\>\"", ",", "\"\<p [Pa]\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"ScalingFunctions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Identity", ",", "\"\<Reverse\>\""}], "}"}]}], ",", " ", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"200", ",", "10000"}], "}"}]}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Dashed"}], "}"}]}]}], "]"}], " ", "//", " ", 
  "Rasterize"}]], "Input",
 CellChangeTimes->{{3.656940920255898*^9, 3.656940934008059*^9}, {
  3.657309570980715*^9, 3.657309573276574*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
   "], {{0, 0}, {360, 
   310}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{360, 310},
  PlotRange->{{0, 360}, {0, 310}}]], "Output",
 CellChangeTimes->{
  3.656940936769038*^9, {3.656941023373948*^9, 3.656941049216153*^9}, 
   3.6569420273561583`*^9, 3.656943095655723*^9, 3.656943645405486*^9, 
   3.6569467493162746`*^9, 3.656947944386793*^9, 3.656970589739078*^9, 
   3.656972212573625*^9, 3.6569722714797983`*^9, {3.656972342760394*^9, 
   3.656972366727962*^9}, 3.6569727616602707`*^9, 3.65730874848934*^9, 
   3.6573095737098837`*^9, 3.6573105567250013`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"zEYE", "[", "p", "]"}], ",", 
      RowBox[{"tEYE", "[", "p", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "pTROP", ",", "pAMBS"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<zeye [m]\>\"", ",", "\"\<Teye [K]\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "200"}], "}"}]}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Dashed"}], "}"}], "}"}]}]}], "]"}], " ", "//", 
  " ", "Rasterize"}]], "Input",
 CellChangeTimes->{{3.656942059433717*^9, 3.656942070433037*^9}, {
  3.657309576796731*^9, 3.657309579284309*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt3QuwG1X9B3DaUlQe5SHysIWClgoK4iiMr3FwrCCo//HF8FBQFF3/42P/
OOrqMK4CRnxEGKJgRONrp0zkEZSIEYjAhVkeaUlxC6y4hbQESJvaUJZuy9Lu
vb//OZu99+Y+2ty9N8nZbL6f4ZHH3uSXvZvvPefs7tljv/B/n/zCgr322ut/
5u211/+yf/ltAgDoIUmSRJcAAH0GuQEAYUmjRBcCAH1DaGJ4juN4rfddx3G9
PSzQJVPelj+wpwU697at99t+/CkLdAR/l6l1TC50j+unk9VM+xmnvKOgTaX9
b6Q7m0rk9CQ33GJSaqEaDpFtjj6WNGy+kJkPHkjkTH5/ygIdZGVVzXT8m3Y+
KTffJmc2/LfNB2+byDemW6AjbKsQvKiSqfiFtP34kxfoTBlFJXgXJW/M6ONP
WWCOnJwiaWbwC572M059x25sKlZOlTX+atXChI01O1rbDH4jXdlUoqk37Q23
WmRvpJWq7LbnsTj29KSk5ivsbqWQkNSCWx9iq99if1K8SkKSCtXtkxfoRBl2
1SyXS6VyKZuUE1qxant1PcW+MS6vsMAKqHi1lCTlK/yBgsretjJlgU7U4VWT
/F14XhiazDfXth9/8gIdWR9OVpbS5Tq/ZeXY78emth9/8gIdqSHIjek/45R3
7M6mYmaVZm6wj8reUdFK/Nfjb6y+tlus25VNJap61k9xayW2elWt5K9OW5OV
UjPI7RL7hW1k3590qblkOa1kjOcmLdCRFofFtlEpURgqpFVZSWWNumtoSrrU
/NPQyEhKebOhSJnmfduvY/ICTifqcExWR/OlGnpKzhhOu48/Zf10ZH04WRYW
fjMjyA2n3cefsn46UMNobkxZCf5nnFJS23U1u1UznhuMV8uqLDuytfHvftst
1u7KphJVvR3fqGcVSc6w6LCzyuhvwSkrcnajyVZ6ubmQkVHZxjBpgc70VLwK
+0M/1KBqLqGZ/O+Sqamjv2u2Yajse6HKo1upkWFbw+QFOrIxuCbvHbDkyqZ5
S9hoOO0+/pT105n14Vi8CyArctAgd9p9/CnrZ84luLmx3Jj2M04pqe26mt2q
qeRacoPzyjw7MvXgbtst1u7KphJVvcmNhqXrlr9K3TLbTg3H/0vnjzC4FrvJ
fwvsv/6a9jckY+OkBTo1wuFW2TclkUkqmr9Zms1uAuOx77JsbDZkSfEThTVO
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
   "], {{0, 0}, {360, 333}}, {0, 
   255},
   ColorFunction->RGBColor],
  ImageSize->{360, 333},
  PlotRange->{{0, 360}, {0, 333}}]], "Output",
 CellChangeTimes->{
  3.6569420716105623`*^9, 3.656943096713521*^9, 3.6569436454598503`*^9, 
   3.656946751262312*^9, 3.656947944524582*^9, 3.656970589786661*^9, 
   3.656972212623156*^9, 3.656972271529921*^9, {3.656972342815832*^9, 
   3.656972366775426*^9}, 3.656972761736354*^9, 3.657308750317627*^9, 
   3.6573095796428127`*^9, 3.657310557709016*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", 
   RowBox[{"totTempAMB", ",", " ", "totTempMOIST", ",", " ", "totTempEYE"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"totTempAMB", "[", 
    RowBox[{"p_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"tAMB", "[", "p", "]"}], "+", 
    RowBox[{"(", 
     RowBox[{"g", "*", 
      RowBox[{
       RowBox[{"zAMB", "[", "p", "]"}], "/", "cp"}]}], ")"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"L", "*", 
       RowBox[{"yAMB", "[", "p", "]"}]}], ")"}], "/", "cp"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"totTempMOIST", "[", 
    RowBox[{"p_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"tMOIST", "[", "p", "]"}], "+", 
    RowBox[{"(", 
     RowBox[{"g", "*", 
      RowBox[{
       RowBox[{"zMOIST", "[", "p", "]"}], "/", "cp"}]}], ")"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"L", "*", 
       RowBox[{"yMOIST", "[", "p", "]"}]}], ")"}], "/", "cp"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"totTempEYE", "[", 
    RowBox[{"p_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"tEYE", "[", "p", "]"}], "+", 
    RowBox[{"(", 
     RowBox[{"g", "*", 
      RowBox[{
       RowBox[{"zEYE", "[", "p", "]"}], "/", "cp"}]}], ")"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"L", "*", 
       RowBox[{"yEYE", "[", "p", "]"}]}], ")"}], "/", "cp"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6569425680329647`*^9, 3.656942659672237*^9}, {
  3.656943353030319*^9, 3.656943370158613*^9}, {3.656943763738587*^9, 
  3.6569437639052677`*^9}, {3.656946767998892*^9, 3.6569468290785*^9}, {
  3.656970899639484*^9, 3.656970936925296*^9}, {3.6573095852531424`*^9, 
  3.6573096097957773`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotAMB", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"totTempAMB", "[", "p", "]"}], ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Ttotal, ambient [K]\>\"", ",", "\"\<p [Pa]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"300", ",", "10000"}], "}"}]}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Dashed"}], "}"}], "}"}]}], ",", 
     RowBox[{"ScalingFunctions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Identity", ",", "\"\<Reverse\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotMOIST", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"totTempMOIST", "[", "p", "]"}], ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Ttotal, moist [K]\>\"", ",", "\"\<p [Pa}\>\""}], "}"}]}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"300", ",", "10000"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "DotDashed"}], "}"}], "}"}]}], ",", 
     RowBox[{"ScalingFunctions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Identity", ",", "\"\<Reverse\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotEYE", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"totTempEYE", "[", "p", "]"}], ",", "p"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Ttotal, moist [K]\>\"", ",", "\"\<p [Pa}\>\""}], "}"}]}],
       ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"300", ",", "10000"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
      RowBox[{"ScalingFunctions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Identity", ",", "\"\<Reverse\>\""}], "}"}]}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"plotAMB", ",", "plotMOIST", ",", "plotEYE", ",", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Red", ",", "Dashed"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", "DotDashed"}], "}"}], ",", "Black"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Total Ambient Temperature\>\"", ",", 
              "\"\<Total Moist Temperature\>\"", ",", 
              "\"\<Total Temperature in eye\>\""}], "}"}]}], "]"}]}]}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Ttotal [K]\>\"", ",", "\"\<p [Pa]\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Ttotal vs. p, for ambient, eyewall, eye\>\""}], ",", 
     RowBox[{"FormatType", "\[Rule]", "TraditionalForm"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"300", ",", "10000"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], " ", "//", " ", 
   "Rasterize"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.656943147219015*^9, 3.6569431515056467`*^9}, {
  3.656943670747724*^9, 3.656943672802555*^9}, {3.656943754122547*^9, 
  3.656943778905002*^9}, {3.6569438121856403`*^9, 3.65694382957922*^9}, {
  3.656946841854865*^9, 3.6569468488077374`*^9}, {3.6569473136628437`*^9, 
  3.656947331578456*^9}, {3.656947908537328*^9, 3.656947931837616*^9}, {
  3.656947998463834*^9, 3.6569480071936502`*^9}, {3.657309614678309*^9, 
  3.657309705123201*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
EeOHe6URYhZkkhic+YFKMsPrjZay8ZWl2HrNjB9Gg53PTMupU8WPNva7NOo2
Sm2NH/HOrZw+xA/ASn/8x+JNbxKPPup0HRYjftjms59VF/Hkn1xu14/NP23r
LdnsMLu77EpyyLxkYNhWfaNMCGaQUOsr2ZWRnQsarpYLFp3jx9RaJa+68JHN
yrqmfqzV1vSN853bau5qV0MD2sK6GkqQ2wz440c7lrVhVzttOrkncgzGK83l
ndGPZvxYkzt1+6NTQ+37UmMXKlGMLG2aDXY6My2nrnWoRL/m4m6PH8nOrZw+
xA/AYseZ8HZaED9ss7Sk7uSWf0qlXT82/7Stt2Szw7SNGGyOto5I6F3n8Ny6
qCUHzY/wNfmRfCW5qU8KzcdnRw69+DKdzM4MmqMQS3Lz0Vhpfdq4vNKxrebo
h7pU4R6eXUnmS6XNbDavpoFWplX8OOLoh76HoenNUimfL+XXZl36lSAjXczp
kaGmX+yYzdb0ZfOSUOsGcvWsTARDM/fp13WWstvbcl+l9XG155mK3kTjEDqf
mZZT1xY/BhrxQ74+njdXdmzl9CF+ANZ75hnx4Q+L+Xmn67AMXznX39q6bKMH
dI3OxrLrsfFBfQLDttjU5yEMTy+t5ysran6le2ZlLZtN6hNH1ejBfvFD9bxz
MwONCaj6Pa3DKzEjfnRuq5T06zGgNK0636m1zbwxU2Jodr2yGdP0WRnx9Y5T
MtuPZX1WM/efTfrVuMJQspEuXK6RlWTSnJg6OLqSjE8PDxgTYs0N3COx9Wx8
Vh3t6FK+trmgrv8MT8vDXpke0Sdl5M0W5fLUlH869r1OZ6bl1D25J374txsn
fHDEPzU+/UimYyunj9bgdCFAD9naEj/3c+Laa0Uq5XQp1uDG2/7WPl1TrjE6
Pv2Sx/BStmTeUaIbnlkTtfzcuLZzbWBJTVU4IH64B9xqPoMRF2rq+oumJoEY
95vsbUtU1mcH3MMyJ9Ty8dEh8y4QbXxOVrg2Y7br1mY6De3sPZaakR/0/Y+s
bFb0/c8NugdHRo1ducfnYivT5vLobLK5wfCwecwjM3Gj9tLagmaW4/YvGBM0
SrPDg0PD+uqhmVKHM9N66u6fGRqYTpqFr80MDwzPVvSFweFRTU28dcuE1amV
04fgAZyIBx8UV12lpqGeO+d0KRYgfvS3ijFicMgIfy3ZmD/ZWef4UYobfe/A
+Epz3crowM68iP1a2/eRF/rFl32nnh7tWGx22KnrScQP4KTcdZc4c0b83b8r
Kqf+XxWe+9GX5Mf2AfeA1PikrS8PdB5VUFNS1fSN2L6zIDs/KbQUN2Zi+lui
RuPax8B+jxXVL7649nm1ok8jabsX9ZjHYrPDTl1PIn4AJ+hLXxJXXy3uvdfp
Oi4XU0/7UmVpanRktM3I6NTSfnm6kl9Xt8Huo7a5NDLsX297c2V9amRkZHQ6
2/q+WnZ6VK7c94Fatc2VDrvasb3e/tCPYx+LzQ4+dT2J+AGcrMcfd7oCCzD1
FIC1iB+AHb76VTE0JOp1p+u4RMz9AGAt4gdgB/kfmsulvhfmdD4VhPgBwFrE
D8AOFy+Kj39cJZCzZ8X5805Xc2xMPQVgLeIHYB+PRyWQd7/71I2BMPUUgLWI
H4CtPvc54fM5XcSxET8AWIv4ATjj3nvF2prTRRwV8QOAtYgfgANqNfGqV4kX
vlDcfbfTpRwJ8QOAtYgfgDPuv19cf7147nPFnXc6XcrheO4HAGsRPwDHbGwI
t1tNRh0ZUbfGdDFuvAVgLeIH4KRSSfzKr4iBAfHss06XchDiB3CZavn4lH82
2yUPee8CxA/AYfW6CiHSuXNia8vpajrjuR/AZer8jXt9jPgBdIt3vlPNR02l
nK6jg0996lMyfrzjHfc4XQi6SK1U2t4utT3CplKpmGsq8tXtysk/4aam2tm3
U9dfPFKXv1P5Uds93gHqX+M7mKyogkttYyC1iirzgH3tczJ3atb3cEgxh7Zi
L63B6UKAvheJiKuu6s7bYc6ePSvjx0033eV0IXBEaWZI9pzTLb14fmZkwGUa
mI5tGiunNfV19u7x2NrcaONV1/D4qFzrj2+XktNyL/HWLFBJqh3747taq60N
q7fNJacGXQNTxuadlkvTg7LxRhmD42uVXVvWNmPDzRrd2pJ+2aN1P5W1Zj07
lR/t8LdnRwebBzg6l9y9t87Levxwud3muzS/+WW76wv+xjrXwLDxJb+lKbdr
PG5+aW/Hk9lacz423djDwNCAWap+pDs1d2rFYQQPoIs0b4f5L//F6VJ2+b3f
+z35r9YDDzzgdCFwRGlKdfRTze+wX1F9oHs6li2VsrN6DlFzGkoxuaRNLazn
Hx5RPeXsdq22nV0Z1sNBzOx/B3bFD1Fb0DfNtqzKL6ne1h/bTk4NuNzNyLF3
WY8frsGF9W2zlaGZ0s6rm2rHAyOx7HZpMz7iNltp3c9OPTuVdxwnaT/8mF9u
7p5aWS+V8gt+VcT0eqX16Doum/FjeFpWtLYwLpdHFjZLKpy4hsblUikbU8su
FYFK/p34ke14Mltqzsljcg2Mr+W315b8+uuq1F1H2rkVhxE/gO7y2GPiF35B
hZCjjRjbg6mn9nn6aZHP7/pz4YId6w9ijDNMNX4jVYe4M1BQW9NUT5oVlbjs
Bv1J+Zk+P64PRyQ3tytqhKO1/22LH2anPLqQ3Mxm19ezm5tJvT8fyXaOHK3L
aohAmzWTy3ZMtjkg+2Xj1bze4U4lzcYq+eTCQmy7tk/82Kn8KIe/rcYRRlca
h59fWVhayx8xfrhXGiFmQSaJwZkfqCQzvN5oKRtfWYqt18z4YTTY+WS21KzO
w2hjv0syGeqlth5pvHMrDiN+AF2nWBQPP6wWLl7sku+nY+qpfT77WXUvduuf
XM6O9QfZ3f/qV0z88eZgwLbq6GQaMTpEfX0luzKyc3XC1XL1oT1+CLE56na1
GZpWDwQ+NH609NGismbu3Hg1F59q36lrqPlq5/ixc0QHH75+bWg3bTq5J3IM
xiu7WjGCVjN+rMmduv3RqaH2famxC5UoRpY2zQY7ncyWmluHSvRrLu72+JHs
3IrDiB9A9/J6xd//+2Lb8X8neOqpjZaWxK237vpjjIOd9PqDtH383xxtHf3Q
+8HhuXVRSw6an8dr8vP1SnJTnxaaj8+O7H/xRVmblp2jeykvP47XVsbVhQSj
j1Y9qWvc+O1vXV5THatf9dEDrgF/0thJfmW0dfRje31Wv2Sxpk+PLcVVE8ar
O/sxEou6kLFT+VEOX7UrE9JmqZTPl/JrqiF/vGSkizk9MtT0sZfZbE1fNltp
3UCunh1SV4vu06/rLGW3t+W+Suvq6IdmKnoTjTPc+WS21NwWPwYa8UMdaX7n
7O1txWHED6B7feEL4swZdS3m8M+nJ4v40d/a+l+jO3ONzsay67FxfQJGbFts
6pMKhqeX1vMVlQVc7pmVtWw2qU9SVUMB+8UPkV9yu4zLKOua2sVcraWVwdHZ
ZHJBn2XpGvLPxWNz6pP8yJJZleyCF5Lr8Vm1qM1WzP5XhhM1JiNXyRfNV/Xd
GvscGJ1JrsX8akfaWm1X5Uc5/PVZzTz8bFLfyVCykS5kZSvJpDkxdXB0JRmf
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
BPya5olu1cvpkOYJlXfvv7AakG+Pm4MZ5WhgrPE+Tzihnp+fkt1b69f3VFPN
LdTOI4lmndqu7lI94MUb1isvZ4LNh734gplqh+PSj20r1Ni1d2JSLo5FMq01
t7zF/N7kcjqsNvaYu17O6M/Vbb6lutHcofmEmWp6zMhO6tXm8pZRXjBR3HMU
ophe3Kk9sNwY9KlHJ+U+Q80fExF/87yFVnPmqVJfIqDN6we8GpCnMVTQ16fm
Gxt7xvxj+vccVdM+vZhm8dZWAgDAsaR2d9PlVEj2+YmtaiEuY4MWjueq1cJy
QGaNMdnLNV+V79K0QK6uvs5vUvXO/o263i9rbfGjOq930BP6x+dqRvXm4URO
hYyIfCEg88dWfD68mNr5vF1NqU5wLLRRrubi+vZ6by43i+zq7NSX++hfZFyP
qvgzmSqUy1sJVYz+nNvUnvihZwnPck6+WIzqgcDsjhs1t7xF/97kRvyYCCeq
9eKy2rU/Z54i9ZbVSfViPFeuFjNq0Rup6kM3IT2qieZyOaEWVjPl+p6jqGbG
VO2LhWp9K6WyxMRyzvhrMJLAck6dGOMiSDCaqdbLqyH1ihHnUmH9VM3Lc7s1
qecBGQJFfUOmxol59eUCxgn0ybPUKKZ5vNZWAgDAsbTHj8anYxUwxhab352j
d14tn53DKpBE02qKaDkVNFZ2iB+FVfmZfHLSJzdQ3VR5K5WW3Vh1K5MI+83e
vJ3RljnboBrxau2DGI1KzfihDzIEG3NFCioTBAud4ocxVhBYljmlvqs79hwQ
P0I7ReqTUiKZauMwtwKNWFVXR5aOJzbqHeOHWvCmOl2r0JOMtlqQmaGuCoyv
JjbUe7eW/ep7E31GvtL/LjzhotC3qhcSq/GNolwqBOXJ9alLI2V1npsxLydP
gcc/v7El31FdHNM8neKHpZUAAHA8HeKHZg7O76zXRyR2dV71rfnJlqfbe8Md
40dmfkz1VkXVcS+qj8/11PzkznvinYbum3M/lLpME0eJH5OND+F6xvAkyh3i
h5ReDnparuyEmwFD70I7XXxpuZykX7+QOcc8zHKi9en++hWLcLmR05oH0owf
ib1dvjkgs8uYupykH1okU0jIgDO5pcLeWNtmardbUdlkPBP1ytAx79d88ykZ
FbyRqrootOr37mzccfTDykoAADimtm66qne4xsULoy9T9A/+sldtvlrcSEVX
M3V9EmJq0b/P6EchaF4aUIMYKiqoHlPzh5czW8XiVi5X6NQl61GnMZpRDXv0
D++dtlP7DKdFfcMvu8bVLWNtbnlC0wIFY3ymWb+hXpSf1tVdpNXqVnrRY3bH
sts1s4GaDuGb15NIQXa3jYsvjYGLYlwfH2gepvqaIW8wXq4Wi+VyXA0LhIp6
8QEjC9X1uCJ753p6v9EPY0AmkiqoqZzljD7JwjxLi7lGEsvIKuSe/Jmi2qqQ
ntdfrasjVX8XRSNRjUUyohjVj0V9AYE+dlEvFzIhY+DisPhxOZV0+tsBAOAg
u+JHvRhXEwsnVtNbpbQ+ASC8urGRUFM/tMBWy6vbiaA+ByCVy6XVBFX92kpb
11bdmDf6a2lLzc/w54pxjz4LopBLqPmLE9EOBZmTDcaimVxCHyqZ3+jQc1e3
4hN6famNQiLoVZNjE5lMPKKWQmpGpd5Rav5QODyfaNzGk/Gp6Q3zG1u5xGLA
2LP5qd8fSaejxkTb4HIivjjZ+qpnIpLZSOkzHdRklebcD70J2e7GRmrRqwY/
0o3ifcup9GpYHeJyrr6ViKjJtavpTjeiqAsomi8oz6N+bmVvXtV3G9BPW12F
qcnVem7R+LuQZ1uV4QkWRHXeZwazuP7XY8xxnVSb5/UjmVjN5DZSy6pEWdhh
8eMyKgEA4NhaL7JUNxbNaxNjEdlD5VbDxvUFz1gwVajvfrWemg+YP3rG5lOq
F2rr2jLzfs/EvPljOTWheZdz1cxy0Lgs4B0LpDpOG6hnJn1jwZA+oVXzBpcz
HcvORMyrAF7/YlUUl4PmTToToWi52bpvzKdmos43SypmlifMqxIefziuBkIy
iz6vP+BXB+rxBeLpVaNhX2CxEajGAsZlJq9fHzpRZ2nMv6jvs2xkDH1IZ7Vs
Fj8RmTcGJDyTEZl8yvNmpROpTr2+KKaDY8aJ9EXUrUDl+Ql52syjLqbCHp+6
n2UrMd/8u0irgY2NSY8nol+iKqYiHo/fuFqVCo+NqbCxEfabl4a8Y0F1v87h
8eNSKwEA4MiqhVw6ndnYyCzK7ta/qJbS6Y1CtZoOyu5pv0c6HPxqc1jAFvVF
NecjWq5ewqNHjkodkSfcdrz1YmY1njlGo/WU7Ks7XnyxTzN+2Pp3BADALulw
+8RJzbjcX85EGgMIHRz4asfnfpycQjxofArvOKvTEh2PSN3powWP87m/HJ+P
ZJzt8hsPIbH57wgAgB6knozK0zcBAAAAAAAAAH3n/wOLRMNV
   "], {{0, 0}, {725, 
   472}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{725, 472},
  PlotRange->{{0, 725}, {0, 472}}]], "Output",
 CellChangeTimes->{
  3.656943153662986*^9, {3.6569433547230167`*^9, 3.6569433711975603`*^9}, 
   3.656943645527261*^9, {3.656943757645712*^9, 3.656943780395746*^9}, 
   3.656943814627302*^9, 3.6569468503045807`*^9, 3.656947332685226*^9, 
   3.656947944751279*^9, 3.656948008091515*^9, 3.656970589942217*^9, {
   3.6569709161813374`*^9, 3.6569709382381763`*^9}, 3.656972212799374*^9, 
   3.656972271718712*^9, {3.656972342989202*^9, 3.656972366929871*^9}, 
   3.6569727618955708`*^9, 3.657308753425448*^9, 3.657309673342658*^9, 
   3.657309705842679*^9, 3.6573105633436317`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotAMB", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"zAMB", "[", "p", "]"}], ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Altitude [m]\>\"", ",", "\"\<p [Pa]\>\""}], "}"}]}], ",", 
     
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Dashed"}], "}"}], "}"}]}], ",", 
     RowBox[{"ScalingFunctions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Identity", ",", "\"\<Reverse\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotMOIST", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"zMOIST", "[", "p", "]"}], ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Altitude [m]\>\"", ",", "\"\<p [Pa}\>\""}], "}"}]}], ",", 
     
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "DotDashed"}], "}"}], "}"}]}], ",", 
     RowBox[{"ScalingFunctions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Identity", ",", "\"\<Reverse\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotEYE", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"zEYE", "[", "p", "]"}], ",", "p"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Altitude [m]\>\"", ",", "\"\<p [Pa}\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
      RowBox[{"ScalingFunctions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Identity", ",", "\"\<Reverse\>\""}], "}"}]}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"plotAMB", ",", "plotMOIST", ",", "plotEYE", ",", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Red", ",", "Dashed"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", "DotDashed"}], "}"}], ",", "Black"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Ambient altitude\>\"", ",", "\"\<Moist altitude\>\"", ",", 
              "\"\<Eye altitude\>\""}], "}"}]}], "]"}]}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Altitude vs. p, for ambient, eyewall, eye\>\""}], ",", 
     RowBox[{"FormatType", "\[Rule]", "TraditionalForm"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], " ", "//", " ", 
   "Rasterize"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.656943147219015*^9, 3.6569431515056467`*^9}, {
  3.656943670747724*^9, 3.656943672802555*^9}, {3.656943754122547*^9, 
  3.656943778905002*^9}, {3.6569438121856403`*^9, 3.65694382957922*^9}, {
  3.656946841854865*^9, 3.6569468488077374`*^9}, {3.6569473136628437`*^9, 
  3.656947331578456*^9}, {3.656947908537328*^9, 3.656947931837616*^9}, {
  3.6569479809047737`*^9, 3.656947982069481*^9}, {3.656948016867564*^9, 
  3.6569481206114693`*^9}, {3.657310630806909*^9, 3.6573106343502617`*^9}, {
  3.657310817275688*^9, 3.657310823787221*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
/H7cNlN5SR7vNyewnq8lI56lqG9vlycyScjRV/L927YyvtEyy+HsdpUh9vM9
2X14PRa9mjdzJbCjzNXvFvv+7IuEe7c4D3reW29UszJSij0Fm4oLi8pNyG7o
d/v27Zs2bZpMFkHI5ldeofTHH+ncubShoeclASAQrF7Nh6Oyf3V1HSbb//nM
75Nm3RJDM6PcZipMYrFca6sU+KTDUS6mqqlsuWcHtaiR52paSXvm2qqLk9v3
TycIhZW8C83aJKj1vhtymHJS2vdwE1ff2Te7xQ0dzm7Peg43o+6d/OKyLNAT
yzyxXJ6VyJeylScRX0JWQO42R3YHnD179owbd6pMFiOT6d5X6Pgl1y68kH+f
BoDAV1REn3iC/7NYOky2//OZ3yfNuiWGZlZZdXaiu7taxHraKSWWyizXXvEU
73632Dgpr31fN49XEp+UU1xmslhqq6tNYqc6i2eub1w6GiuLikoaxVFktWU5
8T7Z7ShL9O13H16PT3Z797uzK139bkdeEhH73WJJy7NqLRaTyWIqzyHuIwKB
B9kdiCoqKkaMGCmXDw0P/+GTe//Lvz1feSVtaZG6LgAILq5ubF52gmfEmriD
Oqm4xJXdlI8cY2GeU1JdWZLGHyayABb7vAklFksWD8qM8lpTeZGaH3zOqbTV
lgg8z7P0lbXeo7xtvCPP2hZW1laX5KSxx2le2V3LN0eSsooqTTYxu9V1XuvZ
796cuCJLew/dlCYOkCsuryzOEnvbifwoeWWO4C64ukzNO/rLywIyupHdgerH
H38cMuQEufykGTPK25JX8fi++eaejl0BABwNMbvjE/iwb08Xlu82F/iBb9cI
cEtxVrJnr3hSUTWfZavMSYhPYpnoMOlTlse7d02n5bFALc92DyePF7J9MrO8
MKN9/7qrcXv/PduzNz0pu7w8JykhKed7r/WYXJtzH++uTI5PyBLzmG89Md61
uz4p0dXv5rP1OSntQ9+LawPyYDdFdgey7du3x8QMOvnksVVVVfS+++jFF9OD
B6UuCgCCiEXvis2EtOL2ecUprpPCEo+ws9nR7bnT4r7uTmPVut641z7z9rFq
bEI8pbvX6xFbu49392arAQLZHdC2bt0aFRU1YcLEZbfs+aVMvNer0yl1UQAQ
LCz6RPfIscO5J0YqObybuvNCfCc26eZZm3jovFe3VRL3z8fz9djKxIX4WDW9
uEO98WjWw5fip4apG3tuGDCQ3YEuLy8vLCxcJjtz7Ni9NcaD9PLL6T/+IXVR
ABAUbJUZycnJKVnV3t1oR3VWCpuZXdvdldRqi5OT1N2fNt1YWd2rFHXUFrWv
x2aq5KebUVpdlJGsLrIdzXr4UoXq5IziQN0/3hVkdxB47733ZDJ5dPTMn77/
nc6Zw0ee44LnAADBC9kdHF5//XVCyJw5cw7uqbOedQG/4HlurtRFAQBAv0B2
Bw3X3UJHj15w0XmWpoln0agounWr1EUBAEDfQ3YHk6efflocQ3LV3AvN9vjZ
9Pvvpa4IAAD6nuAhdSHQNx577DExvq9bfGWL+2It9fUS1wQAAH0KqR18kpJc
l+y9+ZZbnDQtjQ4fTn/6SeqiAACgzyC7g9Jf//pXFt5z597eVlJCBw+mo0fz
24YCAEBQQHYHpba2trvuuovF9z333PNt+nc0JoaOH09//VXqugAAoA8gu4NV
a2vrrbfeyuJbJnvg79ftppGR9PTTcbsxAIAggOwOYk6n8/rrbxDj+5Ef/lFE
N2yQuiIAAOgDyO7g1tLScvXV/ILEq1atcs/6/nt64ICkRQEAwHFBdge95ubm
K6+8ksX3TTc9+Y/VFjpkCL3gAmoJpjvqAACEFmR3KLDb7YsWLRJPHFO9cG0x
v9n3nDnUapW6LgAIcg5LY2Njtz0F8cle9SNsti7vKspXb+n2fqNdLeVgsxye
h5auanOts/NcXmz3mxpoyO4Qwd7D8+ZdIcb3U/9M/JzH92WXYegaAHTLVrac
kES1vsNMRzm/fkRSXllGIklw3xG7q8eWrERCElx3+mZrSSu3dWjpqC1J8jxJ
4oWiapvPemzlWZ5bhJuyhHjeKq3DHT8dtUWCZwUJQjJvkpRnKetiqfbV1ham
iM2TqqmtKG25e+HlvBC1nt+SzFZdtLy9KP5UllhMY05Komc2Scnr1c3H+xuy
O3Sw+J47d6H47lu98ZpPeXw/+aTURQGA33IUJruS7jBTEY8/dUljWUYCiW/P
686PxewmiYWVjY3VxTzul2dbDj9by1eckFxS3Wip1SfHu7fivR7xLuEJPIUt
JSxbhYzCSlOHPnIZvyW3UGKyOSy1OSn8e4CQU9nlUu2rLU6JZ98i9NWNjuoc
3j6j2NRYmycuK2Z3Na9qubrcZKkuyeJFJWSwuSV8Q/EZxZUWi6lQzV9VVvf3
Nx0wyO6Q0h7f8fFPU62W2u1SVwQAHTU1UZOpw7/W1oGY3xUxCklKYVltdXVl
ZXVtbZmYXcnVXee192NLRjwLU3fsN5aksSAssbifNfE+Nckoc2exzVRWWFjS
6Ogmu2163i8u841L3pgk5Ogr+f5tW5nYxtLlUt4lJWTwXrNFr+bNXKt0lLn6
3WJPn+R4blXOg5731hvVLMVTit1bdZiKC4vKTchuGGgsvhMSFrC36NNPP82j
u7GRKpW0uVnqugBAtHo13yfm/a+ubiDmd602JZ74WJ5VTnuR3Szy0vSedC53
R6rr2Tp9hu9KyfL2Z7vObnGfdgcOU07Kcu9VsDZdLnU4uxNIgngI4HAzXpw+
0b0sC/TE9u8I5VmJfClbeVKnWoUs6XebI7tDEIvv+fPns3fg8OFr3rxlC//j
vfZa6vCbQRgAoayoiD7xRId/rtFc/T2/G+VZLB/ji0zs88FRnMa7usViivKD
yCTNFajej8t5UKob3UHpzjhTcYp3v7uxku+yTsop5+O/LBY934Tr2cPrccV9
CT80XpbYVb/b0VhZVFTSKI4iqy3LiffJbq+lPNlty/KU5JPd3v3u7ErXJ6Ej
L4m4Dtzz/v3yrFqLxWSymMpzxC8J0p+ng+wOTYcOHbrsMh7fMlnKZ0vSeXzf
cAN1OqWuCwD8jKkonrj2flcK4ig1V7aJOUsSU3LKygrFQWFkuTpPX5LHe8LJ
RdR9vJuoC8sq9TmJ4tFomztGWbI3ZogHqNmT7mfF1brWmZCSXVZeouYrEsod
tLaER2pSVlFlxz3VYriT5RmFlbXVJTlp7HGaV3Z7L+XaaF1tCas/PilLX1m7
n3exxS8GlO9A9/TQTWniUfji8sriLLG3nch3AlTm8NedklNSXV0mVrW8TPro
RnaHLhbfl146j70Rn3xyNX3gAR7fN92E+AaAjmzZvFucUVas9j5IXZ6dlJis
TnPFdkJSYVmJ2jUWO14oquRjxVhgJqa4x2cnJmWJA8lpeU5SQlIOX4WtOivJ
PXh7eUqOybPO5SlZatc62SaLa9l6sj37xZOyy30qKy/MaB//LaTlNR7uUHdY
yrXR77Pdw9LjhWxTZU5CfJK7K++oTI5PyBJfl8OkT0l0vSKBV+ce9O7Q56S4
V8eSvVb6g90U2R3aWHwvXMiHrj300OM5V7xBTz4Z9ysBAB+m4jR3csWnmXq7
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
   "], {{0, 0}, {660, 468}}, {0, 
   255},
   ColorFunction->RGBColor],
  ImageSize->{660, 468},
  PlotRange->{{0, 660}, {0, 468}}]], "Output",
 CellChangeTimes->{{3.656948095516128*^9, 3.656948123265606*^9}, 
   3.656970590098714*^9, 3.656972212960951*^9, 3.6569722718831797`*^9, {
   3.6569723431603203`*^9, 3.656972367151307*^9}, 3.656972762112981*^9, 
   3.657308764527063*^9, {3.657310621431961*^9, 3.657310635651352*^9}, 
   3.6573108242968283`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotAMB", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rhAMB", "[", "p", "]"}], ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<relative humidity\>\"", ",", "\"\<p [Pa]\>\""}], "}"}]}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Dashed"}], "}"}], "}"}]}], ",", 
     RowBox[{"ScalingFunctions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Identity", ",", "\"\<Reverse\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotMOIST", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rhMOIST", "[", "p", "]"}], ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<relative humidity\>\"", ",", "\"\<p [Pa]\>\""}], "}"}]}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "DotDashed"}], "}"}], "}"}]}], ",", 
     RowBox[{"ScalingFunctions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Identity", ",", "\"\<Reverse\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotEYE", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rhEYE", "[", "p", "]"}], ",", "p"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<relative humidity\>\"", ",", "\"\<p [Pa]\>\""}], "}"}]}],
       ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
      RowBox[{"ScalingFunctions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Identity", ",", "\"\<Reverse\>\""}], "}"}]}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"plotAMB", ",", "plotMOIST", ",", "plotEYE", ",", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Red", ",", "Dashed"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", "DotDashed"}], "}"}], ",", "Black"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Ambient relative humidity\>\"", ",", 
              "\"\<moist relative humidity\>\"", ",", 
              "\"\<eye relative humidity\>\""}], "}"}]}], "]"}]}]}], "]"}]}], 
      "}"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<relative humidity vs. p, for ambient, eyewall, eye\>\""}], ",", 
     RowBox[{"FormatType", "\[Rule]", "TraditionalForm"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], " ", "//", " ", 
   "Rasterize"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.656943147219015*^9, 3.6569431515056467`*^9}, {
  3.656943670747724*^9, 3.656943672802555*^9}, {3.656943754122547*^9, 
  3.656943778905002*^9}, {3.6569438121856403`*^9, 3.65694382957922*^9}, {
  3.656946841854865*^9, 3.6569468488077374`*^9}, {3.6569473136628437`*^9, 
  3.656947331578456*^9}, {3.656947908537328*^9, 3.656947931837616*^9}, {
  3.6569479809047737`*^9, 3.656947982069481*^9}, {3.656948016867564*^9, 
  3.656948215338213*^9}, {3.6573108380855494`*^9, 3.657310843419066*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt3Qt8K1dh53HlQRIS3gnvAmEhPBu3PMqrKay3gXYLxXTZli7rlkfIsARW
MSmo6w+oCV6zYExptBRsErEuokawxkusErtZr4kxIrFLRJAIEqiKY0QsYoGd
SFEi3UjXZ+fMjGRJlubavvKMHr/v535gLB2dORo7On+dOXPmue+9+j+89yyH
w7F2hsOxeqbDIbcFAAAAAAAAhFAUxe4mAACALkGuAAAArUKuAAAArUKuAAAA
rUKuAAAAraKU2d0QAADQ8UgUAACgVcgVAACgVcgVAACgVcgVAACgVcgVAACg
VcgVAACgVcgVAACgVcgVAACgVcgVAACgVTohV5RyuVyp0ROFXK7Q8AnblWTT
Gj7TiW1uW6VmR1M+kbO8OQfS9A+gff8ymmp6/AH0sHbPFZnouLHQ+Hg4o/6c
8ymKL5oTmfiE03jCF0za3coamWjAaNloYFs+UG6zyMx7jEZPLK/b3cwa9W3O
hZ2KMyx75pzfqfij7dhHRwPGn8bobFT9MRdVD7NfbWh8ccJ4L05PeLuter1M
YNz4A5iNaoe50uZ5j/64a2KxDY91IT6rOP16w6LaX7PYd/wBQNfeuaIUHFfc
AdkFr8+PKu559et0bns7VxJxv0uZWJNFtkPlHrBNpNQeIrCutrQw71abLBuv
tzm5qL6FgGxppv3bXNjezmhdsvwVeIJbdrdwn61ltUOLq00urY8qynyyoH7f
386o/xt1Kc41Lc/FZ91Ob9juhu7ZCnoUV0Ae5eS82vj1kjDaLFK+UU9UjhUV
Am5ldL69crKQ+cev5x+hN1n9a95//AFA0965IuNzutYy+uaay+nLVJ4plcpf
RDNetU9sn4+1XNileLVuTY0PE66qfi2qfvOf0H/cUjuYUPvkiuZt1h7xVr6r
to9c2OfUg6UQWpMzlSecikv/Sc0VSjvlirDPNaEnHrHtrf0DyKVCE6Mu9+iE
3+t2+dqozbpcfC9XGI80O/4Ael6b5wq/q5wrciGX01/58EotTyiKyz+/6Jdn
FiZStrVwn1xY/ZJs9NFhb3UfHZ91qUfb4/NPuBXFPbttVwv3a95mjRzN8Mfb
K1nkomonHdK3w153db8WV7/zq38c8oSD6+gncIrF025jvajPXc4VamB27+UK
7Su/L5TMZZJ+lxri2u60Qml9X65ofvwB9Lj2zhU5vzEzQRS0b0yVD6/CekBR
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
VwAADiXqdyoTYW1zS00GoXTYpXj14YZMaMLl1Z8SYZ9rYk1/eNvbqFh9gZxR
v1LLujeGViBXwGKsXwF0uvisS+3uPT7/hFtR3LPbubDbWQ4MYW8lV0R97nJs
yPicbjVX1BWrL1CVKyx9P23iE5+QH46dj1wBizG/Auh0UZ9rfD6eWo+Go/Hk
VqaUCzsVV1SbjBn3uxRfJVc4nb6o3CpFXYoznK4vVl+gl3PF174mPxn//M/t
bkcLkCtgMXIF0Oly8VlFGY0XRGFd3XCvlzLyxEgwJQopr6L4ohm9WCbsUxRv
qiBSQa/i9GdEfbF9BQw9lyt+8hNxwQXiBS+Q47mdj1wBizFvE+h8pXDAo09+
8AWTQk68DLq1H93eYNVFpIWg13h4OZlrVKy+gK63coWaJV70IpkrOnaBzTrk
CgBAW+mtXHHddXIMd3ra7na0DLkCFmPeJgBzvZUrikUxO2t3I1qJXAGLMb8C
gLleyRV33il+/Wu7G9F65ApYjFwBwFxP5Ir77hNPf7p4xSvsbkfrkStgMXIF
cEwSCx5FGVmItd2dRA6r+3NFqSTe8AZx5plicdHuprQeuQIWI1cAx6O4ZNyS
fbDT733a/bniox+Vn4Ojo3a341iQK2AxcgXqFLPZnZ1sk7tqFdXndrK13WQx
ny+e6iZcxbz2usbF8nKH+xcKkPUeuME7h73XelHb6+FeU/t6dafN9pmvNL0Y
UxwOZW7j6DtqA12eK266SX4IvuUtYnfX7qYcC3IFLMb6Fb0jH5tyOAZCWZPt
9PRwv8PQP7W6Wf3sTmRmwFF5cjiUlj3n5sKI9vPQRpMdCe10QF/ldUPTm/J1
2ck+/ebjO9NDlT0OjowMGt/u0yv6V/3Pzk5UVxWZUh8eqLpF+c7MyF6jRuYi
Jm9Z7rTfMTCllsmXRxLUvcnde7TboJebJBpuV1cVmxkxXt430Cdfnq16SXpK
kW+3b2xVe3laFu2f7OhzIV2eK37xC7XrFTsd/SsyQ64AcEyykUm1h9N7xobb
KyNqh9g3tbqRzW7MaAFjZiNffnZzWP15wBPbyeZ3YrKgMqcGBPmSgbHQxk7T
Hcnu2DE4trCpVroqtx2yw8169jprx8hColjMx5Y88tmBSdlJh+T25Eri/qqq
hNgY1jpzZSah/7zqURvZpxbLZtMLHhkwpmpvc56tebnMFX2eUHFjRlYyuZLe
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
E6p5sBgbUr8cD81FJgcc/ZN6l9loOzs14HD09zt0A2OxfE3J4ubqUPlJR5+y
tJGvqycfm1JfFpI/pKeUPllqrOb2T1UFpMSCp69cX//Q9KbscbOTffodyXem
93Y2ODIyaHy7T6/oX/U/OztRXVVkSr7vqvuW78yMDJRf7hiZi9Qfp5qWZCf7
HQNTapl8eSRB3ZvcvUe7N3q5SaLhdnVVsZmR8vEZ6JMvz1a9pO6YpGXR/sn2
ORfSebniLW+RtxjbaKNsZiNyBSxGrugZxYVhmSGqP2rTS7IH86zuRNTus6+S
JfZva7nCMbCQ2NnZWJFRZHA6u/fspqy4f3h1Yye7GRruM/ZSXU82MqmW0PrS
VbVTViYXEumaL/57BdRt2R07BscWNrPZjVW57ZAdbtaz11k7RhYSxWI+tuTR
co7cSzYktydXEvdXVSXExrDWmSszCf3nVY+6/z61WDabXvDIdzVVe+/zbM3L
Za7o84SKGzOyksmV9M7m3IhMNXqu8FRlif3blaqyEdnmoamVnWx6yaPUv7z2
mOQT03oAmdlol5utd1iuWF2VH2pXXWV3O9oFuQIWI1ccr5tvlp9v1f8yGSse
b0Tr5tQeObK5sZFIbGxuRrR+dXijcZao3pbfrJUZI5LsrI6p3eVq1ng2rXX0
kxGjJ86nIwsLqzvFJrkiH5Jf9vfNHqjuzUOy6x9KlJ/aCK0srSaKtblCmVxK
a6ckVsf69FERo4Z8TVV6U4flAMOINjd5R46DjKwYVRfTKwtLsfQpckW/J6SF
Flm59qpIf00wMN6iSa7Q3tFYefwhNliXK2qPydKI+o6G1Cb3ja2I9tBhueLy
y8V553ESpIJcAYuxfsXxuvZamduq/6VSVjze2OZI5exC5UTCVEwcIFdUdaAi
HzO6S/3ZVGiyvlLHYOXZxrkiVD/GrxUYCBmnVwbr6xuY3KnquBMLnv7aZ7NV
u6gKBvlptSZlIZ9eMpJPXjvvU0uZiuxryV6umNLGK2oezIcGqs6DDBkTIeT2
yEq6sl2dK+QpISPYyNeXT3/U5gr9mOQjatGhhc3NJbWlg7H2GLHopFyxvCz/
K7jmGrvb0UbIFUBXOXlSFIs1/6x5vImYnGzQt5RWixVXxtTerH9F6820js/4
Ql29HdNOA+wYX9uN/je9MlI9XrGTkOcIhmZiWW0uZUjuQn92rx49iqzKqRiy
32wyXuGY00b+tRf2L23s7KTT2WxCNnNwOl/phYs7oaWlSDovp0GmE9Nq9ytb
qO9iIFI9XpFe6pOnUHb0YQe1tzY2Bqc2s1m17nRsxmFMddjXEuPLrjzFo8wk
6nLF3vyK/sqkiE15UIzpK3KCRNPxCi051IxXVB2TzYUh40Bl5V5GltriCvBO
yhV33y1nbHLlfBVyBSzG+hW9RetqtTMaCXmaf2hODyJaV+4YGJmJRBa0KYSO
Qc9caHVODhwMLwljfoXDsxBJhGYGtPkKeWM0Q+3Td2Rn7VDUJ41ntWr1OvtH
piOxVY+sSFG/fW+u6jMNlhINzj5oz0yOff2fZ/rkdM2p2MbGytSwNr0iXXWi
QWv5wFgosZEIaS0cnMkXd1am5FCEZymSutNTFWyUhPYON+Xkkn41YiRm5KtH
ZlY3NiJaqwYjNbFiryVLkdjKtNy7J5LNRow6tRJ7uUI/LJNL6qHSp2X2qdsr
03JbyxXGq/QpE+rhTST0c081uaLqmCTlaRpF/6UUZcQYmDqN609appNyBfYh
V8BizK/oMdqpgf7JyIqnelJEbHpoYNgzpkeK/qGFyKre/cmLOxJZ47KIEeM6
ioGhKe2CDxGbGeofmtFOOGxMDRkXWQyOzKTLdQ6OTHn0OtVdrmyq9UyXT3EM
TcdqmpWYG+jrHxzUAsp0LBsz4o0cjFjQp1rsnQfJb6yMDJafHhhe3SzmEzPl
MzzKbT+a6e8bUrPAtNI3OFm+/iUfGerrm4qoLy+GKpdm9A+vbDYeORkaMU6Y
DI4tyLM3Ca1OY35FYrivf0oeuuyMMqCMGReKDAxPh1an9RM0aijaLJZfpR3j
jZVJ4yl5OYhjUssV08rAVCS1d0xu+LqiJpPySaJsZKrPoUTaIFh0TK74yEdE
pP4CH5ArYDFyRa9Jr4wZ3Vjf2IGHqWSfrg/U155oKZ7qxMs++qTHo6z6VD0x
slHFscnK1MriYVemqN6NNtMjog8ZHLmWSqtqWyJ/KMbK50HUw6c9ffRjYpHO
yBXf+pb8LPvv/93udrQdcgUsxrzNnqMtu+SouvTyALIeh2Nktb5PD8mEMta0
p29Im12wv6ojt6GqYjnOsCrnbXr0jaPRLv3oO/LLa6pq2JJsqM9hzNtUj9+w
+o6Ofkws0gG5YndXXHqpuOgicbCV2XoKuQLAcYvNeYaGPbFDfADnF8aG5xL1
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
1+Q8xvEKAAAAAAAAAAD2+f8961Us
   "], {{0, 0}, {712, 457}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{712, 457},
  PlotRange->{{0, 712}, {0, 457}}]], "Output",
 CellChangeTimes->{{3.656948199254174*^9, 3.6569482185278397`*^9}, 
   3.6569705902420673`*^9, 3.656972213220707*^9, 3.656972272116149*^9, {
   3.656972343418789*^9, 3.656972367296689*^9}, 3.6569727622589073`*^9, 
   3.657308766341011*^9, 3.657310745006523*^9, 3.6573108439526*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotAMB", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rhAMB", "[", "p", "]"}], ",", 
       RowBox[{"zAMB", "[", "p", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<relative humidity\>\"", ",", "\"\<z [m]\>\""}], "}"}]}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Dashed"}], "}"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotMOIST", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rhMOIST", "[", "p", "]"}], ",", 
       RowBox[{"zMOIST", "[", "p", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<relative humidity\>\"", ",", "\"\<z [m]\>\""}], "}"}]}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "DotDashed"}], "}"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotEYE", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rhEYE", "[", "p", "]"}], ",", " ", 
        RowBox[{"zEYE", "[", "p", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<relative humidity\>\"", ",", "\"\<z [m]\>\""}], "}"}]}], 
      ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"plotAMB", ",", "plotMOIST", ",", "plotEYE", ",", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Red", ",", "Dashed"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Blue", ",", "DotDashed"}], "}"}], ",", "Black"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Ambient relative humidity\>\"", ",", 
             "\"\<moist relative humidity\>\"", ",", 
             "\"\<eye relative humidity\>\""}], "}"}]}], "]"}]}]}], "]"}]}], 
     "}"}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<relative humidity vs. Altitude, for ambient, eyewall, eye\>\""}], 
    ",", 
    RowBox[{"FormatType", "\[Rule]", "TraditionalForm"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], " ", "//", " ", 
  "Rasterize"}]}], "Input",
 CellChangeTimes->{{3.656948408577168*^9, 3.6569485163494883`*^9}, {
  3.657310849955493*^9, 3.657310857026704*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
V8BmzNsEYK1DcoXQb1rafcgVsBnzKwBYc3yuuP9++R7UeEVXIlfAZuQKANYc
nyve+U71Nffd77a6Ha1BroDNyBUArDk7V8Tj4pxzxGtf2+p2tAy5AjYjVwCw
5uxc8ed/Ls4+W/zHf7S6HS1DroDNyBUArDk4V3z/++oL7u1vb3U7WolcAZtx
/QoA1hycK5JJ8cY3du2MTQO5AgDQVhycK0CugO24fgUAa47MFadPi/e+V8Ri
rW5H65ErYDPmVwCw5shcMT2tvto+9KFWt6P1yBWwGbkCgDXn5YpSSTz3ueLi
i0Uu1+qmtB65AjZj3iYAa87LFV/4gvq99KlPtbodbYFcAQBoKw7LFYWCePrT
xSWXiJMnW92UtkCugM2YtwnAmlbW6oYczgMPqLuBTE21uh3tglwBmzG/AoA1
xyQK1EOugM3IFQCsOSlXfO1r4rbbWt2I9kKugM3IFQCsOSZXbG+Lxz9evPjF
rW5HeyFXwGbkCgDWHJMrhobU19k3v9nqdrQXcgVsRq4AYM0ZuWJzU/zSL4n/
8T9a3Y62Q66Azbh+RZfLry0MaZp3OlxsdUucKDHn1bThudXtVjfkeDkjVwwO
qt9IS0utbkfbIVcAsFN+dbq/t0caXe7wzvEYFBdGB9S+6xmI5lvdluPkjFzx
j/8orrii1Y1oR+QK2IzrV3SdYn57ezubrxmfWBjq7emfzO4qmM3KkvlDDmTU
q7YiL2vKZvesLuYPV3tjLdmpXW21sdfUvl5udL9t5itNL65qPT3aibWjb6jt
OSNXYB/kCtiM+RVdJTHn1QcnlL7BqY1yr7k6JfvG3rnKY7E9PdxfLtgzfCK6
q5786mRPT384a1FtdqK3ZzS8LauaGuwrPzkwPDxg/rpPLxk/9f9pZry6quik
XN1fNXbSUEuyE30yH8ky+fJIgtya2rxXtaTSJFF3ubqq1elh8+W9ajjHq9ZW
XpKe1NTb7R1d1l+eVkX7Jjp4uKfdc8V994lAoNWNaF/kCtiMXNE9sqrf7BkY
ndvIZteWJ42DH/ozG0Yn2j9h9trLXtkV904sJbLZ9JxXdeuTiZqB/mx0Qnal
Rhe8T7VZ705n3TM8lygW86sLXmMzqpMOq2W5iQeqqhJibUhviTadOEJLjFzR
6w0X16ZVJRNL6e2NE8Mq1Ri5wluVJfYuV6rKRlWbByeXtrPpBa+2++XZ5T5V
+VwirbaaT0wZAWR6rWOnqLR1rkil1C3Gzj1X3H13q5vSpsgVsBnzNo/VTTfd
9E7byY3WbUxY9dGDifLDtfDSwnKiqLp42Z/2Dg/JH/hD+mj+thp9GC7Pfyum
l+YWVtP79ub7VFuTK7SJhbR+SGJ5tFf+tM9WasjXVLW9PCqXh9QAw3C68ZYY
uaLPG9ZDi6pcf1W0ryYYGEWtcoX+jkbL4w+rA7tyRT6sKizPqFgYlu9oUDa5
d7QdZwwWcrlCqepxSa1oqIBo51yxsSF+7dfEOeeIr3+91U1pX+QKoJN84AMf
6LGd3GjdxkQnBnYX7Z/YFsUT8hd5/1Q2u9xrdKD51cE9dWqTNQcg9C643+i4
96l2p+NOzHn7ap/NVuWBqmCQn5I1aXP59IIsNRHNHrolO7liUh+vqFmZD/dX
HQcZNCdCqOXhpXRluTpXRCf6y8FGvb58+KM2VxiZJB+VRQfnNjYWZEsHVttr
xCIz63UZ9/UYX0yqx7GgeZ+PkeCWXiA4ZhaYiW3VK2Bq01xx773iOc9RoWJ6
utVNaWvkCtiMeZvH6vTp00XbyY3WbYzeXfYtrG1vp9PZbGJU9o4DU/ntJfm/
Q3Mb8of9tOrWp4v6r/6egcmNbFYWTK+qYwrecM0ESL0L7jmhj/zXr7bSCxe3
wwsL0XReTYNMJ6Zk99vr3VbzIlQyiVaPV6QXes3TUvQGDM6Jw7dkw3i0MaQf
Q9mVK3bmV/RVJkWoQz993rC+rCZI7DteoSeHmvGKor5GH6/YmJPvp29ZP66j
BlkW2ugf0vr8iOYJ5uRSJuzSXJFcyqtpwWRBiMKsR/PMJjdDXs0dVI/XZ2WS
SJZ2F6hU1aa54uMfV4c/ZmZa3Y52R66AzZhf0T2KG3O9al7l5Ora2tKkmsgw
upxeVWME5siDfhiiV/aNiWk1qWB4enltLepVoxED0drzKozeXM1BmBi99ubp
vdVWHWhIqLr6R8OJtUT4hF7ZdL64vTSphiK8C9HUHV6ja9bziZbQf/JvzA2p
ldsNtGQhuro0pbbujWazUbNOvcROrpjUZ4BOLISXTxgzSnrl8tKUWtZzhfkq
Y8pE//B0IhHV53TU5IqNZWP2xUIiva4O02gn9CYXVcTYc05NC8UCLm08oi9u
ygARTkfcms8YhciEx92+SMTvHl8xVmz56hWoVNWmuUK6665Wt8AByBWwGbmi
q2RX5zTzzI1e71xCrpjSevsrEwOKieG+Xq86OlAMV06I6Bta2th9dYZ84kR/
b9/AgDq+oU2t7qlWVE9gyK8tDQ+Un+4fWt4o5hPT5fNHtFvvnO7rHZRZQLZk
YCJc3kB0sLd3Mrp9YEuMXDE4bB4wGRidy6rm6XWa8ysSQ719kyqOZKe1fm3U
PFGkf2gqvDxlHKCRoWijWH6VngzWlibMp/Sre0zouWJK65+MpqbKh30GP3et
JpOJOUlDzfbs7dGibRMs4jNumQe8/sC4R9M8M1u5iMdVjg0Rn4wNMb+nnCsy
fpdH5opdBSpVabXsfy81NjbEy18u/uM/WtwM5yBXwGbkChyP6omRdRRXJypT
K4uNXpmiejP6TI+oMWRw5FoqraptiXpQXC0fBxFF42ljImjbXwkr5nePzcZT
yVgkFl/fzJRyEZfmjulTMuMBt+aXucLl8sfU41LMrbki6d0FKlW1PktUpFLm
RM0bb2x1UxyDXAGbkStwPLLenp7h/a/hmdfHGZbVvE2vsXDEzahTP3qP/PKa
quq2JBvu7THnbY729AzJd6TPuLB4a20iF5/RtJF4QRSScsGTLGXUgZFQShRS
Pk3zxzKZiF/TfKmCSIV8miuQEbsLVKpql1xx333qlFIZKv71X1vdFCchV8Bm
5Aocj/zc6NCJhFV/v7G6ul0UxY2loUFv4qi//s/w5QdXVdyYHDLeyM47yqcT
iX2vxNk+SpGg1zhy4Q+tCzU/M+TRH3p8IX1YohDymSsW13P1CpjaIlek0+I3
fkOcfba47rpWN8VhyBWwGdevAGCtLXLFL34hfud3xNRUq9vhPOQKAEBbaXGu
kIkir48inTrVymY4FrkCNuP6FQCstTJXyG+o//7fxatfTag4MnIFbMb8CgDW
WpYrcjl1Sqn8hvrUp1rTgI5AroDNyBUArLUmVzz8sHjVq9TX08c/3oKtdxBy
BWzGvE0A1lqTK17/ehUqPvzhFmy6s5ArAABtpTW5YmVFfPSjLdhuxyFXwGbM
2wRgzdZcUSqJ//f/7NtcFyBXwGbMrwBgzb5ccfq0eMtb1FfSN79p0xa7ALkC
NiNXALBmX674m79R30dve5sKGGgScgVsRq4Ajklizqtpw3Or7X4nkQPZlCve
+171ZXTllVyqornIFbAZuQI4HsUF85bsA21/79MD2HGH9O98R30T/emfimL7
33jFYcgVsBm5ArsUs9nt7ew+X+5F+dx2trabLObzB/YFxbz+uvrF8mqDe+9Q
puo9dIO3G73XelHfamOvqX293Oh+28xXml5c1Xp6tBNrR99QG7BpvOK660Sh
cHAxNIhcAZtx/YrukV+d7OnpD2ctltNTQ309pr7J5Y3qZ7ej0/09lSeHwmnV
c27MDeuPB9f22ZDQDwf0Vl43OLWhXped6DVuPr49NVjZ4sDw8ID56z69ZPzU
/6eZ8eqqopNydX/VLcq3p4d3GjV8ImrxltVG+3r6J2WZfHkkQW5Nbd6r3wa9
3CRRd7m6qtXpYfPlvf296uXZqpekJzX1dntHl/WXp1XRvglHHws53lwxNSVu
v/0Y6+965AoAxyQbnZA9nNEz1l1eGpYdYu/k8lo2uzatB4zptXz52Y0h+bjf
u7qdzW+vqoLaCRkQ1Ev6R8Nr2/tuSHXHPQOjcxuy0mW13KM63Kx3p7PuGZ5L
FIv51QWverZ/QnXSYbU8sZR4oKoqIdaG9M5cm04Yj5e9spG9slg2m57zqoAx
WXub82zNy1Wu6PWGi2vTqpKJpfT2xolh9TaNXOGtyhJ7lytVZaOqzYOTS9vZ
9IJX2/3y7HKfqnwukdbvqJ6YMgLI9JqDh/ePMVdcf7269fnLX35c9YNcAdtx
/YpjddNN4p3vVP9lMjUPK//tWt+UYvs5KFeoXrv8K9scwB+aWys/m11dXkps
F0U+vbp8Qv0i75vM6j/S+yZ2jxJUVx5WXf9govzUWnhpYTlRrM0V2sRCWj8k
sTyqqstWasjXVLW9PKoGStQAw7D+B7utxkGGl8oNTi/NLaymD8gVfd6wHlpU
5fqron01wcAoapUr9Hc0Wg5SqwO7ckU+rCosz6hYkLmrb1A2uXd0STjWceWK
aFScd5647DJx333HUj905ArYjPkVx+qqq9Tulf+lUjUPK//tWt+UYvvZkyX6
jb7VXJ+OlrtIw7b6dT+6XHlVfm1pqHLMoU+bS2QrPXW9DZmVRyfKRxwq+ie2
qzruxJy3r/bZbFVTq9qcn5I1aXP59IIayojKBq0O7q66R5uM7mnJTq6Y1Mcr
albmw/1Vx0EGzYkQanl4KV1Zrs4V0Yn+crBRry8f/qjNFcZuzEdl0cG5jY0F
2dKBVceOWBxXrhgeVn+1d9xxLJWjjFwBm5ErjtWpU2p6e2VWY+Vh5b/jKLYf
vWfsOaEmTYiiPlBgDM4XV1WPuZzdGK4er9D7x8ETicp4xYQ65jA4vRRNZ7Mb
a2tpNXszP6lyRd3xip4TeuV6L9y3sLa9nZavS4zKSgam8pVeuLgdXliIpvNq
GmQ6MSW7317vtpoXoZJJtHq8Ir3Qqw6hbBthRvbW5sLA5EY2K+tOr073mFMd
6r9lIdShHG06sStX7Myv6Ku8fbUrynlJTZDYd7xCTw414xVFfY0+XrExN6jv
WHVcRw2yLDh1WPC4csVrXiOe9KRjqRlVyBWwGfM2u4fRyfb0DC1Fo+Z0x/7h
pWh4Uh1ZULMl9QzQMzy9vJZYHlWLaoZkNurVO0f1Y79nYGJ1I21MhBiYTuQ3
ljWVNSbDiY1inQ0NTk6MXnvztDpmMji5ura2NDmkT69IVx1oSKgJCv2j4cRa
InxiQK83X9xemlRDEd6FaOoOY+tG27SEvpmNuSG1clskpjWzwWtRr/7iaLbu
Wx5ciK4uTamte6PZ8jsySuzkikl9l0wshJdPGNMye+Xy0pRa1nOF+SpjykT/
8HQiEdXndNTkio1lY/bFQiK97i3PQpHZTUWM/skzOP+klY4rV3i94uqrj6Vm
VCFXADgm+cSJ/t7+oWHN6DRHTywvTZrLw9PGmEPW6Pr1Ix2DC2vGzMPpvt5B
2V8X0+HhAfPEDm30hOxKV6c086wIbSq7e0N9AwPq+IY2tZpdndPM1/V654yp
FjvHQfJrS5VqZeuWN4pyi+XzR7Rb7zS2np3Segcmygdc8tHB3t7JqHx5MVw5
NaNvaGlj93UijFwxOGweMBkYnctW3pE5vyIx1Ns3qeJIdlrr10bNE0X6h6bC
y1N95p6YlLGpsh+ktaUJ8yl1OkjPhJ4rprT+yWhqqnzYZ/Bz12oymZSPK2Wj
k709WtSZwaI19x1Dk5ArYDPmbeJAxX2vDaEfB9kzb/MQqidG1tvi6kRlauX+
Wz/EZvSZHlFjyODItVRaVdsS4xhS+TiIKBpPGxNBnX4lrFrHkivW18W2o8++
dQxyBWzG/ApY08f/e5br/9DOT6k5jMt1n7Ou1atet2+3ktfHGZaz1ls/xGbU
qR+9R355TVV1W5IN9/aY8zZHe3qG5DvSZ1xYvDUnOpZcMTAgHvMY8cgjza8Z
tcgVsBm5AtaKG0tDg97Evr+/txNrR+hD83OjQycSVv39xurqdvHArR/gDF9+
cFXFjckh443svKN8OpHY90qcjnQsueLZzxYvfWnzq8Ue5ArYjFwBwFrzc8X9
96vvnfe8p8nVoh5yBWxGrgBgrfm54vrr1ffOzEyTq0U95ArYjFwBwFrzc4Vx
S3Tr67ihScgVsBnXrwBgrfn3SY9GxWc+07TaYIlcAQBoK1y/wtHIFbAZ168A
YK3JuWJtTdx4o/rqgS3IFbAZ8ysAWGtyrvjkJ9WXzg9+0Mw6sT9yBWxGrgBg
rcm54sorxfnnc0Us25ArYDPmbQKw1uRc8cxnile8opkVwhK5AgDQVpqZK1Ip
NUL63vc2rUIchFwBmzFvE2gfiTmvpg3PrbbX7UWamStuuIErYtmMXAGbMb8C
aBvFBfM+7QNtdUPUZuaKRx4Rt98uMpmmVYiDkCtgM3IFDq+Y3d7e3vf0QP3J
Q508mM8f4t7nxbyqb5+C+WzdbRUPU7Eql1WNbfQG7EV9q429pvb1cqP73nK+
0vTiqtbTo51YO/qGmo3rVzgauQI2I1d0i3xU/hLu94ZrVhZXB+WP48ET0Yn+
nr4Jo8ust5yd7O/p6evrMfSPruZrShY3lgfLT/b0agtr+V315Fcn5cvC6kF6
UutVpUZr7q5eVUBJzHl7y/X1DU5tqB43O9Fr3JF8e2pnYwPDwwPmr/v0kvFT
/59mxqurik6q91113/Lt6eH+8st7hk9Ed++nmpZkJ/p6+idlmXx5JEFuTW3e
q98bvdwkUXe5uqrV6eHy/unvVS/PVr1k1z5Jq6J9E+1zLKRpuaJUUvca+973
mlMbDodcAZuRK7pGcW5IZYjqn8HpBdWDeZe3o7L77K1kib3Leq7o6Z9LbG+v
LakoMjCV3Xl2Q1XcN7S8tp3dCA/1mlupricbnZAl9L50WXbK2sRcIl3zw3+n
gFxW3XHPwOjcRja7tqyWe1SHm/XudNY9w3OJYjG/uuDVc47aSjaslieWEg9U
VSXE2pDemWvTCePxslduv1cWy2bTc171riZr732erXm5yhW93nBxbVpVMrGU
3t44MaxSjZErvFVZYu9ypapsVLV5cHJpO5te8Gq7X167T/KJKSOATK+1y83W
m5Yr7rxTfd2MjTWnNhwOuQI2I1ccr5tuEu98Z81/xpHl415fj97NyR45urG2
lkisbWxE9X51aK1+lqheVr+stWkzkmwvj8rucjlrPpvWO/qJqNkT59PRubnl
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
HQEAAAAAAAAAR/f/A+Y5l6k=
   "], {{0, 0}, {712, 457}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{712, 457},
  PlotRange->{{0, 712}, {0, 457}}]], "Output",
 CellChangeTimes->{
  3.656948457410219*^9, 3.656948518352079*^9, 3.6569705903844748`*^9, 
   3.656972213371377*^9, 3.656972272266635*^9, {3.656972343568183*^9, 
   3.656972367530727*^9}, 3.656972762547098*^9, 3.6573087680150433`*^9, 
   3.657310857545813*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotAMB", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tAMB", "[", "p", "]"}], ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Temperature [K]\>\"", ",", "\"\<p [Pa]\>\""}], "}"}]}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Dashed"}], "}"}], "}"}]}], ",", 
     RowBox[{"ScalingFunctions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Identity", ",", "\"\<Reverse\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotMOIST", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tMOIST", "[", "p", "]"}], ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Temperature [K]\>\"", ",", "\"\<p [Pa]\>\""}], "}"}]}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "DotDashed"}], "}"}], "}"}]}], ",", 
     RowBox[{"ScalingFunctions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Identity", ",", "\"\<Reverse\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotEYE", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"tEYE", "[", "p", "]"}], ",", "p"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Temperature [K]\>\"", ",", "\"\<p [Pa]\>\""}], "}"}]}], 
      ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
      RowBox[{"ScalingFunctions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Identity", ",", "\"\<Reverse\>\""}], "}"}]}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pp", " ", "=", " ", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"plotAMB", ",", "plotMOIST", ",", "plotEYE"}], "}"}], ",", " ", 
      RowBox[{"ScalingFunctions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Identity", ",", "\"\<Reverse\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"298", ",", "300"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "102000"}], ",", 
           RowBox[{"-", "100000"}]}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Axes", "\[Rule]", "None"}], ",", " ", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "100000"}], ",", "100000"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "101000"}], ",", "101000"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "102000"}], ",", "102000"}], "}"}]}], "}"}], ",", 
           "None"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"297", ",", "298", ",", "299", ",", "300"}], "}"}], ",", 
           "None"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", "180"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"plotAMB", ",", "plotMOIST", ",", "plotEYE", ",", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Red", ",", "Dashed"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"Blue", ",", "DotDashed"}], "}"}], ",", "Black"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Ambient temperature\>\"", ",", "\"\<moist temperature\>\"", 
             ",", "\"\<eye temperature\>\""}], "}"}]}], "]"}]}]}], "]"}]}], 
     "}"}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<temperature vs. p, for ambient, eyewall, eye\>\""}], ",", 
    RowBox[{"FormatType", "\[Rule]", "TraditionalForm"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "550"}], ",", " ", 
    RowBox[{"Epilog", "->", 
     RowBox[{"Inset", "[", 
      RowBox[{"pp", ",", 
       RowBox[{"{", 
        RowBox[{"250", ",", 
         RowBox[{"-", "80000"}]}], "}"}]}], "]"}]}]}], "]"}], " ", "//", " ", 
  "Rasterize"}]}], "Input",
 CellChangeTimes->{{3.656948254587702*^9, 3.656948305720462*^9}, {
  3.65731086189921*^9, 3.65731086981885*^9}, {3.657310945155809*^9, 
  3.657311056749516*^9}, {3.657311105154635*^9, 3.6573111412330236`*^9}, {
  3.6573111720414047`*^9, 3.657311267685541*^9}, {3.657311310262527*^9, 
  3.657311566593604*^9}, {3.657311667634301*^9, 3.657311970588443*^9}, {
  3.657312011589829*^9, 3.657312091386478*^9}, {3.657312126308741*^9, 
  3.6573122114807*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
bO/evccdd1x6evqXX35J9uyJSmiRFUfbSIL6+shRR5EJ468Yl5S047zzYh0O
AEieualIzouUVXqaYpgNVa6/86u6BpWrKpSJiysMbPGIYsMLiNClBySOmmvZ
MjZitqjIWxmHw3HxxRez+zjefjtacUVcHG0jCXr3Xbrb/Eh3CZ7uPc8/H+tw
AEDqmsrkvErHXtmbFLxMb+1Q8nxVi53+Xa3gFdUtYrFOjZKXV7GlbdU0L2lx
Di82ooCrfnTpAYmj5vrsM6JQ+Chz551s8nPFQLm6OvLnP5OOjkjHFlFxtI0k
6PTTSXr6LXSvqJkwoWXjxl9++WXr1q1tbW3bt29vb2/fsWPHzp07Ozs7d+3a
tXv3bpPJtGfPHrPZbLFY9u3b193dvX//frvd3tPTQxPgvlGn5gGAxGFQy2Rq
PXtlNdAsRWfU06xFPBVi1hXJVXqxmF4tL6oXF3epePnIYsMLuJ/hgi49IHHR
XNu2+VVMqVTSg9GyZcv6B2bDeOstdv6F5jfxLC62kWS99lpbSnIqFw45OTmx
/jYAEHnWJgXtdmXsqo+8zECseoXMnX7oVQNZikGtcCchZrVMQbOUYcWGFxiU
pQwW1a8Wh6TfRJ9/Tn8Lk9df91Fs1apVKSkpS5YssdlsQ95MsxS1OqIRRpr0
t5GUff/998//+tfPpaYWPPLIM8888/TTTz/11FNPPvlkXl7eE0888fjjjysU
ikcfffSRRx7Jzc19+OGH5XL5gw8+uHz58vvvv5+mJffee69MJpso2LlzZ6y/
DQBEnLWpjOdVnYR06dW8rMxq1ct4uUEYEssuBqkHshSZTG1gr5wGOS/TG4cX
G14A51KCIvHmam4ms2aROXNIa6u3Yg0NDVOmTDnssMOGH0daWliW8tRTEQ0y
0iS+jSTru+/IY48JA6hp4krz1WCtXbuW47iHHnoojLEBgGQJWYqyw0k6NUU8
X2Yl5jIZX6TpIPYOFc+rDWaxmJnmMLyqw046NCqazJhHFBtRwAVdekCk3Fz0
+HLMMWT8ePL1196K0cxk4cKFNEuhucrwdXY7y1LuuityQUaBlLeRlP3ud2Tc
OLLtZ69z//lh6dKlU6dO3b17d1iiAgDJ66p23eQjrxbuzbG3aRTC3wqVZtBt
xnaNyrV4fZvVU7HhBUTo0gMi2eZyOskFF7A5ZsvKvBWz2Wz0IJKSkvLxxx97
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
uRy7dpGJE1n7yciRTRf87DMyejQtWJGWpunZcyjNJ3369Fm5cmVZWVl4agoA
ANB+IaW0zLffkjvuYPkkJYUsXkwaeVi4ZvDs7NmepKSVXbpk0HzSt29flUpV
Xl4evtoCAAC0Z3y1tq5IxLt0if2r07FRsgsXsid6AqmsJFota2LZsuWkQqHo
2rUbzSeDBw9+5513MH8sAABAiyCfNKOqivzzn+SWW9hTPNKfLlcTxffvJzEx
h5KTn+7UKZnmkzFjxnz00UdYfwcAAOAyIKU0ikaLDz8kN97I+ne6dSOrVjVW
UBDYWj3z55O9e/f+5je/iY2No/kkKyvryy+/DGN1AQAAOhqklEY99hjLJ+np
5NVXG5tC9sIFkptL+valBT9LTr6bhpP4+PiZM2daLJYwVxYAAKDjQUqp49Il
snYtOXGCvf7qK7JyJWn8YeFPPyU9eng5bmNS0i00nyQnp8ydO/eXX34JX20B
AAA6NKQUn/JysmYNychg7SdLlzZR0OUidjstXv7KK28mJg4SFy/uvnTp0lOn
ToWtsgAAANEAKYXJzSV9+rB8MmgQUat9j/M0UFVF/vxnkprqGjxYmZ6eTvPJ
gAEDVq9ejcnZAAAAWkNUp5SzZ30vpk4lw4aR999ns8gG4nCwf3/66acBA/jY
WPbwTmZm5oYNGyoqKsJVVwAAgKgTpSnFYmGDY5OTyeHD7M9Tp0gjDwt/+im5
++7K2Nht48ZN4piYqVOnfkq3AgAAQCuLupSycyeNHaxzJzaWPPAAOXgwYKmL
F8m6dWT48HMcp4qJuZ6mk5SUznPmzDlw4ECY6wsAABC1oiul2O0snKSmkrlz
yaFDTRQsKCiKiZkXE3MVzScZGdfm5uaerekeAgAAgLDo+CnF5SLLl5Oa09y8
mZw+HbDgwYPkmWfI7bd/Nm3atNjYWJpP7rjjzo8//hgzxwIAALSJjpxSiopY
7EhJYf07mZmkyWV0ysrKMjPf4biRNJwkJiY98cQTmJkNAACgbXXYlPLuu6xz
h+aTe+4hjQx29XrJxo3k5puPPvXU8927d6f5JD293/Lly0tLS8NcWQAAAGio
Q6UUGjs2byYmE3t95Ah5/HFSWBiw4LlzbFrZ3r2/5riHOS6e5pOxY8dqtdpL
jcyUAgAAAOHXQVIKjR2rVpFrr2WNJw8+2HTZkyfLU1Pf47hbaTiJjU146KHf
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
   "], {{0, 0}, {738, 499}}, {0, 
   255},
   ColorFunction->RGBColor],
  ImageSize->{738, 499},
  PlotRange->{{0, 738}, {0, 499}}]], "Output",
 CellChangeTimes->{
  3.656948307265501*^9, 3.656970590521762*^9, 3.656972213485943*^9, 
   3.656972272372868*^9, {3.656972343676572*^9, 3.656972367678722*^9}, 
   3.6569727626554937`*^9, 3.6573087702107677`*^9, 3.657310870325967*^9, {
   3.657310998283456*^9, 3.657311023863071*^9}, 3.657311058382001*^9, {
   3.657311114892578*^9, 3.657311142374649*^9}, {3.657311172852482*^9, 
   3.657311230508973*^9}, {3.657311261522378*^9, 3.6573112685493383`*^9}, {
   3.657311326468094*^9, 3.657311567439302*^9}, {3.657311708777952*^9, 
   3.657311971908103*^9}, {3.657312038136359*^9, 3.657312050268931*^9}, 
   3.657312092387542*^9, {3.657312127339259*^9, 3.657312159760005*^9}, {
   3.657312196708424*^9, 3.657312212382554*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotAMB", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tAMB", "[", "p", "]"}], ",", 
       RowBox[{"zAMB", "[", "p", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Temperature [K]\>\"", ",", "\"\<z [m]\>\""}], "}"}]}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Dashed"}], "}"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotMOIST", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"tMOIST", "[", "p", "]"}], ",", 
       RowBox[{"zMOIST", "[", "p", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Temperature [K]\>\"", ",", "\"\<z [m]\>\""}], "}"}]}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "DotDashed"}], "}"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotEYE", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"tEYE", "[", "p", "]"}], ",", 
        RowBox[{"zEYE", "[", "p", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Temperature [K]\>\"", ",", "\"\<z [m]\>\""}], "}"}]}], 
      ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pp", " ", "=", " ", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"plotAMB", ",", "plotMOIST", ",", "plotEYE"}], "}"}], ",", " ", 
      RowBox[{"ScalingFunctions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Identity", ",", "\"\<Reverse\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"292", ",", "301"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "500"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"Axes", "\[Rule]", "None"}], ",", " ", 
      RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"plotAMB", ",", "plotMOIST", ",", "plotEYE", ",", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Red", ",", "Dashed"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", "DotDashed"}], "}"}], ",", "Black"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Ambient temperature\>\"", ",", "\"\<moist temperature\>\"", 
              ",", "\"\<eye temperature\>\""}], "}"}]}], "]"}]}]}], "]"}]}], 
      "}"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<temperature vs. Altitude, for ambient, eyewall, eye\>\""}], ",", 
     RowBox[{"FormatType", "\[Rule]", "TraditionalForm"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"Inset", "[", 
       RowBox[{"pp", ",", 
        RowBox[{"{", 
         RowBox[{"245", ",", "3000"}], "}"}]}], "]"}]}]}], "]"}], " ", "//", 
   " ", "Rasterize"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.656948537927387*^9, 3.6569485819652443`*^9}, {
  3.657310917468308*^9, 3.6573109256899757`*^9}, {3.6573122445703583`*^9, 
  3.657312340938367*^9}, {3.657312382191928*^9, 3.6573124335014753`*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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

   "], {{0, 0}, {688, 452}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{688, 452},
  PlotRange->{{0, 688}, {0, 452}}]], "Output",
 CellChangeTimes->{{3.6569485717169523`*^9, 3.6569485824675922`*^9}, 
   3.656970590723571*^9, 3.6569722136963053`*^9, 3.656972272521933*^9, {
   3.656972343825287*^9, 3.656972367823269*^9}, 3.656972762802271*^9, 
   3.657310926131819*^9, {3.6573122892384768`*^9, 3.6573123418802032`*^9}, {
   3.657312391380087*^9, 3.657312434079608*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotAMB", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Rho]AMB", "[", "p", "]"}], ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Density [kg/m^3]\>\"", ",", "\"\<p [Pa]\>\""}], "}"}]}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Dashed"}], "}"}], "}"}]}], ",", 
     RowBox[{"ScalingFunctions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Identity", ",", "\"\<Reverse\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotMOIST", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Rho]MOIST", "[", "p", "]"}], ",", "p"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Density [kg/m^3]\>\"", ",", "\"\<p [Pa]\>\""}], "}"}]}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "DotDashed"}], "}"}], "}"}]}], ",", 
     RowBox[{"ScalingFunctions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Identity", ",", "\"\<Reverse\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotEYE", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Rho]EYE", "[", "p", "]"}], ",", "p"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Density [kg/m^3]\>\"", ",", "\"\<p [Pa]\>\""}], "}"}]}], 
      ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
      RowBox[{"ScalingFunctions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Identity", ",", "\"\<Reverse\>\""}], "}"}]}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"plotAMB", ",", "plotMOIST", ",", "plotEYE", ",", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Red", ",", "Dashed"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", "DotDashed"}], "}"}], ",", "Black"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Ambient density\>\"", ",", "\"\<moist density\>\"", ",", 
              "\"\<eye density\>\""}], "}"}]}], "]"}]}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Density vs. p, for ambient, eyewall, eye\>\""}], ",", 
     RowBox[{"FormatType", "\[Rule]", "TraditionalForm"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], " ", "//", " ", 
   "Rasterize"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.657312530403246*^9, 3.657312627530164*^9}, {
  3.657312705179728*^9, 3.6573127086732473`*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
DXrX8uK0NKnHKUYkl5ZZUF1dIk7j4jaodxkqd7Eeb0YZ8Z/j5tQl1bUGcQ4Y
X+A5EpqNLDQ5nm70bxV3K+0zNXNndU2lmu2Ip91bW6V0Lrus1tElu6XzzrSA
2lppAJ8Ft9dWwsa80/Nr6uoq8jPEU9yOI8Xsqqyu3CkersRLV7JYz6uxOWrK
2JnKDQW1rmq1lNGdDmpVi6e/xVftZRmelt+nefCRBMHdj6QRcpra3357WFrT
9txLLLWffFLewgAAAjw7WYc4r7pC3fnEdM3O9LQMdbaU2anpJdWVUnqyKeK1
rHdKozktM1Nal5aeL04bJzUF6anpBeJ8r7r8dP849YbMAkdgnxsy89XSPukh
K2x0PzsDg9/pO2u6VVZXkSfNTE9lk8q5PHFk21Xj/yBBS1GXSKe7XTv5tHS1
WtpTSlqmNATudRgyN/ib8tm7GtmHgYLUlPRqV6eDvvIaz6XkBQbqXdX5KRxf
HW3JjeDuL9JstLlz5yoUzjFjiMkU2PDee3KWBQDQlaMi2x9jKdl9HiZm57il
oeau54S93mM9R+ytDjk57ch29r+atFDnwY+DV/rq9i8dNLoguPuF9M2vuXPn
3XUXO699zYp24fa7SW3tLz8TACDMxMuPiKPdff8d5aI9k8zK7klqYB8Bso8t
X8Xz1z131fVoBtpzzj7h4BaHyjl2OrsvB40eCO4T9+yzz3JsDvn8229nqb1u
TXvbitVshHzHDrlLAwAIoWaXOj1DXXMMQ8SekuyMXbXdn1BXlpehLjvWfqzH
UVvb4+poXXht+RkhDnesvLaKjHR1radvB40eCO4TJF0bbcGCBU8+6aJZfdP6
dt/qdSy12c22AQAA+hmC+0Q8/fTTUmq7XK7mZpKT3d5+7fUstdPT5S4NAABi
E4L7uEl3D5k/f+GDD7r835tsbCQpKWTTJpkrAwCA2MUHyF1IlMnJyRH72pdc
dVUT7WG/8JyPtLWxDX27Mw4AAMDxQWQfB+n+2osWLbLZmi66iCgf8JE1a0ha
Gjnm70UAAAAcGwT3scrOzhb72oscjia62OJsY5GN89oAABAWCO5jsmPHDjG1
L503z71sGWn3tJJrrmGp/cADcpcGAABxAcHdd0899ZSY2ovnzHHTrH76aUKu
vx7f/AIAgHBCcPfRk08+SVN74cLLUlLcCQnkpZfEtR9+SP7wB5krAwCAeILg
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
LraLvbqGKo0YE7qefe56fa4YBFKXLcQOhXqjTlda7+tWtrLc4hQaTOzJuWwQ
Xqg3dGsWLLjBwI5eaLALQkO5hoZsFo0yU8/g9lnp0XOKzawOQ6H4oYBGs0nJ
7ubmJIErz0tZ5n+6wD51sA8Pgs9axZKOZZ/Jf9wqVlyOwe4WnBb2UFkkdNrb
kT27jexBlYW+6p6vIsROxCeXip9EsorM4lKIvy9WpPgJJ6vYSt9m8V1WsHg9
6ssMvmn9WwkAAPQLc6GSVxQeGfcUE4T+nhejh6+iXSofi0SLocpodXbvcbNf
726ryVQv+NwN1qpiFo46UzC43XTf4oA2Yae5VbSLxiKzxxVfxWZqtULKlFA7
DFG2Thk8x11frg5+nOgmmEG0JD6r1B9B/oRyhwhuYqd5pFAXW+udLI+y6MsN
EdymrsHNtvoHlNlN4hRaY+C49fQF5JSy08TshdWbDUarL2RwswddblLTSaid
EHYnWfrcXA0NSU2D/3433f++6AcWLX1bVQr62t3sPjiMuKujvczOH8/6rxIA
AOgfUnB3/i3Nesaq4sauV2pl/alCk3Td9XqxWfDXu9NcHhw9zdLq3cFE8we3
mIzOKrq1vN5ZnhMYOQ+q14u/553FtHEhS/meOwxRtk7Bs/uYM4KFlppjDXU2
NVhkl1FxsY9MEypUcBPBWqVWHnnVnbqiwaHyUMHt/3QhsBeoM/mP6zaq+K5U
he7O7bsGtzH0h49QO6HRy3q52gY320ORVXCH+vsS31uVwaJX0rwtVtO/VhP9
kCN2k3t/mb0H94lUAgAA/aRncLNRaIXugHhutMjUwKYYudm4qJLl0ZGBYiHQ
46YRSvPVYLa73Q12e4NwJLhZ91PKYmuxvzvmZIOt6s4jp+Yilf9cOes4008F
IXYYomzag87RS4/ttMfYS49bKlIqKTCuywJIIUYne+3BlX4+q1HqIdIuv0Wn
Ej94iEGvMbBuo88iBneXc9xsq9YodSrdhex0sTmQfU76WpRag1tgb6KB1qDQ
OTvtjfjYaWUtDW6fufced6idSCvFD0Xs1WsMQqi/L7v4MUIgTq1CGsq2EKde
/BsM/TJ/qcd9/JWEfGEAAHAcega3UStOVRJHWXmV1mS3G4rYRKZSe6AzlVNo
shjZZCrWjHWrFZpye4NdPHesNLNzxwqaaEK9US12tywN+7S8P8GJOAPKP1DM
sBOv4hlYNuKqYGe0HT13GKps1vnTlJvs5nJWiLb7V8MYd71YubrKZHHUiCdb
C6usViPbqzhuIO1ErSssLA7e+cWnZ6drc6osdqtJ3DMtW5w7R8vUm0ylGvZQ
oS4ymdiwgDTCLI4PqMrN1sAb5Que45bOxRcbrVZTqZL1UIN7U5WbzFWFrH25
3VdvLFLQv4Yqc8hJ3j13Ik7RZwci/tP3OVZfz78vZ7FKrJAQg/iapVlw9A3P
rXKEeJm/HNzHXckvz6gHAIA+6hHcDRre/9ueOM3aLOm8qKrIyAbIBUuxSpWr
04hJpcwqZXcSJ4I9MOiq8DezlOaqiy0W/5e3+ZzXaX9bFZhy7KvSqPyzmOhC
vV7FZ/l7q0QoVytzisw9d9iTpVitVOVIU7lVuaUhv2TG7pYuVaBQ0/S3V/ln
oiuytKb/394dcjcIA3EA/8aRcbg4FCqmCjMVg4jBIGoQCEzExAn8RN5DIBBL
LtB1Hdtbu7ZM/H+y4gqpuF64I9wOHYKITGWxwLcfKzANpli2hKUqaYxlts7U
izlwNGnavuH0vXaJp+a0tFKyPBLHqFVRc8wxZef4D8G08ZMYLa9sKoKFjqfF
jXZ5NpBvPc/fCDI0WiizLhsVQtpwoRe/1zxoISpuX/euEmER0g6/USqm6S+3
+YvEfeOVAADA/XANpXsaiOjVtWXMIPKP7zjz1PGxaFPsUtp1m5S3ygvy0/y4
eWLOd4Y+FZWzp7ajK75zdiGJf7NV/iynxO1+SNwAALAzupjjVofTHPfNXKgm
ueX7zdWm2fVVZr7Pl8Jva378Ls7nsld8Gnt5TS/12NmK9k2W642czw4AAAA8
XXy72gMrbgAAAAAAAAAAAIB/4B3DzQ1s
   "], {{0, 0}, {659, 454}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{659, 454},
  PlotRange->{{0, 659}, {0, 454}}]], "Output",
 CellChangeTimes->{3.6573126285186043`*^9, 3.657312709337*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotAMB", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"zAMB", "[", "p", "]"}], ",", 
       RowBox[{"\[Rho]AMB", "[", "p", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Altitude [m]\>\"", ",", "\"\<Density [kg/m^3]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Dashed"}], "}"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotMOIST", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"zAMB", "[", "p", "]"}], ",", 
       RowBox[{"\[Rho]MOIST", "[", "p", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Altitude [m]\>\"", ",", "\"\<Density [kg/m^3]\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "DotDashed"}], "}"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotEYE", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"zAMB", "[", "p", "]"}], ",", 
        RowBox[{"\[Rho]EYE", "[", "p", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "pAMBS", ",", "pTROP"}], "}"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Altitude [m]\>\"", ",", "\"\<Density [kg/m^3]\>\""}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"plotAMB", ",", "plotMOIST", ",", "plotEYE", ",", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"LineLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Red", ",", "Dashed"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", "DotDashed"}], "}"}], ",", "Black"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Ambient density\>\"", ",", "\"\<moist density\>\"", ",", 
              "\"\<eye density\>\""}], "}"}]}], "]"}]}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Density vs. Altitude, for ambient, eyewall, eye\>\""}], ",", 
     RowBox[{"FormatType", "\[Rule]", "TraditionalForm"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], " ", "//", " ", 
   "Rasterize"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.657312739666803*^9, 3.6573127814063473`*^9}, {
  3.657312811706711*^9, 3.657312843111381*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt3Ql8E2X+P/BJD0rLfaqgLgoieBTFFXVxV6u4Kh71RrEe6zEqq7GoRKsG
tXZ1a3XXqPtrdaPVKAb/tSpZbZVarSVKq0ZNlQRDDKXSQAspJAQSmrTP/3lm
kvRKKUfbyaSf94t1k5nJzDdpkk+eZ47nmNvuv+q2RI7jflRw3MsJHMduEwAA
AAAAAACQP57npS4BAAAA9heCGwAAQEYQ3AAAADKC4AYAAJARBDcAAICM8GFS
FwIAAAB9Q2QDAADICIIbAABARmQX3EG/1+sPdp7g9XqDPZYY5Kr2T/dS+34u
kun+GvaotK8FJMNew86Vye4N06Pgjqn7XCx23jzdyefNAyAPsRvcQUcB34mq
1E2IxRCalldqYcu4LeFlCsxucYIhNCHP4JK2fsZfqsozi19RPUrt87lIxW0r
U4Zec63DyyYYCkITSi0uEuVF7r6AdJVXqMJvF4OZVSKHN4y3VMXrLKE/efeC
SfQiY+TN47eV8ko9fY/4G8o6f1jV+kjxsnnzAMhI7AY3IQ1VGvoNXOtk4REM
BklTFf202/ws0/N4vqxht7GAVxscdK6jLI9Xl/mJkz7A4KBL+MvUdIJDosKD
DRZTbW2tqbaqQKnUVZjdwWD3Uvt+LpLVXsBeQ/aam3W0ekuTUUNj0B/6cs5z
BLu/yD0WkKp0r17JF5qa2C0aKLzOLY83DCs7FNzdCxbfBT2KjJk3j9ei53kW
3LQ24cOqE0pmH1aRfN48AHISy8FNOU30m4HX1TrpbS8NksJacbqpUKU1b9Yp
VbVi+8Jdq1Lq3F6ziteKv9rdwhISVe1lRefpKipK1bxSo69o8ru7lbqlz+ci
Uen0u5i2f0zCd7HLqFFqzWadqrBWfFFdWl5lau7+IndfwCtR5cLLrhMa2mJw
9/0ix8QbpiO4e7zDhVp7FNn3B2HQSrdFgpvym/T0d4S6tqkjfeXz5gGQkxgP
biroMql5Xlvb5LXQD7lJnGjWqun3lV4V/r7ymlRKPf0eVivDXwtmrXTBLTYf
NE0kaFCpha5yd7dSt/T5XCSqnPgtrLdZpdHrC+n/680ui04d/mqlPz/U9Lu3
24vcfQHpvnu9NtYNq1Sxrle9xS2TN4y/NBLc3QsOBXe3Ivt+XoNVetDRObiZ
JvZLWxnJbhm9eQBkJIaDO2gzVllc7BvAa6Yhomu26CL9cuy7zryFtbAsbIJf
+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
AABDzv8HCiw5AA==
   "], {{0, 0}, {659, 463}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{659, 463},
  PlotRange->{{0, 659}, {0, 463}}]], "Output",
 CellChangeTimes->{
  3.657312782312805*^9, {3.657312817767438*^9, 3.657312843673222*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1104, 934},
WindowMargins->{{-3149, Automatic}, {Automatic, 49}},
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 17, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 97, 1, 65, "Chapter"],
Cell[680, 25, 3518, 95, 840, "Text"],
Cell[4201, 122, 1548, 37, 216, "Input"],
Cell[5752, 161, 172, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[5949, 168, 590, 10, 28, "Input"],
Cell[6542, 180, 681, 10, 28, "Output"]
}, Open  ]],
Cell[7238, 193, 717, 21, 51, "Text"],
Cell[7958, 216, 3578, 92, 131, "Input"],
Cell[11539, 310, 1188, 36, 166, "Text"],
Cell[12730, 348, 1535, 48, 80, "Input"],
Cell[CellGroupData[{
Cell[14290, 400, 109, 1, 35, "Subsubsection"],
Cell[14402, 403, 878, 26, 91, "Text"],
Cell[15283, 431, 1439, 38, 80, "Input"],
Cell[16725, 471, 651, 21, 40, "Text"],
Cell[17379, 494, 1169, 31, 63, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18585, 530, 116, 1, 35, "Subsubsection"],
Cell[18704, 533, 2275, 65, 286, "Text"],
Cell[CellGroupData[{
Cell[21004, 602, 1635, 45, 63, "Input"],
Cell[22642, 649, 1032, 17, 22, "Print"]
}, Open  ]],
Cell[23689, 669, 2624, 79, 238, "Text"],
Cell[CellGroupData[{
Cell[26338, 752, 1819, 50, 97, "Input"],
Cell[28160, 804, 11756, 228, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39953, 1037, 1258, 31, 63, "Input"],
Cell[41214, 1070, 23796, 393, 278, "Output"]
}, Open  ]],
Cell[65025, 1466, 530, 8, 68, "Text"],
Cell[CellGroupData[{
Cell[65580, 1478, 208, 5, 28, "Input"],
Cell[65791, 1485, 235, 3, 28, "Output"]
}, Open  ]],
Cell[66041, 1491, 456, 8, 49, "Text"],
Cell[CellGroupData[{
Cell[66522, 1503, 987, 25, 114, "Input"],
Cell[67512, 1530, 1360, 24, 38, "Print"]
}, Open  ]],
Cell[68887, 1557, 5016, 138, 607, "Text"],
Cell[73906, 1697, 3481, 96, 165, "Input"],
Cell[77390, 1795, 256, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[77671, 1804, 1080, 31, 97, "Input"],
Cell[78754, 1837, 676, 13, 38, "Print"]
}, Open  ]],
Cell[79445, 1853, 871, 15, 106, "Text"],
Cell[CellGroupData[{
Cell[80341, 1872, 14698, 331, 1015, "Input"],
Cell[CellGroupData[{
Cell[95064, 2207, 209, 3, 22, "Print"],
Cell[95276, 2212, 770, 15, 22, "Print"],
Cell[96049, 2229, 547, 10, 22, "Print"],
Cell[96599, 2241, 936, 17, 22, "Print"],
Cell[97538, 2260, 318, 7, 22, "Print"],
Cell[97859, 2269, 313, 7, 22, "Print"],
Cell[98175, 2278, 316, 7, 21, "Print"],
Cell[98494, 2287, 355, 7, 21, "Print"],
Cell[98852, 2296, 772, 15, 22, "Print"],
Cell[99627, 2313, 545, 10, 22, "Print"],
Cell[100175, 2325, 942, 18, 22, "Print"],
Cell[101120, 2345, 318, 7, 22, "Print"],
Cell[101441, 2354, 311, 7, 22, "Print"],
Cell[101755, 2363, 317, 7, 21, "Print"],
Cell[102075, 2372, 355, 7, 21, "Print"],
Cell[102433, 2381, 770, 15, 22, "Print"],
Cell[103206, 2398, 549, 10, 22, "Print"],
Cell[103758, 2410, 939, 18, 22, "Print"],
Cell[104700, 2430, 321, 7, 22, "Print"],
Cell[105024, 2439, 315, 7, 22, "Print"],
Cell[105342, 2448, 319, 7, 21, "Print"],
Cell[105664, 2457, 355, 7, 21, "Print"],
Cell[106022, 2466, 767, 15, 22, "Print"],
Cell[106792, 2483, 547, 10, 22, "Print"],
Cell[107342, 2495, 934, 17, 22, "Print"],
Cell[108279, 2514, 321, 7, 22, "Print"],
Cell[108603, 2523, 312, 7, 22, "Print"],
Cell[108918, 2532, 317, 7, 21, "Print"],
Cell[109238, 2541, 355, 7, 21, "Print"],
Cell[109596, 2550, 773, 15, 22, "Print"],
Cell[110372, 2567, 547, 10, 22, "Print"],
Cell[110922, 2579, 934, 17, 22, "Print"],
Cell[111859, 2598, 321, 7, 22, "Print"],
Cell[112183, 2607, 315, 7, 22, "Print"],
Cell[112501, 2616, 316, 7, 21, "Print"],
Cell[112820, 2625, 355, 7, 21, "Print"],
Cell[113178, 2634, 773, 15, 22, "Print"],
Cell[113954, 2651, 547, 10, 22, "Print"],
Cell[114504, 2663, 939, 18, 22, "Print"],
Cell[115446, 2683, 321, 7, 22, "Print"],
Cell[115770, 2692, 315, 7, 22, "Print"],
Cell[116088, 2701, 316, 7, 21, "Print"],
Cell[116407, 2710, 355, 7, 21, "Print"],
Cell[116765, 2719, 770, 15, 22, "Print"],
Cell[117538, 2736, 547, 11, 22, "Print"],
Cell[118088, 2749, 936, 17, 22, "Print"],
Cell[119027, 2768, 322, 7, 22, "Print"],
Cell[119352, 2777, 315, 7, 22, "Print"],
Cell[119670, 2786, 321, 7, 21, "Print"],
Cell[119994, 2795, 355, 7, 21, "Print"],
Cell[120352, 2804, 773, 15, 22, "Print"],
Cell[121128, 2821, 550, 10, 22, "Print"],
Cell[121681, 2833, 933, 17, 22, "Print"],
Cell[122617, 2852, 322, 7, 22, "Print"],
Cell[122942, 2861, 315, 7, 22, "Print"],
Cell[123260, 2870, 313, 7, 21, "Print"],
Cell[123576, 2879, 357, 7, 21, "Print"],
Cell[123936, 2888, 766, 15, 22, "Print"],
Cell[124705, 2905, 552, 10, 22, "Print"],
Cell[125260, 2917, 934, 17, 22, "Print"],
Cell[126197, 2936, 320, 7, 22, "Print"],
Cell[126520, 2945, 314, 7, 22, "Print"],
Cell[126837, 2954, 321, 7, 21, "Print"],
Cell[127161, 2963, 355, 7, 21, "Print"],
Cell[127519, 2972, 772, 15, 22, "Print"],
Cell[128294, 2989, 552, 10, 22, "Print"],
Cell[128849, 3001, 931, 17, 22, "Print"],
Cell[129783, 3020, 323, 7, 22, "Print"],
Cell[130109, 3029, 316, 7, 22, "Print"],
Cell[130428, 3038, 319, 7, 21, "Print"],
Cell[130750, 3047, 354, 6, 21, "Print"],
Cell[131107, 3055, 773, 15, 22, "Print"],
Cell[131883, 3072, 550, 10, 22, "Print"],
Cell[132436, 3084, 944, 18, 22, "Print"],
Cell[133383, 3104, 323, 7, 22, "Print"],
Cell[133709, 3113, 317, 7, 22, "Print"],
Cell[134029, 3122, 319, 7, 21, "Print"],
Cell[134351, 3131, 353, 6, 21, "Print"],
Cell[134707, 3139, 767, 15, 22, "Print"],
Cell[135477, 3156, 547, 10, 22, "Print"],
Cell[136027, 3168, 934, 17, 22, "Print"],
Cell[136964, 3187, 318, 7, 22, "Print"],
Cell[137285, 3196, 317, 7, 22, "Print"],
Cell[137605, 3205, 318, 7, 21, "Print"],
Cell[137926, 3214, 356, 6, 21, "Print"],
Cell[138285, 3222, 772, 15, 22, "Print"],
Cell[139060, 3239, 550, 11, 22, "Print"],
Cell[139613, 3252, 927, 17, 22, "Print"],
Cell[140543, 3271, 323, 7, 22, "Print"],
Cell[140869, 3280, 319, 7, 22, "Print"],
Cell[141191, 3289, 320, 7, 21, "Print"],
Cell[141514, 3298, 354, 6, 21, "Print"],
Cell[141871, 3306, 769, 15, 22, "Print"],
Cell[142643, 3323, 552, 10, 22, "Print"],
Cell[143198, 3335, 939, 18, 22, "Print"],
Cell[144140, 3355, 325, 7, 22, "Print"],
Cell[144468, 3364, 317, 7, 22, "Print"],
Cell[144788, 3373, 318, 7, 21, "Print"],
Cell[145109, 3382, 354, 6, 21, "Print"],
Cell[145466, 3390, 770, 15, 22, "Print"],
Cell[146239, 3407, 547, 10, 22, "Print"],
Cell[146789, 3419, 939, 18, 22, "Print"],
Cell[147731, 3439, 322, 7, 22, "Print"],
Cell[148056, 3448, 316, 7, 22, "Print"],
Cell[148375, 3457, 320, 7, 21, "Print"],
Cell[148698, 3466, 354, 6, 21, "Print"],
Cell[149055, 3474, 773, 15, 22, "Print"],
Cell[149831, 3491, 543, 10, 22, "Print"],
Cell[150377, 3503, 939, 17, 22, "Print"],
Cell[151319, 3522, 324, 7, 22, "Print"],
Cell[151646, 3531, 316, 7, 22, "Print"],
Cell[151965, 3540, 323, 7, 21, "Print"],
Cell[152291, 3549, 354, 6, 21, "Print"],
Cell[152648, 3557, 775, 15, 22, "Print"],
Cell[153426, 3574, 552, 10, 22, "Print"],
Cell[153981, 3586, 938, 18, 22, "Print"],
Cell[154922, 3606, 322, 7, 22, "Print"],
Cell[155247, 3615, 315, 7, 22, "Print"],
Cell[155565, 3624, 321, 7, 21, "Print"],
Cell[155889, 3633, 356, 6, 21, "Print"],
Cell[156248, 3641, 775, 15, 22, "Print"],
Cell[157026, 3658, 552, 10, 22, "Print"],
Cell[157581, 3670, 937, 17, 22, "Print"],
Cell[158521, 3689, 325, 7, 22, "Print"],
Cell[158849, 3698, 315, 7, 22, "Print"],
Cell[159167, 3707, 316, 7, 23, "Print"],
Cell[159486, 3716, 354, 6, 21, "Print"],
Cell[159843, 3724, 773, 15, 22, "Print"],
Cell[160619, 3741, 547, 10, 22, "Print"],
Cell[161169, 3753, 934, 17, 22, "Print"],
Cell[162106, 3772, 324, 7, 22, "Print"],
Cell[162433, 3781, 321, 7, 22, "Print"],
Cell[162757, 3790, 321, 7, 21, "Print"],
Cell[163081, 3799, 354, 6, 21, "Print"],
Cell[163438, 3807, 770, 15, 22, "Print"],
Cell[164211, 3824, 552, 10, 22, "Print"],
Cell[164766, 3836, 937, 17, 22, "Print"],
Cell[165706, 3855, 324, 7, 22, "Print"],
Cell[166033, 3864, 318, 7, 22, "Print"],
Cell[166354, 3873, 316, 7, 23, "Print"],
Cell[166673, 3882, 356, 6, 21, "Print"],
Cell[167032, 3890, 765, 15, 22, "Print"],
Cell[167800, 3907, 549, 10, 22, "Print"],
Cell[168352, 3919, 936, 17, 22, "Print"],
Cell[169291, 3938, 320, 7, 24, "Print"],
Cell[169614, 3947, 163, 2, 21, "Print"],
Cell[169780, 3951, 765, 15, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[170572, 3970, 382, 9, 106, "Text"],
Cell[170957, 3981, 1732, 52, 97, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172726, 4038, 112, 1, 35, "Subsubsection"],
Cell[172841, 4041, 1681, 43, 248, "Text"],
Cell[174525, 4086, 152, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[174702, 4093, 5460, 129, 165, "Input"],
Cell[180165, 4224, 3892, 80, 265, "Output"]
}, Open  ]],
Cell[184072, 4307, 529, 9, 68, "Text"],
Cell[184604, 4318, 141, 3, 28, "Input"],
Cell[CellGroupData[{
Cell[184770, 4325, 1369, 28, 80, "Input"],
Cell[186142, 4355, 591, 11, 28, "Output"]
}, Open  ]],
Cell[186748, 4369, 129, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[186902, 4374, 410, 11, 28, "Input"],
Cell[187315, 4387, 111, 1, 28, "Output"]
}, Open  ]],
Cell[187441, 4391, 1238, 35, 131, "Text"],
Cell[CellGroupData[{
Cell[188704, 4430, 1046, 26, 97, "Input"],
Cell[189753, 4458, 467, 7, 28, "Output"]
}, Open  ]],
Cell[190235, 4468, 453, 11, 31, "Text"],
Cell[190691, 4481, 3300, 87, 148, "Input"],
Cell[193994, 4570, 180, 2, 30, "Text"],
Cell[194177, 4574, 2769, 78, 182, "Input"],
Cell[CellGroupData[{
Cell[196971, 4656, 996, 25, 46, "Input"],
Cell[197970, 4683, 9895, 165, 325, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207902, 4853, 922, 24, 46, "Input"],
Cell[208827, 4879, 11091, 185, 348, "Output"]
}, Open  ]],
Cell[219933, 5067, 1778, 53, 80, "Input"],
Cell[CellGroupData[{
Cell[221736, 5124, 4847, 122, 284, "Input"],
Cell[226586, 5248, 24007, 396, 487, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250630, 5649, 4270, 106, 233, "Input"],
Cell[254903, 5757, 28921, 477, 483, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283861, 6239, 4296, 107, 250, "Input"],
Cell[288160, 6348, 27468, 452, 472, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315665, 6805, 3536, 96, 216, "Input"],
Cell[319204, 6903, 28480, 470, 472, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347721, 7378, 5922, 156, 301, "Input"],
Cell[353646, 7536, 43850, 721, 514, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397533, 8262, 4592, 122, 301, "Input"],
Cell[402128, 8386, 44517, 732, 467, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446682, 9123, 3857, 101, 233, "Input"],
Cell[450542, 9226, 27985, 461, 469, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[478564, 9692, 3705, 98, 233, "Input"],
Cell[482272, 9792, 27509, 454, 478, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
